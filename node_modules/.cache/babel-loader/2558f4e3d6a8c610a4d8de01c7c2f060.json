{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildValuesAndSeparateKeysToObjectUnmapper = exports.buildValuesAndSeparateKeysToObjectMapper = void 0;\n\nfunction buildValuesAndSeparateKeysToObjectMapper(keys, noKeyValue) {\n  return function valuesAndSeparateKeysToObjectMapper(gs) {\n    const obj = {};\n\n    for (let idx = 0; idx !== keys.length; ++idx) {\n      const valueWrapper = gs[idx];\n\n      if (valueWrapper !== noKeyValue) {\n        Object.defineProperty(obj, keys[idx], {\n          value: valueWrapper,\n          configurable: true,\n          enumerable: true,\n          writable: true\n        });\n      }\n    }\n\n    return obj;\n  };\n}\n\nexports.buildValuesAndSeparateKeysToObjectMapper = buildValuesAndSeparateKeysToObjectMapper;\n\nfunction buildValuesAndSeparateKeysToObjectUnmapper(keys, noKeyValue) {\n  return function valuesAndSeparateKeysToObjectUnmapper(value) {\n    if (typeof value !== 'object' || value === null) {\n      throw new Error('Incompatible instance received: should be a non-null object');\n    }\n\n    if (!('constructor' in value) || value.constructor !== Object) {\n      throw new Error('Incompatible instance received: should be of exact type Object');\n    }\n\n    let extractedPropertiesCount = 0;\n    const extractedValues = [];\n\n    for (let idx = 0; idx !== keys.length; ++idx) {\n      const descriptor = Object.getOwnPropertyDescriptor(value, keys[idx]);\n\n      if (descriptor !== undefined) {\n        if (!descriptor.configurable || !descriptor.enumerable || !descriptor.writable) {\n          throw new Error('Incompatible instance received: should contain only c/e/w properties');\n        }\n\n        if (descriptor.get !== undefined || descriptor.set !== undefined) {\n          throw new Error('Incompatible instance received: should contain only no get/set properties');\n        }\n\n        ++extractedPropertiesCount;\n        extractedValues.push(descriptor.value);\n      } else {\n        extractedValues.push(noKeyValue);\n      }\n    }\n\n    const namePropertiesCount = Object.getOwnPropertyNames(value).length;\n    const symbolPropertiesCount = Object.getOwnPropertySymbols(value).length;\n\n    if (extractedPropertiesCount !== namePropertiesCount + symbolPropertiesCount) {\n      throw new Error('Incompatible instance received: should not contain extra properties');\n    }\n\n    return extractedValues;\n  };\n}\n\nexports.buildValuesAndSeparateKeysToObjectUnmapper = buildValuesAndSeparateKeysToObjectUnmapper;","map":{"version":3,"names":["Object","defineProperty","exports","value","buildValuesAndSeparateKeysToObjectUnmapper","buildValuesAndSeparateKeysToObjectMapper","keys","noKeyValue","valuesAndSeparateKeysToObjectMapper","gs","obj","idx","length","valueWrapper","configurable","enumerable","writable","valuesAndSeparateKeysToObjectUnmapper","Error","constructor","extractedPropertiesCount","extractedValues","descriptor","getOwnPropertyDescriptor","undefined","get","set","push","namePropertiesCount","getOwnPropertyNames","symbolPropertiesCount","getOwnPropertySymbols"],"sources":["/Users/tranminhtrung/Desktop/learn_web3/gamble/node_modules/fast-check/lib/arbitrary/_internals/mappers/ValuesAndSeparateKeysToObject.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildValuesAndSeparateKeysToObjectUnmapper = exports.buildValuesAndSeparateKeysToObjectMapper = void 0;\nfunction buildValuesAndSeparateKeysToObjectMapper(keys, noKeyValue) {\n    return function valuesAndSeparateKeysToObjectMapper(gs) {\n        const obj = {};\n        for (let idx = 0; idx !== keys.length; ++idx) {\n            const valueWrapper = gs[idx];\n            if (valueWrapper !== noKeyValue) {\n                Object.defineProperty(obj, keys[idx], {\n                    value: valueWrapper,\n                    configurable: true,\n                    enumerable: true,\n                    writable: true,\n                });\n            }\n        }\n        return obj;\n    };\n}\nexports.buildValuesAndSeparateKeysToObjectMapper = buildValuesAndSeparateKeysToObjectMapper;\nfunction buildValuesAndSeparateKeysToObjectUnmapper(keys, noKeyValue) {\n    return function valuesAndSeparateKeysToObjectUnmapper(value) {\n        if (typeof value !== 'object' || value === null) {\n            throw new Error('Incompatible instance received: should be a non-null object');\n        }\n        if (!('constructor' in value) || value.constructor !== Object) {\n            throw new Error('Incompatible instance received: should be of exact type Object');\n        }\n        let extractedPropertiesCount = 0;\n        const extractedValues = [];\n        for (let idx = 0; idx !== keys.length; ++idx) {\n            const descriptor = Object.getOwnPropertyDescriptor(value, keys[idx]);\n            if (descriptor !== undefined) {\n                if (!descriptor.configurable || !descriptor.enumerable || !descriptor.writable) {\n                    throw new Error('Incompatible instance received: should contain only c/e/w properties');\n                }\n                if (descriptor.get !== undefined || descriptor.set !== undefined) {\n                    throw new Error('Incompatible instance received: should contain only no get/set properties');\n                }\n                ++extractedPropertiesCount;\n                extractedValues.push(descriptor.value);\n            }\n            else {\n                extractedValues.push(noKeyValue);\n            }\n        }\n        const namePropertiesCount = Object.getOwnPropertyNames(value).length;\n        const symbolPropertiesCount = Object.getOwnPropertySymbols(value).length;\n        if (extractedPropertiesCount !== namePropertiesCount + symbolPropertiesCount) {\n            throw new Error('Incompatible instance received: should not contain extra properties');\n        }\n        return extractedValues;\n    };\n}\nexports.buildValuesAndSeparateKeysToObjectUnmapper = buildValuesAndSeparateKeysToObjectUnmapper;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,0CAAR,GAAqDF,OAAO,CAACG,wCAAR,GAAmD,KAAK,CAA7G;;AACA,SAASA,wCAAT,CAAkDC,IAAlD,EAAwDC,UAAxD,EAAoE;EAChE,OAAO,SAASC,mCAAT,CAA6CC,EAA7C,EAAiD;IACpD,MAAMC,GAAG,GAAG,EAAZ;;IACA,KAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,KAAKL,IAAI,CAACM,MAA/B,EAAuC,EAAED,GAAzC,EAA8C;MAC1C,MAAME,YAAY,GAAGJ,EAAE,CAACE,GAAD,CAAvB;;MACA,IAAIE,YAAY,KAAKN,UAArB,EAAiC;QAC7BP,MAAM,CAACC,cAAP,CAAsBS,GAAtB,EAA2BJ,IAAI,CAACK,GAAD,CAA/B,EAAsC;UAClCR,KAAK,EAAEU,YAD2B;UAElCC,YAAY,EAAE,IAFoB;UAGlCC,UAAU,EAAE,IAHsB;UAIlCC,QAAQ,EAAE;QAJwB,CAAtC;MAMH;IACJ;;IACD,OAAON,GAAP;EACH,CAdD;AAeH;;AACDR,OAAO,CAACG,wCAAR,GAAmDA,wCAAnD;;AACA,SAASD,0CAAT,CAAoDE,IAApD,EAA0DC,UAA1D,EAAsE;EAClE,OAAO,SAASU,qCAAT,CAA+Cd,KAA/C,EAAsD;IACzD,IAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,KAAK,IAA3C,EAAiD;MAC7C,MAAM,IAAIe,KAAJ,CAAU,6DAAV,CAAN;IACH;;IACD,IAAI,EAAE,iBAAiBf,KAAnB,KAA6BA,KAAK,CAACgB,WAAN,KAAsBnB,MAAvD,EAA+D;MAC3D,MAAM,IAAIkB,KAAJ,CAAU,gEAAV,CAAN;IACH;;IACD,IAAIE,wBAAwB,GAAG,CAA/B;IACA,MAAMC,eAAe,GAAG,EAAxB;;IACA,KAAK,IAAIV,GAAG,GAAG,CAAf,EAAkBA,GAAG,KAAKL,IAAI,CAACM,MAA/B,EAAuC,EAAED,GAAzC,EAA8C;MAC1C,MAAMW,UAAU,GAAGtB,MAAM,CAACuB,wBAAP,CAAgCpB,KAAhC,EAAuCG,IAAI,CAACK,GAAD,CAA3C,CAAnB;;MACA,IAAIW,UAAU,KAAKE,SAAnB,EAA8B;QAC1B,IAAI,CAACF,UAAU,CAACR,YAAZ,IAA4B,CAACQ,UAAU,CAACP,UAAxC,IAAsD,CAACO,UAAU,CAACN,QAAtE,EAAgF;UAC5E,MAAM,IAAIE,KAAJ,CAAU,sEAAV,CAAN;QACH;;QACD,IAAII,UAAU,CAACG,GAAX,KAAmBD,SAAnB,IAAgCF,UAAU,CAACI,GAAX,KAAmBF,SAAvD,EAAkE;UAC9D,MAAM,IAAIN,KAAJ,CAAU,2EAAV,CAAN;QACH;;QACD,EAAEE,wBAAF;QACAC,eAAe,CAACM,IAAhB,CAAqBL,UAAU,CAACnB,KAAhC;MACH,CATD,MAUK;QACDkB,eAAe,CAACM,IAAhB,CAAqBpB,UAArB;MACH;IACJ;;IACD,MAAMqB,mBAAmB,GAAG5B,MAAM,CAAC6B,mBAAP,CAA2B1B,KAA3B,EAAkCS,MAA9D;IACA,MAAMkB,qBAAqB,GAAG9B,MAAM,CAAC+B,qBAAP,CAA6B5B,KAA7B,EAAoCS,MAAlE;;IACA,IAAIQ,wBAAwB,KAAKQ,mBAAmB,GAAGE,qBAAvD,EAA8E;MAC1E,MAAM,IAAIZ,KAAJ,CAAU,qEAAV,CAAN;IACH;;IACD,OAAOG,eAAP;EACH,CA/BD;AAgCH;;AACDnB,OAAO,CAACE,0CAAR,GAAqDA,0CAArD"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.unsafeUniformIntDistribution = void 0;\n\nvar UnsafeUniformIntDistributionInternal_1 = require(\"./internals/UnsafeUniformIntDistributionInternal\");\n\nvar ArrayInt_1 = require(\"./internals/ArrayInt\");\n\nvar UnsafeUniformArrayIntDistributionInternal_1 = require(\"./internals/UnsafeUniformArrayIntDistributionInternal\");\n\nvar safeNumberMaxSafeInteger = Number.MAX_SAFE_INTEGER;\nvar sharedA = {\n  sign: 1,\n  data: [0, 0]\n};\nvar sharedB = {\n  sign: 1,\n  data: [0, 0]\n};\nvar sharedC = {\n  sign: 1,\n  data: [0, 0]\n};\nvar sharedData = [0, 0];\n\nfunction uniformLargeIntInternal(from, to, rangeSize, rng) {\n  var rangeSizeArrayIntValue = rangeSize <= safeNumberMaxSafeInteger ? (0, ArrayInt_1.fromNumberToArrayInt64)(sharedC, rangeSize) : (0, ArrayInt_1.substractArrayInt64)(sharedC, (0, ArrayInt_1.fromNumberToArrayInt64)(sharedA, to), (0, ArrayInt_1.fromNumberToArrayInt64)(sharedB, from));\n\n  if (rangeSizeArrayIntValue.data[1] === 0xffffffff) {\n    rangeSizeArrayIntValue.data[0] += 1;\n    rangeSizeArrayIntValue.data[1] = 0;\n  } else {\n    rangeSizeArrayIntValue.data[1] += 1;\n  }\n\n  (0, UnsafeUniformArrayIntDistributionInternal_1.unsafeUniformArrayIntDistributionInternal)(sharedData, rangeSizeArrayIntValue.data, rng);\n  return sharedData[0] * 0x100000000 + sharedData[1] + from;\n}\n\nfunction unsafeUniformIntDistribution(from, to, rng) {\n  var rangeSize = to - from;\n\n  if (rangeSize <= 0xffffffff) {\n    var g = (0, UnsafeUniformIntDistributionInternal_1.unsafeUniformIntDistributionInternal)(rangeSize + 1, rng);\n    return g + from;\n  }\n\n  return uniformLargeIntInternal(from, to, rangeSize, rng);\n}\n\nexports.unsafeUniformIntDistribution = unsafeUniformIntDistribution;","map":{"version":3,"names":["exports","__esModule","unsafeUniformIntDistribution","UnsafeUniformIntDistributionInternal_1","require","ArrayInt_1","UnsafeUniformArrayIntDistributionInternal_1","safeNumberMaxSafeInteger","Number","MAX_SAFE_INTEGER","sharedA","sign","data","sharedB","sharedC","sharedData","uniformLargeIntInternal","from","to","rangeSize","rng","rangeSizeArrayIntValue","fromNumberToArrayInt64","substractArrayInt64","unsafeUniformArrayIntDistributionInternal","g","unsafeUniformIntDistributionInternal"],"sources":["/Users/tranminhtrung/Desktop/learn_web3/gamble/node_modules/pure-rand/lib/distribution/UnsafeUniformIntDistribution.js"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.unsafeUniformIntDistribution = void 0;\nvar UnsafeUniformIntDistributionInternal_1 = require(\"./internals/UnsafeUniformIntDistributionInternal\");\nvar ArrayInt_1 = require(\"./internals/ArrayInt\");\nvar UnsafeUniformArrayIntDistributionInternal_1 = require(\"./internals/UnsafeUniformArrayIntDistributionInternal\");\nvar safeNumberMaxSafeInteger = Number.MAX_SAFE_INTEGER;\nvar sharedA = { sign: 1, data: [0, 0] };\nvar sharedB = { sign: 1, data: [0, 0] };\nvar sharedC = { sign: 1, data: [0, 0] };\nvar sharedData = [0, 0];\nfunction uniformLargeIntInternal(from, to, rangeSize, rng) {\n    var rangeSizeArrayIntValue = rangeSize <= safeNumberMaxSafeInteger\n        ? (0, ArrayInt_1.fromNumberToArrayInt64)(sharedC, rangeSize)\n        : (0, ArrayInt_1.substractArrayInt64)(sharedC, (0, ArrayInt_1.fromNumberToArrayInt64)(sharedA, to), (0, ArrayInt_1.fromNumberToArrayInt64)(sharedB, from));\n    if (rangeSizeArrayIntValue.data[1] === 0xffffffff) {\n        rangeSizeArrayIntValue.data[0] += 1;\n        rangeSizeArrayIntValue.data[1] = 0;\n    }\n    else {\n        rangeSizeArrayIntValue.data[1] += 1;\n    }\n    (0, UnsafeUniformArrayIntDistributionInternal_1.unsafeUniformArrayIntDistributionInternal)(sharedData, rangeSizeArrayIntValue.data, rng);\n    return sharedData[0] * 0x100000000 + sharedData[1] + from;\n}\nfunction unsafeUniformIntDistribution(from, to, rng) {\n    var rangeSize = to - from;\n    if (rangeSize <= 0xffffffff) {\n        var g = (0, UnsafeUniformIntDistributionInternal_1.unsafeUniformIntDistributionInternal)(rangeSize + 1, rng);\n        return g + from;\n    }\n    return uniformLargeIntInternal(from, to, rangeSize, rng);\n}\nexports.unsafeUniformIntDistribution = unsafeUniformIntDistribution;\n"],"mappings":"AAAA;;AACAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,4BAAR,GAAuC,KAAK,CAA5C;;AACA,IAAIC,sCAAsC,GAAGC,OAAO,CAAC,kDAAD,CAApD;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,sBAAD,CAAxB;;AACA,IAAIE,2CAA2C,GAAGF,OAAO,CAAC,uDAAD,CAAzD;;AACA,IAAIG,wBAAwB,GAAGC,MAAM,CAACC,gBAAtC;AACA,IAAIC,OAAO,GAAG;EAAEC,IAAI,EAAE,CAAR;EAAWC,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAjB,CAAd;AACA,IAAIC,OAAO,GAAG;EAAEF,IAAI,EAAE,CAAR;EAAWC,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAjB,CAAd;AACA,IAAIE,OAAO,GAAG;EAAEH,IAAI,EAAE,CAAR;EAAWC,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAjB,CAAd;AACA,IAAIG,UAAU,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAjB;;AACA,SAASC,uBAAT,CAAiCC,IAAjC,EAAuCC,EAAvC,EAA2CC,SAA3C,EAAsDC,GAAtD,EAA2D;EACvD,IAAIC,sBAAsB,GAAGF,SAAS,IAAIZ,wBAAb,GACvB,CAAC,GAAGF,UAAU,CAACiB,sBAAf,EAAuCR,OAAvC,EAAgDK,SAAhD,CADuB,GAEvB,CAAC,GAAGd,UAAU,CAACkB,mBAAf,EAAoCT,OAApC,EAA6C,CAAC,GAAGT,UAAU,CAACiB,sBAAf,EAAuCZ,OAAvC,EAAgDQ,EAAhD,CAA7C,EAAkG,CAAC,GAAGb,UAAU,CAACiB,sBAAf,EAAuCT,OAAvC,EAAgDI,IAAhD,CAAlG,CAFN;;EAGA,IAAII,sBAAsB,CAACT,IAAvB,CAA4B,CAA5B,MAAmC,UAAvC,EAAmD;IAC/CS,sBAAsB,CAACT,IAAvB,CAA4B,CAA5B,KAAkC,CAAlC;IACAS,sBAAsB,CAACT,IAAvB,CAA4B,CAA5B,IAAiC,CAAjC;EACH,CAHD,MAIK;IACDS,sBAAsB,CAACT,IAAvB,CAA4B,CAA5B,KAAkC,CAAlC;EACH;;EACD,CAAC,GAAGN,2CAA2C,CAACkB,yCAAhD,EAA2FT,UAA3F,EAAuGM,sBAAsB,CAACT,IAA9H,EAAoIQ,GAApI;EACA,OAAOL,UAAU,CAAC,CAAD,CAAV,GAAgB,WAAhB,GAA8BA,UAAU,CAAC,CAAD,CAAxC,GAA8CE,IAArD;AACH;;AACD,SAASf,4BAAT,CAAsCe,IAAtC,EAA4CC,EAA5C,EAAgDE,GAAhD,EAAqD;EACjD,IAAID,SAAS,GAAGD,EAAE,GAAGD,IAArB;;EACA,IAAIE,SAAS,IAAI,UAAjB,EAA6B;IACzB,IAAIM,CAAC,GAAG,CAAC,GAAGtB,sCAAsC,CAACuB,oCAA3C,EAAiFP,SAAS,GAAG,CAA7F,EAAgGC,GAAhG,CAAR;IACA,OAAOK,CAAC,GAAGR,IAAX;EACH;;EACD,OAAOD,uBAAuB,CAACC,IAAD,EAAOC,EAAP,EAAWC,SAAX,EAAsBC,GAAtB,CAA9B;AACH;;AACDpB,OAAO,CAACE,4BAAR,GAAuCA,4BAAvC"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AlwaysShrinkableArbitrary = void 0;\n\nconst Arbitrary_1 = require(\"../../check/arbitrary/definition/Arbitrary\");\n\nconst Stream_1 = require(\"../../stream/Stream\");\n\nconst NoUndefinedAsContext_1 = require(\"./helpers/NoUndefinedAsContext\");\n\nclass AlwaysShrinkableArbitrary extends Arbitrary_1.Arbitrary {\n  constructor(arb) {\n    super();\n    this.arb = arb;\n  }\n\n  generate(mrng, biasFactor) {\n    const value = this.arb.generate(mrng, biasFactor);\n    return (0, NoUndefinedAsContext_1.noUndefinedAsContext)(value);\n  }\n\n  canShrinkWithoutContext(value) {\n    return true;\n  }\n\n  shrink(value, context) {\n    if (context === undefined && !this.arb.canShrinkWithoutContext(value)) {\n      return Stream_1.Stream.nil();\n    }\n\n    const safeContext = context !== NoUndefinedAsContext_1.UndefinedContextPlaceholder ? context : undefined;\n    return this.arb.shrink(value, safeContext).map(NoUndefinedAsContext_1.noUndefinedAsContext);\n  }\n\n}\n\nexports.AlwaysShrinkableArbitrary = AlwaysShrinkableArbitrary;","map":{"version":3,"names":["Object","defineProperty","exports","value","AlwaysShrinkableArbitrary","Arbitrary_1","require","Stream_1","NoUndefinedAsContext_1","Arbitrary","constructor","arb","generate","mrng","biasFactor","noUndefinedAsContext","canShrinkWithoutContext","shrink","context","undefined","Stream","nil","safeContext","UndefinedContextPlaceholder","map"],"sources":["/Users/tranminhtrung/Desktop/learn_web3/gamble/node_modules/fast-check/lib/arbitrary/_internals/AlwaysShrinkableArbitrary.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AlwaysShrinkableArbitrary = void 0;\nconst Arbitrary_1 = require(\"../../check/arbitrary/definition/Arbitrary\");\nconst Stream_1 = require(\"../../stream/Stream\");\nconst NoUndefinedAsContext_1 = require(\"./helpers/NoUndefinedAsContext\");\nclass AlwaysShrinkableArbitrary extends Arbitrary_1.Arbitrary {\n    constructor(arb) {\n        super();\n        this.arb = arb;\n    }\n    generate(mrng, biasFactor) {\n        const value = this.arb.generate(mrng, biasFactor);\n        return (0, NoUndefinedAsContext_1.noUndefinedAsContext)(value);\n    }\n    canShrinkWithoutContext(value) {\n        return true;\n    }\n    shrink(value, context) {\n        if (context === undefined && !this.arb.canShrinkWithoutContext(value)) {\n            return Stream_1.Stream.nil();\n        }\n        const safeContext = context !== NoUndefinedAsContext_1.UndefinedContextPlaceholder ? context : undefined;\n        return this.arb.shrink(value, safeContext).map(NoUndefinedAsContext_1.noUndefinedAsContext);\n    }\n}\nexports.AlwaysShrinkableArbitrary = AlwaysShrinkableArbitrary;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,yBAAR,GAAoC,KAAK,CAAzC;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,4CAAD,CAA3B;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,qBAAD,CAAxB;;AACA,MAAME,sBAAsB,GAAGF,OAAO,CAAC,gCAAD,CAAtC;;AACA,MAAMF,yBAAN,SAAwCC,WAAW,CAACI,SAApD,CAA8D;EAC1DC,WAAW,CAACC,GAAD,EAAM;IACb;IACA,KAAKA,GAAL,GAAWA,GAAX;EACH;;EACDC,QAAQ,CAACC,IAAD,EAAOC,UAAP,EAAmB;IACvB,MAAMX,KAAK,GAAG,KAAKQ,GAAL,CAASC,QAAT,CAAkBC,IAAlB,EAAwBC,UAAxB,CAAd;IACA,OAAO,CAAC,GAAGN,sBAAsB,CAACO,oBAA3B,EAAiDZ,KAAjD,CAAP;EACH;;EACDa,uBAAuB,CAACb,KAAD,EAAQ;IAC3B,OAAO,IAAP;EACH;;EACDc,MAAM,CAACd,KAAD,EAAQe,OAAR,EAAiB;IACnB,IAAIA,OAAO,KAAKC,SAAZ,IAAyB,CAAC,KAAKR,GAAL,CAASK,uBAAT,CAAiCb,KAAjC,CAA9B,EAAuE;MACnE,OAAOI,QAAQ,CAACa,MAAT,CAAgBC,GAAhB,EAAP;IACH;;IACD,MAAMC,WAAW,GAAGJ,OAAO,KAAKV,sBAAsB,CAACe,2BAAnC,GAAiEL,OAAjE,GAA2EC,SAA/F;IACA,OAAO,KAAKR,GAAL,CAASM,MAAT,CAAgBd,KAAhB,EAAuBmB,WAAvB,EAAoCE,GAApC,CAAwChB,sBAAsB,CAACO,oBAA/D,CAAP;EACH;;AAlByD;;AAoB9Db,OAAO,CAACE,yBAAR,GAAoCA,yBAApC"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ReplayPath = void 0;\n\nclass ReplayPath {\n  static parse(replayPathStr) {\n    const [serializedCount, serializedChanges] = replayPathStr.split(':');\n    const counts = this.parseCounts(serializedCount);\n    const changes = this.parseChanges(serializedChanges);\n    return this.parseOccurences(counts, changes);\n  }\n\n  static stringify(replayPath) {\n    const occurences = this.countOccurences(replayPath);\n    const serializedCount = this.stringifyCounts(occurences);\n    const serializedChanges = this.stringifyChanges(occurences);\n    return `${serializedCount}:${serializedChanges}`;\n  }\n\n  static intToB64(n) {\n    if (n < 26) return String.fromCharCode(n + 65);\n    if (n < 52) return String.fromCharCode(n + 97 - 26);\n    if (n < 62) return String.fromCharCode(n + 48 - 52);\n    return String.fromCharCode(n === 62 ? 43 : 47);\n  }\n\n  static b64ToInt(c) {\n    if (c >= 'a') return c.charCodeAt(0) - 97 + 26;\n    if (c >= 'A') return c.charCodeAt(0) - 65;\n    if (c >= '0') return c.charCodeAt(0) - 48 + 52;\n    return c === '+' ? 62 : 63;\n  }\n\n  static countOccurences(replayPath) {\n    return replayPath.reduce((counts, cur) => {\n      if (counts.length === 0 || counts[counts.length - 1].count === 64 || counts[counts.length - 1].value !== cur) counts.push({\n        value: cur,\n        count: 1\n      });else counts[counts.length - 1].count += 1;\n      return counts;\n    }, []);\n  }\n\n  static parseOccurences(counts, changes) {\n    const replayPath = [];\n\n    for (let idx = 0; idx !== counts.length; ++idx) {\n      const count = counts[idx];\n      const value = changes[idx];\n\n      for (let num = 0; num !== count; ++num) replayPath.push(value);\n    }\n\n    return replayPath;\n  }\n\n  static stringifyChanges(occurences) {\n    let serializedChanges = '';\n\n    for (let idx = 0; idx < occurences.length; idx += 6) {\n      const changesInt = occurences.slice(idx, idx + 6).reduceRight((prev, cur) => prev * 2 + (cur.value ? 1 : 0), 0);\n      serializedChanges += this.intToB64(changesInt);\n    }\n\n    return serializedChanges;\n  }\n\n  static parseChanges(serializedChanges) {\n    const changesInt = serializedChanges.split('').map(c => this.b64ToInt(c));\n    const changes = [];\n\n    for (let idx = 0; idx !== changesInt.length; ++idx) {\n      let current = changesInt[idx];\n\n      for (let n = 0; n !== 6; ++n, current >>= 1) {\n        changes.push(current % 2 === 1);\n      }\n    }\n\n    return changes;\n  }\n\n  static stringifyCounts(occurences) {\n    return occurences.map(_ref => {\n      let {\n        count\n      } = _ref;\n      return this.intToB64(count - 1);\n    }).join('');\n  }\n\n  static parseCounts(serializedCount) {\n    return serializedCount.split('').map(c => this.b64ToInt(c) + 1);\n  }\n\n}\n\nexports.ReplayPath = ReplayPath;","map":{"version":3,"names":["Object","defineProperty","exports","value","ReplayPath","parse","replayPathStr","serializedCount","serializedChanges","split","counts","parseCounts","changes","parseChanges","parseOccurences","stringify","replayPath","occurences","countOccurences","stringifyCounts","stringifyChanges","intToB64","n","String","fromCharCode","b64ToInt","c","charCodeAt","reduce","cur","length","count","push","idx","num","changesInt","slice","reduceRight","prev","map","current","join"],"sources":["/Users/tranminhtrung/Desktop/learn_web3/gamble/node_modules/fast-check/lib/check/model/ReplayPath.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReplayPath = void 0;\nclass ReplayPath {\n    static parse(replayPathStr) {\n        const [serializedCount, serializedChanges] = replayPathStr.split(':');\n        const counts = this.parseCounts(serializedCount);\n        const changes = this.parseChanges(serializedChanges);\n        return this.parseOccurences(counts, changes);\n    }\n    static stringify(replayPath) {\n        const occurences = this.countOccurences(replayPath);\n        const serializedCount = this.stringifyCounts(occurences);\n        const serializedChanges = this.stringifyChanges(occurences);\n        return `${serializedCount}:${serializedChanges}`;\n    }\n    static intToB64(n) {\n        if (n < 26)\n            return String.fromCharCode(n + 65);\n        if (n < 52)\n            return String.fromCharCode(n + 97 - 26);\n        if (n < 62)\n            return String.fromCharCode(n + 48 - 52);\n        return String.fromCharCode(n === 62 ? 43 : 47);\n    }\n    static b64ToInt(c) {\n        if (c >= 'a')\n            return c.charCodeAt(0) - 97 + 26;\n        if (c >= 'A')\n            return c.charCodeAt(0) - 65;\n        if (c >= '0')\n            return c.charCodeAt(0) - 48 + 52;\n        return c === '+' ? 62 : 63;\n    }\n    static countOccurences(replayPath) {\n        return replayPath.reduce((counts, cur) => {\n            if (counts.length === 0 || counts[counts.length - 1].count === 64 || counts[counts.length - 1].value !== cur)\n                counts.push({ value: cur, count: 1 });\n            else\n                counts[counts.length - 1].count += 1;\n            return counts;\n        }, []);\n    }\n    static parseOccurences(counts, changes) {\n        const replayPath = [];\n        for (let idx = 0; idx !== counts.length; ++idx) {\n            const count = counts[idx];\n            const value = changes[idx];\n            for (let num = 0; num !== count; ++num)\n                replayPath.push(value);\n        }\n        return replayPath;\n    }\n    static stringifyChanges(occurences) {\n        let serializedChanges = '';\n        for (let idx = 0; idx < occurences.length; idx += 6) {\n            const changesInt = occurences\n                .slice(idx, idx + 6)\n                .reduceRight((prev, cur) => prev * 2 + (cur.value ? 1 : 0), 0);\n            serializedChanges += this.intToB64(changesInt);\n        }\n        return serializedChanges;\n    }\n    static parseChanges(serializedChanges) {\n        const changesInt = serializedChanges.split('').map((c) => this.b64ToInt(c));\n        const changes = [];\n        for (let idx = 0; idx !== changesInt.length; ++idx) {\n            let current = changesInt[idx];\n            for (let n = 0; n !== 6; ++n, current >>= 1) {\n                changes.push(current % 2 === 1);\n            }\n        }\n        return changes;\n    }\n    static stringifyCounts(occurences) {\n        return occurences.map(({ count }) => this.intToB64(count - 1)).join('');\n    }\n    static parseCounts(serializedCount) {\n        return serializedCount.split('').map((c) => this.b64ToInt(c) + 1);\n    }\n}\nexports.ReplayPath = ReplayPath;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
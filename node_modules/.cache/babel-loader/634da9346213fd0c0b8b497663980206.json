{"ast":null,"code":"\"use strict\";\n/**\n * Methods for modifying the DOM structure.\n *\n * @module cheerio/manipulation\n */\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clone = exports.text = exports.toString = exports.html = exports.empty = exports.replaceWith = exports.remove = exports.insertBefore = exports.before = exports.insertAfter = exports.after = exports.wrapAll = exports.unwrap = exports.wrapInner = exports.wrap = exports.prepend = exports.append = exports.prependTo = exports.appendTo = exports._makeDomArray = void 0;\n\nvar domhandler_1 = require(\"domhandler\");\n\nvar parse_js_1 = require(\"../parse.js\");\n\nvar static_js_1 = require(\"../static.js\");\n\nvar utils_js_1 = require(\"../utils.js\");\n\nvar domutils_1 = require(\"domutils\");\n/**\n * Create an array of nodes, recursing into arrays and parsing strings if necessary.\n *\n * @private\n * @category Manipulation\n * @param elem - Elements to make an array of.\n * @param clone - Optionally clone nodes.\n * @returns The array of nodes.\n */\n\n\nfunction _makeDomArray(elem, clone) {\n  var _this = this;\n\n  if (elem == null) {\n    return [];\n  }\n\n  if ((0, utils_js_1.isCheerio)(elem)) {\n    return clone ? (0, utils_js_1.cloneDom)(elem.get()) : elem.get();\n  }\n\n  if (Array.isArray(elem)) {\n    return elem.reduce(function (newElems, el) {\n      return newElems.concat(_this._makeDomArray(el, clone));\n    }, []);\n  }\n\n  if (typeof elem === 'string') {\n    return this._parse(elem, this.options, false, null).children;\n  }\n\n  return clone ? (0, utils_js_1.cloneDom)([elem]) : [elem];\n}\n\nexports._makeDomArray = _makeDomArray;\n\nfunction _insert(concatenator) {\n  return function () {\n    var _this = this;\n\n    var elems = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      elems[_i] = arguments[_i];\n    }\n\n    var lastIdx = this.length - 1;\n    return (0, utils_js_1.domEach)(this, function (el, i) {\n      if (!(0, domhandler_1.hasChildren)(el)) return;\n      var domSrc = typeof elems[0] === 'function' ? elems[0].call(el, i, _this._render(el.children)) : elems;\n\n      var dom = _this._makeDomArray(domSrc, i < lastIdx);\n\n      concatenator(dom, el.children, el);\n    });\n  };\n}\n/**\n * Modify an array in-place, removing some number of elements and adding new\n * elements directly following them.\n *\n * @private\n * @category Manipulation\n * @param array - Target array to splice.\n * @param spliceIdx - Index at which to begin changing the array.\n * @param spliceCount - Number of elements to remove from the array.\n * @param newElems - Elements to insert into the array.\n * @param parent - The parent of the node.\n * @returns The spliced array.\n */\n\n\nfunction uniqueSplice(array, spliceIdx, spliceCount, newElems, parent) {\n  var _a, _b;\n\n  var spliceArgs = __spreadArray([spliceIdx, spliceCount], newElems, true);\n\n  var prev = spliceIdx === 0 ? null : array[spliceIdx - 1];\n  var next = spliceIdx + spliceCount >= array.length ? null : array[spliceIdx + spliceCount];\n  /*\n   * Before splicing in new elements, ensure they do not already appear in the\n   * current array.\n   */\n\n  for (var idx = 0; idx < newElems.length; ++idx) {\n    var node = newElems[idx];\n    var oldParent = node.parent;\n\n    if (oldParent) {\n      var oldSiblings = oldParent.children;\n      var prevIdx = oldSiblings.indexOf(node);\n\n      if (prevIdx > -1) {\n        oldParent.children.splice(prevIdx, 1);\n\n        if (parent === oldParent && spliceIdx > prevIdx) {\n          spliceArgs[0]--;\n        }\n      }\n    }\n\n    node.parent = parent;\n\n    if (node.prev) {\n      node.prev.next = (_a = node.next) !== null && _a !== void 0 ? _a : null;\n    }\n\n    if (node.next) {\n      node.next.prev = (_b = node.prev) !== null && _b !== void 0 ? _b : null;\n    }\n\n    node.prev = idx === 0 ? prev : newElems[idx - 1];\n    node.next = idx === newElems.length - 1 ? next : newElems[idx + 1];\n  }\n\n  if (prev) {\n    prev.next = newElems[0];\n  }\n\n  if (next) {\n    next.prev = newElems[newElems.length - 1];\n  }\n\n  return array.splice.apply(array, spliceArgs);\n}\n/**\n * Insert every element in the set of matched elements to the end of the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').appendTo('#fruits');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //      <li class=\"plum\">Plum</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to append elements to.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/appendTo/}\n */\n\n\nfunction appendTo(target) {\n  var appendTarget = (0, utils_js_1.isCheerio)(target) ? target : this._make(target);\n  appendTarget.append(this);\n  return this;\n}\n\nexports.appendTo = appendTo;\n/**\n * Insert every element in the set of matched elements to the beginning of the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').prependTo('#fruits');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to prepend elements to.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/prependTo/}\n */\n\nfunction prependTo(target) {\n  var prependTarget = (0, utils_js_1.isCheerio)(target) ? target : this._make(target);\n  prependTarget.prepend(this);\n  return this;\n}\n\nexports.prependTo = prependTo;\n/**\n * Inserts content as the _last_ child of each of the selected elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').append('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //      <li class=\"plum\">Plum</li>\n * //    </ul>\n * ```\n *\n * @see {@link https://api.jquery.com/append/}\n */\n\nexports.append = _insert(function (dom, children, parent) {\n  uniqueSplice(children, children.length, 0, dom, parent);\n});\n/**\n * Inserts content as the _first_ child of each of the selected elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').prepend('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @see {@link https://api.jquery.com/prepend/}\n */\n\nexports.prepend = _insert(function (dom, children, parent) {\n  uniqueSplice(children, 0, 0, dom, parent);\n});\n\nfunction _wrap(insert) {\n  return function (wrapper) {\n    var lastIdx = this.length - 1;\n    var lastParent = this.parents().last();\n\n    for (var i = 0; i < this.length; i++) {\n      var el = this[i];\n      var wrap_1 = typeof wrapper === 'function' ? wrapper.call(el, i, el) : typeof wrapper === 'string' && !(0, utils_js_1.isHtml)(wrapper) ? lastParent.find(wrapper).clone() : wrapper;\n\n      var wrapperDom = this._makeDomArray(wrap_1, i < lastIdx)[0];\n\n      if (!wrapperDom || !(0, domhandler_1.hasChildren)(wrapperDom)) continue;\n      var elInsertLocation = wrapperDom;\n      /*\n       * Find the deepest child. Only consider the first tag child of each node\n       * (ignore text); stop if no children are found.\n       */\n\n      var j = 0;\n\n      while (j < elInsertLocation.children.length) {\n        var child = elInsertLocation.children[j];\n\n        if ((0, utils_js_1.isTag)(child)) {\n          elInsertLocation = child;\n          j = 0;\n        } else {\n          j++;\n        }\n      }\n\n      insert(el, elInsertLocation, [wrapperDom]);\n    }\n\n    return this;\n  };\n}\n/**\n * The .wrap() function can take any string or object that could be passed to\n * the $() factory function to specify a DOM structure. This structure may be\n * nested several levels deep, but should contain only one inmost element. A\n * copy of this structure will be wrapped around each of the elements in the set\n * of matched elements. This method returns the original set of elements for\n * chaining purposes.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const redFruit = $('<div class=\"red-fruit\"></div>');\n * $('.apple').wrap(redFruit);\n *\n * //=> <ul id=\"fruits\">\n * //     <div class=\"red-fruit\">\n * //      <li class=\"apple\">Apple</li>\n * //     </div>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"plum\">Plum</li>\n * //   </ul>\n *\n * const healthy = $('<div class=\"healthy\"></div>');\n * $('li').wrap(healthy);\n *\n * //=> <ul id=\"fruits\">\n * //     <div class=\"healthy\">\n * //       <li class=\"apple\">Apple</li>\n * //     </div>\n * //     <div class=\"healthy\">\n * //       <li class=\"orange\">Orange</li>\n * //     </div>\n * //     <div class=\"healthy\">\n * //        <li class=\"plum\">Plum</li>\n * //     </div>\n * //   </ul>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around each element in the selection.\n * @see {@link https://api.jquery.com/wrap/}\n */\n\n\nexports.wrap = _wrap(function (el, elInsertLocation, wrapperDom) {\n  var parent = el.parent;\n  if (!parent) return;\n  var siblings = parent.children;\n  var index = siblings.indexOf(el);\n  (0, parse_js_1.update)([el], elInsertLocation);\n  /*\n   * The previous operation removed the current element from the `siblings`\n   * array, so the `dom` array can be inserted without removing any\n   * additional elements.\n   */\n\n  uniqueSplice(siblings, index, 0, wrapperDom, parent);\n});\n/**\n * The .wrapInner() function can take any string or object that could be passed\n * to the $() factory function to specify a DOM structure. This structure may be\n * nested several levels deep, but should contain only one inmost element. The\n * structure will be wrapped around the content of each of the elements in the\n * set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const redFruit = $('<div class=\"red-fruit\"></div>');\n * $('.apple').wrapInner(redFruit);\n *\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">\n * //       <div class=\"red-fruit\">Apple</div>\n * //     </li>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"pear\">Pear</li>\n * //   </ul>\n *\n * const healthy = $('<div class=\"healthy\"></div>');\n * $('li').wrapInner(healthy);\n *\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">\n * //       <div class=\"healthy\">Apple</div>\n * //     </li>\n * //     <li class=\"orange\">\n * //       <div class=\"healthy\">Orange</div>\n * //     </li>\n * //     <li class=\"pear\">\n * //       <div class=\"healthy\">Pear</div>\n * //     </li>\n * //   </ul>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around the content of each element\n *   in the selection.\n * @returns The instance itself, for chaining.\n * @see {@link https://api.jquery.com/wrapInner/}\n */\n\nexports.wrapInner = _wrap(function (el, elInsertLocation, wrapperDom) {\n  if (!(0, domhandler_1.hasChildren)(el)) return;\n  (0, parse_js_1.update)(el.children, elInsertLocation);\n  (0, parse_js_1.update)(wrapperDom, el);\n});\n/**\n * The .unwrap() function, removes the parents of the set of matched elements\n * from the DOM, leaving the matched elements in their place.\n *\n * @category Manipulation\n * @example <caption>without selector</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div id=test>\\n  <div><p>Hello</p></div>\\n  <div><p>World</p></div>\\n</div>'\n * );\n * $('#test p').unwrap();\n *\n * //=> <div id=test>\n * //     <p>Hello</p>\n * //     <p>World</p>\n * //   </div>\n * ```\n *\n * @example <caption>with selector</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div id=test>\\n  <p>Hello</p>\\n  <b><p>World</p></b>\\n</div>'\n * );\n * $('#test p').unwrap('b');\n *\n * //=> <div id=test>\n * //     <p>Hello</p>\n * //     <p>World</p>\n * //   </div>\n * ```\n *\n * @param selector - A selector to check the parent element against. If an\n *   element's parent does not match the selector, the element won't be unwrapped.\n * @returns The instance itself, for chaining.\n * @see {@link https://api.jquery.com/unwrap/}\n */\n\nfunction unwrap(selector) {\n  var _this = this;\n\n  this.parent(selector).not('body').each(function (_, el) {\n    _this._make(el).replaceWith(el.children);\n  });\n  return this;\n}\n\nexports.unwrap = unwrap;\n/**\n * The .wrapAll() function can take any string or object that could be passed to\n * the $() function to specify a DOM structure. This structure may be nested\n * several levels deep, but should contain only one inmost element. The\n * structure will be wrapped around all of the elements in the set of matched\n * elements, as a single group.\n *\n * @category Manipulation\n * @example <caption>With markup passed to `wrapAll`</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div class=\"container\"><div class=\"inner\">First</div><div class=\"inner\">Second</div></div>'\n * );\n * $('.inner').wrapAll(\"<div class='new'></div>\");\n *\n * //=> <div class=\"container\">\n * //     <div class='new'>\n * //       <div class=\"inner\">First</div>\n * //       <div class=\"inner\">Second</div>\n * //     </div>\n * //   </div>\n * ```\n *\n * @example <caption>With an existing cheerio instance</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<span>Span 1</span><strong>Strong</strong><span>Span 2</span>'\n * );\n * const wrap = $('<div><p><em><b></b></em></p></div>');\n * $('span').wrapAll(wrap);\n *\n * //=> <div>\n * //     <p>\n * //       <em>\n * //         <b>\n * //           <span>Span 1</span>\n * //           <span>Span 2</span>\n * //         </b>\n * //       </em>\n * //     </p>\n * //   </div>\n * //   <strong>Strong</strong>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around all matched elements in the\n *   selection.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/wrapAll/}\n */\n\nfunction wrapAll(wrapper) {\n  var el = this[0];\n\n  if (el) {\n    var wrap_2 = this._make(typeof wrapper === 'function' ? wrapper.call(el, 0, el) : wrapper).insertBefore(el); // If html is given as wrapper, wrap may contain text elements\n\n\n    var elInsertLocation = void 0;\n\n    for (var i = 0; i < wrap_2.length; i++) {\n      if (wrap_2[i].type === 'tag') elInsertLocation = wrap_2[i];\n    }\n\n    var j = 0;\n    /*\n     * Find the deepest child. Only consider the first tag child of each node\n     * (ignore text); stop if no children are found.\n     */\n\n    while (elInsertLocation && j < elInsertLocation.children.length) {\n      var child = elInsertLocation.children[j];\n\n      if (child.type === 'tag') {\n        elInsertLocation = child;\n        j = 0;\n      } else {\n        j++;\n      }\n    }\n\n    if (elInsertLocation) this._make(elInsertLocation).append(this);\n  }\n\n  return this;\n}\n\nexports.wrapAll = wrapAll;\n/* eslint-disable jsdoc/check-param-names*/\n\n/**\n * Insert content next to each element in the set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.apple').after('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param content - HTML string, DOM element, array of DOM elements or Cheerio\n *   to insert after each element in the set of matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/after/}\n */\n\nfunction after() {\n  var _this = this;\n\n  var elems = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    elems[_i] = arguments[_i];\n  }\n\n  var lastIdx = this.length - 1;\n  return (0, utils_js_1.domEach)(this, function (el, i) {\n    var parent = el.parent;\n\n    if (!(0, domhandler_1.hasChildren)(el) || !parent) {\n      return;\n    }\n\n    var siblings = parent.children;\n    var index = siblings.indexOf(el); // If not found, move on\n\n    /* istanbul ignore next */\n\n    if (index < 0) return;\n    var domSrc = typeof elems[0] === 'function' ? elems[0].call(el, i, _this._render(el.children)) : elems;\n\n    var dom = _this._makeDomArray(domSrc, i < lastIdx); // Add element after `this` element\n\n\n    uniqueSplice(siblings, index + 1, 0, dom, parent);\n  });\n}\n\nexports.after = after;\n/* eslint-enable jsdoc/check-param-names*/\n\n/**\n * Insert every element in the set of matched elements after the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').insertAfter('.apple');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to insert elements after.\n * @returns The set of newly inserted elements.\n * @see {@link https://api.jquery.com/insertAfter/}\n */\n\nfunction insertAfter(target) {\n  var _this = this;\n\n  if (typeof target === 'string') {\n    target = this._make(target);\n  }\n\n  this.remove();\n  var clones = [];\n\n  this._makeDomArray(target).forEach(function (el) {\n    var clonedSelf = _this.clone().toArray();\n\n    var parent = el.parent;\n\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children;\n    var index = siblings.indexOf(el); // If not found, move on\n\n    /* istanbul ignore next */\n\n    if (index < 0) return; // Add cloned `this` element(s) after target element\n\n    uniqueSplice(siblings, index + 1, 0, clonedSelf, parent);\n    clones.push.apply(clones, clonedSelf);\n  });\n\n  return this._make(clones);\n}\n\nexports.insertAfter = insertAfter;\n/* eslint-disable jsdoc/check-param-names*/\n\n/**\n * Insert content previous to each element in the set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.apple').before('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param content - HTML string, DOM element, array of DOM elements or Cheerio\n *   to insert before each element in the set of matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/before/}\n */\n\nfunction before() {\n  var _this = this;\n\n  var elems = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    elems[_i] = arguments[_i];\n  }\n\n  var lastIdx = this.length - 1;\n  return (0, utils_js_1.domEach)(this, function (el, i) {\n    var parent = el.parent;\n\n    if (!(0, domhandler_1.hasChildren)(el) || !parent) {\n      return;\n    }\n\n    var siblings = parent.children;\n    var index = siblings.indexOf(el); // If not found, move on\n\n    /* istanbul ignore next */\n\n    if (index < 0) return;\n    var domSrc = typeof elems[0] === 'function' ? elems[0].call(el, i, _this._render(el.children)) : elems;\n\n    var dom = _this._makeDomArray(domSrc, i < lastIdx); // Add element before `el` element\n\n\n    uniqueSplice(siblings, index, 0, dom, parent);\n  });\n}\n\nexports.before = before;\n/* eslint-enable jsdoc/check-param-names*/\n\n/**\n * Insert every element in the set of matched elements before the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').insertBefore('.apple');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to insert elements before.\n * @returns The set of newly inserted elements.\n * @see {@link https://api.jquery.com/insertBefore/}\n */\n\nfunction insertBefore(target) {\n  var _this = this;\n\n  var targetArr = this._make(target);\n\n  this.remove();\n  var clones = [];\n  (0, utils_js_1.domEach)(targetArr, function (el) {\n    var clonedSelf = _this.clone().toArray();\n\n    var parent = el.parent;\n\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children;\n    var index = siblings.indexOf(el); // If not found, move on\n\n    /* istanbul ignore next */\n\n    if (index < 0) return; // Add cloned `this` element(s) after target element\n\n    uniqueSplice(siblings, index, 0, clonedSelf, parent);\n    clones.push.apply(clones, clonedSelf);\n  });\n  return this._make(clones);\n}\n\nexports.insertBefore = insertBefore;\n/**\n * Removes the set of matched elements from the DOM and all their children.\n * `selector` filters the set of matched elements to be removed.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.pear').remove();\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //    </ul>\n * ```\n *\n * @param selector - Optional selector for elements to remove.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/remove/}\n */\n\nfunction remove(selector) {\n  // Filter if we have selector\n  var elems = selector ? this.filter(selector) : this;\n  (0, utils_js_1.domEach)(elems, function (el) {\n    (0, domutils_1.removeElement)(el);\n    el.prev = el.next = el.parent = null;\n  });\n  return this;\n}\n\nexports.remove = remove;\n/**\n * Replaces matched elements with `content`.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const plum = $('<li class=\"plum\">Plum</li>');\n * $('.pear').replaceWith(plum);\n * $.html();\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">Apple</li>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"plum\">Plum</li>\n * //   </ul>\n * ```\n *\n * @param content - Replacement for matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/replaceWith/}\n */\n\nfunction replaceWith(content) {\n  var _this = this;\n\n  return (0, utils_js_1.domEach)(this, function (el, i) {\n    var parent = el.parent;\n\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children;\n    var cont = typeof content === 'function' ? content.call(el, i, el) : content;\n\n    var dom = _this._makeDomArray(cont);\n    /*\n     * In the case that `dom` contains nodes that already exist in other\n     * structures, ensure those nodes are properly removed.\n     */\n\n\n    (0, parse_js_1.update)(dom, null);\n    var index = siblings.indexOf(el); // Completely remove old element\n\n    uniqueSplice(siblings, index, 1, dom, parent);\n\n    if (!dom.includes(el)) {\n      el.parent = el.prev = el.next = null;\n    }\n  });\n}\n\nexports.replaceWith = replaceWith;\n/**\n * Empties an element, removing all its children.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').empty();\n * $.html();\n * //=>  <ul id=\"fruits\"></ul>\n * ```\n *\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/empty/}\n */\n\nfunction empty() {\n  return (0, utils_js_1.domEach)(this, function (el) {\n    if (!(0, domhandler_1.hasChildren)(el)) return;\n    el.children.forEach(function (child) {\n      child.next = child.prev = child.parent = null;\n    });\n    el.children.length = 0;\n  });\n}\n\nexports.empty = empty;\n\nfunction html(str) {\n  var _this = this;\n\n  if (str === undefined) {\n    var el = this[0];\n    if (!el || !(0, domhandler_1.hasChildren)(el)) return null;\n    return this._render(el.children);\n  }\n\n  return (0, utils_js_1.domEach)(this, function (el) {\n    if (!(0, domhandler_1.hasChildren)(el)) return;\n    el.children.forEach(function (child) {\n      child.next = child.prev = child.parent = null;\n    });\n    var content = (0, utils_js_1.isCheerio)(str) ? str.toArray() : _this._parse(\"\".concat(str), _this.options, false, el).children;\n    (0, parse_js_1.update)(content, el);\n  });\n}\n\nexports.html = html;\n/**\n * Turns the collection to a string. Alias for `.html()`.\n *\n * @category Manipulation\n * @returns The rendered document.\n */\n\nfunction toString() {\n  return this._render(this);\n}\n\nexports.toString = toString;\n\nfunction text(str) {\n  var _this = this; // If `str` is undefined, act as a \"getter\"\n\n\n  if (str === undefined) {\n    return (0, static_js_1.text)(this);\n  }\n\n  if (typeof str === 'function') {\n    // Function support\n    return (0, utils_js_1.domEach)(this, function (el, i) {\n      return _this._make(el).text(str.call(el, i, (0, static_js_1.text)([el])));\n    });\n  } // Append text node to each selected elements\n\n\n  return (0, utils_js_1.domEach)(this, function (el) {\n    if (!(0, domhandler_1.hasChildren)(el)) return;\n    el.children.forEach(function (child) {\n      child.next = child.prev = child.parent = null;\n    });\n    var textNode = new domhandler_1.Text(\"\".concat(str));\n    (0, parse_js_1.update)(textNode, el);\n  });\n}\n\nexports.text = text;\n/**\n * Clone the cheerio object.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const moreFruit = $('#fruits').clone();\n * ```\n *\n * @returns The cloned object.\n * @see {@link https://api.jquery.com/clone/}\n */\n\nfunction clone() {\n  return this._make((0, utils_js_1.cloneDom)(this.get()));\n}\n\nexports.clone = clone;","map":{"version":3,"mappings":"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","names":["_makeDomArray","elem","clone","get","Array","isArray","reduce","newElems","el","concat","_this","_parse","options","children","exports","_insert","concatenator","elems","lastIdx","length","i","domSrc","call","_render","dom","uniqueSplice","array","spliceIdx","spliceCount","parent","spliceArgs","prev","next","idx","node","oldParent","oldSiblings","prevIdx","indexOf","splice","_a","_b","apply","appendTo","target","appendTarget","_make","append","prependTo","prependTarget","prepend","_wrap","insert","wrapper","lastParent","parents","last","wrap_1","find","wrapperDom","elInsertLocation","j","child","siblings","index","unwrap","selector","not","each","_","replaceWith","wrapAll","wrap_2","insertBefore","type","after","insertAfter","remove","clones","forEach","clonedSelf","toArray","push","before","targetArr","filter","content","cont","includes","empty","html","str","undefined","toString","text","textNode","domhandler_1"],"sources":["api/manipulation.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BigIntArbitrary = void 0;\n\nconst Stream_1 = require(\"../../stream/Stream\");\n\nconst Arbitrary_1 = require(\"../../check/arbitrary/definition/Arbitrary\");\n\nconst Value_1 = require(\"../../check/arbitrary/definition/Value\");\n\nconst BiasNumericRange_1 = require(\"./helpers/BiasNumericRange\");\n\nconst ShrinkBigInt_1 = require(\"./helpers/ShrinkBigInt\");\n\nclass BigIntArbitrary extends Arbitrary_1.Arbitrary {\n  constructor(min, max) {\n    super();\n    this.min = min;\n    this.max = max;\n  }\n\n  generate(mrng, biasFactor) {\n    const range = this.computeGenerateRange(mrng, biasFactor);\n    return new Value_1.Value(mrng.nextBigInt(range.min, range.max), undefined);\n  }\n\n  computeGenerateRange(mrng, biasFactor) {\n    if (biasFactor === undefined || mrng.nextInt(1, biasFactor) !== 1) {\n      return {\n        min: this.min,\n        max: this.max\n      };\n    }\n\n    const ranges = (0, BiasNumericRange_1.biasNumericRange)(this.min, this.max, BiasNumericRange_1.bigIntLogLike);\n\n    if (ranges.length === 1) {\n      return ranges[0];\n    }\n\n    const id = mrng.nextInt(-2 * (ranges.length - 1), ranges.length - 2);\n    return id < 0 ? ranges[0] : ranges[id + 1];\n  }\n\n  canShrinkWithoutContext(value) {\n    return typeof value === 'bigint' && this.min <= value && value <= this.max;\n  }\n\n  shrink(current, context) {\n    if (!BigIntArbitrary.isValidContext(current, context)) {\n      const target = this.defaultTarget();\n      return (0, ShrinkBigInt_1.shrinkBigInt)(current, target, true);\n    }\n\n    if (this.isLastChanceTry(current, context)) {\n      return Stream_1.Stream.of(new Value_1.Value(context, undefined));\n    }\n\n    return (0, ShrinkBigInt_1.shrinkBigInt)(current, context, false);\n  }\n\n  defaultTarget() {\n    if (this.min <= 0 && this.max >= 0) {\n      return BigInt(0);\n    }\n\n    return this.min < 0 ? this.max : this.min;\n  }\n\n  isLastChanceTry(current, context) {\n    if (current > 0) return current === context + BigInt(1) && current > this.min;\n    if (current < 0) return current === context - BigInt(1) && current < this.max;\n    return false;\n  }\n\n  static isValidContext(current, context) {\n    if (context === undefined) {\n      return false;\n    }\n\n    if (typeof context !== 'bigint') {\n      throw new Error(`Invalid context type passed to BigIntArbitrary (#1)`);\n    }\n\n    const differentSigns = current > 0 && context < 0 || current < 0 && context > 0;\n\n    if (context !== BigInt(0) && differentSigns) {\n      throw new Error(`Invalid context value passed to BigIntArbitrary (#2)`);\n    }\n\n    return true;\n  }\n\n}\n\nexports.BigIntArbitrary = BigIntArbitrary;","map":{"version":3,"names":["Object","defineProperty","exports","value","BigIntArbitrary","Stream_1","require","Arbitrary_1","Value_1","BiasNumericRange_1","ShrinkBigInt_1","Arbitrary","constructor","min","max","generate","mrng","biasFactor","range","computeGenerateRange","Value","nextBigInt","undefined","nextInt","ranges","biasNumericRange","bigIntLogLike","length","id","canShrinkWithoutContext","shrink","current","context","isValidContext","target","defaultTarget","shrinkBigInt","isLastChanceTry","Stream","of","BigInt","Error","differentSigns"],"sources":["/Users/tranminhtrung/Desktop/learn_web3/gamble/node_modules/fast-check/lib/arbitrary/_internals/BigIntArbitrary.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BigIntArbitrary = void 0;\nconst Stream_1 = require(\"../../stream/Stream\");\nconst Arbitrary_1 = require(\"../../check/arbitrary/definition/Arbitrary\");\nconst Value_1 = require(\"../../check/arbitrary/definition/Value\");\nconst BiasNumericRange_1 = require(\"./helpers/BiasNumericRange\");\nconst ShrinkBigInt_1 = require(\"./helpers/ShrinkBigInt\");\nclass BigIntArbitrary extends Arbitrary_1.Arbitrary {\n    constructor(min, max) {\n        super();\n        this.min = min;\n        this.max = max;\n    }\n    generate(mrng, biasFactor) {\n        const range = this.computeGenerateRange(mrng, biasFactor);\n        return new Value_1.Value(mrng.nextBigInt(range.min, range.max), undefined);\n    }\n    computeGenerateRange(mrng, biasFactor) {\n        if (biasFactor === undefined || mrng.nextInt(1, biasFactor) !== 1) {\n            return { min: this.min, max: this.max };\n        }\n        const ranges = (0, BiasNumericRange_1.biasNumericRange)(this.min, this.max, BiasNumericRange_1.bigIntLogLike);\n        if (ranges.length === 1) {\n            return ranges[0];\n        }\n        const id = mrng.nextInt(-2 * (ranges.length - 1), ranges.length - 2);\n        return id < 0 ? ranges[0] : ranges[id + 1];\n    }\n    canShrinkWithoutContext(value) {\n        return typeof value === 'bigint' && this.min <= value && value <= this.max;\n    }\n    shrink(current, context) {\n        if (!BigIntArbitrary.isValidContext(current, context)) {\n            const target = this.defaultTarget();\n            return (0, ShrinkBigInt_1.shrinkBigInt)(current, target, true);\n        }\n        if (this.isLastChanceTry(current, context)) {\n            return Stream_1.Stream.of(new Value_1.Value(context, undefined));\n        }\n        return (0, ShrinkBigInt_1.shrinkBigInt)(current, context, false);\n    }\n    defaultTarget() {\n        if (this.min <= 0 && this.max >= 0) {\n            return BigInt(0);\n        }\n        return this.min < 0 ? this.max : this.min;\n    }\n    isLastChanceTry(current, context) {\n        if (current > 0)\n            return current === context + BigInt(1) && current > this.min;\n        if (current < 0)\n            return current === context - BigInt(1) && current < this.max;\n        return false;\n    }\n    static isValidContext(current, context) {\n        if (context === undefined) {\n            return false;\n        }\n        if (typeof context !== 'bigint') {\n            throw new Error(`Invalid context type passed to BigIntArbitrary (#1)`);\n        }\n        const differentSigns = (current > 0 && context < 0) || (current < 0 && context > 0);\n        if (context !== BigInt(0) && differentSigns) {\n            throw new Error(`Invalid context value passed to BigIntArbitrary (#2)`);\n        }\n        return true;\n    }\n}\nexports.BigIntArbitrary = BigIntArbitrary;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WithShrinkFromOtherArbitrary = void 0;\n\nconst Arbitrary_1 = require(\"../../check/arbitrary/definition/Arbitrary\");\n\nconst Value_1 = require(\"../../check/arbitrary/definition/Value\");\n\nfunction isSafeContext(context) {\n  return context !== undefined;\n}\n\nfunction toGeneratorValue(value) {\n  if (value.hasToBeCloned) {\n    return new Value_1.Value(value.value_, {\n      generatorContext: value.context\n    }, () => value.value);\n  }\n\n  return new Value_1.Value(value.value_, {\n    generatorContext: value.context\n  });\n}\n\nfunction toShrinkerValue(value) {\n  if (value.hasToBeCloned) {\n    return new Value_1.Value(value.value_, {\n      shrinkerContext: value.context\n    }, () => value.value);\n  }\n\n  return new Value_1.Value(value.value_, {\n    shrinkerContext: value.context\n  });\n}\n\nclass WithShrinkFromOtherArbitrary extends Arbitrary_1.Arbitrary {\n  constructor(generatorArbitrary, shrinkerArbitrary) {\n    super();\n    this.generatorArbitrary = generatorArbitrary;\n    this.shrinkerArbitrary = shrinkerArbitrary;\n  }\n\n  generate(mrng, biasFactor) {\n    return toGeneratorValue(this.generatorArbitrary.generate(mrng, biasFactor));\n  }\n\n  canShrinkWithoutContext(value) {\n    return this.shrinkerArbitrary.canShrinkWithoutContext(value);\n  }\n\n  shrink(value, context) {\n    if (!isSafeContext(context)) {\n      return this.shrinkerArbitrary.shrink(value, undefined).map(toShrinkerValue);\n    }\n\n    if ('generatorContext' in context) {\n      return this.generatorArbitrary.shrink(value, context.generatorContext).map(toGeneratorValue);\n    }\n\n    return this.shrinkerArbitrary.shrink(value, context.shrinkerContext).map(toShrinkerValue);\n  }\n\n}\n\nexports.WithShrinkFromOtherArbitrary = WithShrinkFromOtherArbitrary;","map":{"version":3,"names":["Object","defineProperty","exports","value","WithShrinkFromOtherArbitrary","Arbitrary_1","require","Value_1","isSafeContext","context","undefined","toGeneratorValue","hasToBeCloned","Value","value_","generatorContext","toShrinkerValue","shrinkerContext","Arbitrary","constructor","generatorArbitrary","shrinkerArbitrary","generate","mrng","biasFactor","canShrinkWithoutContext","shrink","map"],"sources":["/Users/tranminhtrung/Desktop/learn_web3/gamble/node_modules/fast-check/lib/arbitrary/_internals/WithShrinkFromOtherArbitrary.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WithShrinkFromOtherArbitrary = void 0;\nconst Arbitrary_1 = require(\"../../check/arbitrary/definition/Arbitrary\");\nconst Value_1 = require(\"../../check/arbitrary/definition/Value\");\nfunction isSafeContext(context) {\n    return context !== undefined;\n}\nfunction toGeneratorValue(value) {\n    if (value.hasToBeCloned) {\n        return new Value_1.Value(value.value_, { generatorContext: value.context }, () => value.value);\n    }\n    return new Value_1.Value(value.value_, { generatorContext: value.context });\n}\nfunction toShrinkerValue(value) {\n    if (value.hasToBeCloned) {\n        return new Value_1.Value(value.value_, { shrinkerContext: value.context }, () => value.value);\n    }\n    return new Value_1.Value(value.value_, { shrinkerContext: value.context });\n}\nclass WithShrinkFromOtherArbitrary extends Arbitrary_1.Arbitrary {\n    constructor(generatorArbitrary, shrinkerArbitrary) {\n        super();\n        this.generatorArbitrary = generatorArbitrary;\n        this.shrinkerArbitrary = shrinkerArbitrary;\n    }\n    generate(mrng, biasFactor) {\n        return toGeneratorValue(this.generatorArbitrary.generate(mrng, biasFactor));\n    }\n    canShrinkWithoutContext(value) {\n        return this.shrinkerArbitrary.canShrinkWithoutContext(value);\n    }\n    shrink(value, context) {\n        if (!isSafeContext(context)) {\n            return this.shrinkerArbitrary.shrink(value, undefined).map(toShrinkerValue);\n        }\n        if ('generatorContext' in context) {\n            return this.generatorArbitrary.shrink(value, context.generatorContext).map(toGeneratorValue);\n        }\n        return this.shrinkerArbitrary.shrink(value, context.shrinkerContext).map(toShrinkerValue);\n    }\n}\nexports.WithShrinkFromOtherArbitrary = WithShrinkFromOtherArbitrary;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,4BAAR,GAAuC,KAAK,CAA5C;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,4CAAD,CAA3B;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,wCAAD,CAAvB;;AACA,SAASE,aAAT,CAAuBC,OAAvB,EAAgC;EAC5B,OAAOA,OAAO,KAAKC,SAAnB;AACH;;AACD,SAASC,gBAAT,CAA0BR,KAA1B,EAAiC;EAC7B,IAAIA,KAAK,CAACS,aAAV,EAAyB;IACrB,OAAO,IAAIL,OAAO,CAACM,KAAZ,CAAkBV,KAAK,CAACW,MAAxB,EAAgC;MAAEC,gBAAgB,EAAEZ,KAAK,CAACM;IAA1B,CAAhC,EAAqE,MAAMN,KAAK,CAACA,KAAjF,CAAP;EACH;;EACD,OAAO,IAAII,OAAO,CAACM,KAAZ,CAAkBV,KAAK,CAACW,MAAxB,EAAgC;IAAEC,gBAAgB,EAAEZ,KAAK,CAACM;EAA1B,CAAhC,CAAP;AACH;;AACD,SAASO,eAAT,CAAyBb,KAAzB,EAAgC;EAC5B,IAAIA,KAAK,CAACS,aAAV,EAAyB;IACrB,OAAO,IAAIL,OAAO,CAACM,KAAZ,CAAkBV,KAAK,CAACW,MAAxB,EAAgC;MAAEG,eAAe,EAAEd,KAAK,CAACM;IAAzB,CAAhC,EAAoE,MAAMN,KAAK,CAACA,KAAhF,CAAP;EACH;;EACD,OAAO,IAAII,OAAO,CAACM,KAAZ,CAAkBV,KAAK,CAACW,MAAxB,EAAgC;IAAEG,eAAe,EAAEd,KAAK,CAACM;EAAzB,CAAhC,CAAP;AACH;;AACD,MAAML,4BAAN,SAA2CC,WAAW,CAACa,SAAvD,CAAiE;EAC7DC,WAAW,CAACC,kBAAD,EAAqBC,iBAArB,EAAwC;IAC/C;IACA,KAAKD,kBAAL,GAA0BA,kBAA1B;IACA,KAAKC,iBAAL,GAAyBA,iBAAzB;EACH;;EACDC,QAAQ,CAACC,IAAD,EAAOC,UAAP,EAAmB;IACvB,OAAOb,gBAAgB,CAAC,KAAKS,kBAAL,CAAwBE,QAAxB,CAAiCC,IAAjC,EAAuCC,UAAvC,CAAD,CAAvB;EACH;;EACDC,uBAAuB,CAACtB,KAAD,EAAQ;IAC3B,OAAO,KAAKkB,iBAAL,CAAuBI,uBAAvB,CAA+CtB,KAA/C,CAAP;EACH;;EACDuB,MAAM,CAACvB,KAAD,EAAQM,OAAR,EAAiB;IACnB,IAAI,CAACD,aAAa,CAACC,OAAD,CAAlB,EAA6B;MACzB,OAAO,KAAKY,iBAAL,CAAuBK,MAAvB,CAA8BvB,KAA9B,EAAqCO,SAArC,EAAgDiB,GAAhD,CAAoDX,eAApD,CAAP;IACH;;IACD,IAAI,sBAAsBP,OAA1B,EAAmC;MAC/B,OAAO,KAAKW,kBAAL,CAAwBM,MAAxB,CAA+BvB,KAA/B,EAAsCM,OAAO,CAACM,gBAA9C,EAAgEY,GAAhE,CAAoEhB,gBAApE,CAAP;IACH;;IACD,OAAO,KAAKU,iBAAL,CAAuBK,MAAvB,CAA8BvB,KAA9B,EAAqCM,OAAO,CAACQ,eAA7C,EAA8DU,GAA9D,CAAkEX,eAAlE,CAAP;EACH;;AApB4D;;AAsBjEd,OAAO,CAACE,4BAAR,GAAuCA,4BAAvC"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bigIntN = void 0;\n\nconst BigIntArbitrary_1 = require(\"./_internals/BigIntArbitrary\");\n\nfunction bigIntN(n) {\n  if (n < 1) {\n    throw new Error('fc.bigIntN expects requested number of bits to be superior or equal to 1');\n  }\n\n  const min = BigInt(-1) << BigInt(n - 1);\n  const max = (BigInt(1) << BigInt(n - 1)) - BigInt(1);\n  return new BigIntArbitrary_1.BigIntArbitrary(min, max);\n}\n\nexports.bigIntN = bigIntN;","map":{"version":3,"names":["Object","defineProperty","exports","value","bigIntN","BigIntArbitrary_1","require","n","Error","min","BigInt","max","BigIntArbitrary"],"sources":["/Users/tranminhtrung/Desktop/learn_web3/gamble/node_modules/fast-check/lib/arbitrary/bigIntN.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bigIntN = void 0;\nconst BigIntArbitrary_1 = require(\"./_internals/BigIntArbitrary\");\nfunction bigIntN(n) {\n    if (n < 1) {\n        throw new Error('fc.bigIntN expects requested number of bits to be superior or equal to 1');\n    }\n    const min = BigInt(-1) << BigInt(n - 1);\n    const max = (BigInt(1) << BigInt(n - 1)) - BigInt(1);\n    return new BigIntArbitrary_1.BigIntArbitrary(min, max);\n}\nexports.bigIntN = bigIntN;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AACA,MAAMC,iBAAiB,GAAGC,OAAO,CAAC,8BAAD,CAAjC;;AACA,SAASF,OAAT,CAAiBG,CAAjB,EAAoB;EAChB,IAAIA,CAAC,GAAG,CAAR,EAAW;IACP,MAAM,IAAIC,KAAJ,CAAU,0EAAV,CAAN;EACH;;EACD,MAAMC,GAAG,GAAGC,MAAM,CAAC,CAAC,CAAF,CAAN,IAAcA,MAAM,CAACH,CAAC,GAAG,CAAL,CAAhC;EACA,MAAMI,GAAG,GAAG,CAACD,MAAM,CAAC,CAAD,CAAN,IAAaA,MAAM,CAACH,CAAC,GAAG,CAAL,CAApB,IAA+BG,MAAM,CAAC,CAAD,CAAjD;EACA,OAAO,IAAIL,iBAAiB,CAACO,eAAtB,CAAsCH,GAAtC,EAA2CE,GAA3C,CAAP;AACH;;AACDT,OAAO,CAACE,OAAR,GAAkBA,OAAlB"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.substractArrayInt64 = exports.fromNumberToArrayInt64 = exports.trimArrayIntInplace = exports.substractArrayIntToNew = exports.addOneToPositiveArrayInt = exports.addArrayIntToNew = void 0;\n\nfunction addArrayIntToNew(arrayIntA, arrayIntB) {\n  if (arrayIntA.sign !== arrayIntB.sign) {\n    return substractArrayIntToNew(arrayIntA, {\n      sign: -arrayIntB.sign,\n      data: arrayIntB.data\n    });\n  }\n\n  var data = [];\n  var reminder = 0;\n  var dataA = arrayIntA.data;\n  var dataB = arrayIntB.data;\n\n  for (var indexA = dataA.length - 1, indexB = dataB.length - 1; indexA >= 0 || indexB >= 0; --indexA, --indexB) {\n    var vA = indexA >= 0 ? dataA[indexA] : 0;\n    var vB = indexB >= 0 ? dataB[indexB] : 0;\n    var current = vA + vB + reminder;\n    data.push(current >>> 0);\n    reminder = ~~(current / 0x100000000);\n  }\n\n  if (reminder !== 0) {\n    data.push(reminder);\n  }\n\n  return {\n    sign: arrayIntA.sign,\n    data: data.reverse()\n  };\n}\n\nexports.addArrayIntToNew = addArrayIntToNew;\n\nfunction addOneToPositiveArrayInt(arrayInt) {\n  arrayInt.sign = 1;\n  var data = arrayInt.data;\n\n  for (var index = data.length - 1; index >= 0; --index) {\n    if (data[index] === 0xffffffff) {\n      data[index] = 0;\n    } else {\n      data[index] += 1;\n      return arrayInt;\n    }\n  }\n\n  data.unshift(1);\n  return arrayInt;\n}\n\nexports.addOneToPositiveArrayInt = addOneToPositiveArrayInt;\n\nfunction isStrictlySmaller(dataA, dataB) {\n  var maxLength = Math.max(dataA.length, dataB.length);\n\n  for (var index = 0; index < maxLength; ++index) {\n    var indexA = index + dataA.length - maxLength;\n    var indexB = index + dataB.length - maxLength;\n    var vA = indexA >= 0 ? dataA[indexA] : 0;\n    var vB = indexB >= 0 ? dataB[indexB] : 0;\n    if (vA < vB) return true;\n    if (vA > vB) return false;\n  }\n\n  return false;\n}\n\nfunction substractArrayIntToNew(arrayIntA, arrayIntB) {\n  if (arrayIntA.sign !== arrayIntB.sign) {\n    return addArrayIntToNew(arrayIntA, {\n      sign: -arrayIntB.sign,\n      data: arrayIntB.data\n    });\n  }\n\n  var dataA = arrayIntA.data;\n  var dataB = arrayIntB.data;\n\n  if (isStrictlySmaller(dataA, dataB)) {\n    var out = substractArrayIntToNew(arrayIntB, arrayIntA);\n    out.sign = -out.sign;\n    return out;\n  }\n\n  var data = [];\n  var reminder = 0;\n\n  for (var indexA = dataA.length - 1, indexB = dataB.length - 1; indexA >= 0 || indexB >= 0; --indexA, --indexB) {\n    var vA = indexA >= 0 ? dataA[indexA] : 0;\n    var vB = indexB >= 0 ? dataB[indexB] : 0;\n    var current = vA - vB - reminder;\n    data.push(current >>> 0);\n    reminder = current < 0 ? 1 : 0;\n  }\n\n  return {\n    sign: arrayIntA.sign,\n    data: data.reverse()\n  };\n}\n\nexports.substractArrayIntToNew = substractArrayIntToNew;\n\nfunction trimArrayIntInplace(arrayInt) {\n  var data = arrayInt.data;\n  var firstNonZero = 0;\n\n  for (; firstNonZero !== data.length && data[firstNonZero] === 0; ++firstNonZero) {}\n\n  if (firstNonZero === data.length) {\n    arrayInt.sign = 1;\n    arrayInt.data = [0];\n    return arrayInt;\n  }\n\n  data.splice(0, firstNonZero);\n  return arrayInt;\n}\n\nexports.trimArrayIntInplace = trimArrayIntInplace;\n\nfunction fromNumberToArrayInt64(out, n) {\n  if (n < 0) {\n    var posN = -n;\n    out.sign = -1;\n    out.data[0] = ~~(posN / 0x100000000);\n    out.data[1] = posN >>> 0;\n  } else {\n    out.sign = 1;\n    out.data[0] = ~~(n / 0x100000000);\n    out.data[1] = n >>> 0;\n  }\n\n  return out;\n}\n\nexports.fromNumberToArrayInt64 = fromNumberToArrayInt64;\n\nfunction substractArrayInt64(out, arrayIntA, arrayIntB) {\n  var lowA = arrayIntA.data[1];\n  var highA = arrayIntA.data[0];\n  var signA = arrayIntA.sign;\n  var lowB = arrayIntB.data[1];\n  var highB = arrayIntB.data[0];\n  var signB = arrayIntB.sign;\n  out.sign = 1;\n\n  if (signA === 1 && signB === -1) {\n    var low_1 = lowA + lowB;\n    var high = highA + highB + (low_1 > 0xffffffff ? 1 : 0);\n    out.data[0] = high >>> 0;\n    out.data[1] = low_1 >>> 0;\n    return out;\n  }\n\n  var lowFirst = lowA;\n  var highFirst = highA;\n  var lowSecond = lowB;\n  var highSecond = highB;\n\n  if (signA === -1) {\n    lowFirst = lowB;\n    highFirst = highB;\n    lowSecond = lowA;\n    highSecond = highA;\n  }\n\n  var reminderLow = 0;\n  var low = lowFirst - lowSecond;\n\n  if (low < 0) {\n    reminderLow = 1;\n    low = low >>> 0;\n  }\n\n  out.data[0] = highFirst - highSecond - reminderLow;\n  out.data[1] = low;\n  return out;\n}\n\nexports.substractArrayInt64 = substractArrayInt64;","map":{"version":3,"names":["exports","__esModule","substractArrayInt64","fromNumberToArrayInt64","trimArrayIntInplace","substractArrayIntToNew","addOneToPositiveArrayInt","addArrayIntToNew","arrayIntA","arrayIntB","sign","data","reminder","dataA","dataB","indexA","length","indexB","vA","vB","current","push","reverse","arrayInt","index","unshift","isStrictlySmaller","maxLength","Math","max","out","firstNonZero","splice","n","posN","lowA","highA","signA","lowB","highB","signB","low_1","high","lowFirst","highFirst","lowSecond","highSecond","reminderLow","low"],"sources":["/Users/tranminhtrung/Desktop/learn_web3/gamble/node_modules/pure-rand/lib/distribution/internals/ArrayInt.js"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.substractArrayInt64 = exports.fromNumberToArrayInt64 = exports.trimArrayIntInplace = exports.substractArrayIntToNew = exports.addOneToPositiveArrayInt = exports.addArrayIntToNew = void 0;\nfunction addArrayIntToNew(arrayIntA, arrayIntB) {\n    if (arrayIntA.sign !== arrayIntB.sign) {\n        return substractArrayIntToNew(arrayIntA, { sign: -arrayIntB.sign, data: arrayIntB.data });\n    }\n    var data = [];\n    var reminder = 0;\n    var dataA = arrayIntA.data;\n    var dataB = arrayIntB.data;\n    for (var indexA = dataA.length - 1, indexB = dataB.length - 1; indexA >= 0 || indexB >= 0; --indexA, --indexB) {\n        var vA = indexA >= 0 ? dataA[indexA] : 0;\n        var vB = indexB >= 0 ? dataB[indexB] : 0;\n        var current = vA + vB + reminder;\n        data.push(current >>> 0);\n        reminder = ~~(current / 0x100000000);\n    }\n    if (reminder !== 0) {\n        data.push(reminder);\n    }\n    return { sign: arrayIntA.sign, data: data.reverse() };\n}\nexports.addArrayIntToNew = addArrayIntToNew;\nfunction addOneToPositiveArrayInt(arrayInt) {\n    arrayInt.sign = 1;\n    var data = arrayInt.data;\n    for (var index = data.length - 1; index >= 0; --index) {\n        if (data[index] === 0xffffffff) {\n            data[index] = 0;\n        }\n        else {\n            data[index] += 1;\n            return arrayInt;\n        }\n    }\n    data.unshift(1);\n    return arrayInt;\n}\nexports.addOneToPositiveArrayInt = addOneToPositiveArrayInt;\nfunction isStrictlySmaller(dataA, dataB) {\n    var maxLength = Math.max(dataA.length, dataB.length);\n    for (var index = 0; index < maxLength; ++index) {\n        var indexA = index + dataA.length - maxLength;\n        var indexB = index + dataB.length - maxLength;\n        var vA = indexA >= 0 ? dataA[indexA] : 0;\n        var vB = indexB >= 0 ? dataB[indexB] : 0;\n        if (vA < vB)\n            return true;\n        if (vA > vB)\n            return false;\n    }\n    return false;\n}\nfunction substractArrayIntToNew(arrayIntA, arrayIntB) {\n    if (arrayIntA.sign !== arrayIntB.sign) {\n        return addArrayIntToNew(arrayIntA, { sign: -arrayIntB.sign, data: arrayIntB.data });\n    }\n    var dataA = arrayIntA.data;\n    var dataB = arrayIntB.data;\n    if (isStrictlySmaller(dataA, dataB)) {\n        var out = substractArrayIntToNew(arrayIntB, arrayIntA);\n        out.sign = -out.sign;\n        return out;\n    }\n    var data = [];\n    var reminder = 0;\n    for (var indexA = dataA.length - 1, indexB = dataB.length - 1; indexA >= 0 || indexB >= 0; --indexA, --indexB) {\n        var vA = indexA >= 0 ? dataA[indexA] : 0;\n        var vB = indexB >= 0 ? dataB[indexB] : 0;\n        var current = vA - vB - reminder;\n        data.push(current >>> 0);\n        reminder = current < 0 ? 1 : 0;\n    }\n    return { sign: arrayIntA.sign, data: data.reverse() };\n}\nexports.substractArrayIntToNew = substractArrayIntToNew;\nfunction trimArrayIntInplace(arrayInt) {\n    var data = arrayInt.data;\n    var firstNonZero = 0;\n    for (; firstNonZero !== data.length && data[firstNonZero] === 0; ++firstNonZero) { }\n    if (firstNonZero === data.length) {\n        arrayInt.sign = 1;\n        arrayInt.data = [0];\n        return arrayInt;\n    }\n    data.splice(0, firstNonZero);\n    return arrayInt;\n}\nexports.trimArrayIntInplace = trimArrayIntInplace;\nfunction fromNumberToArrayInt64(out, n) {\n    if (n < 0) {\n        var posN = -n;\n        out.sign = -1;\n        out.data[0] = ~~(posN / 0x100000000);\n        out.data[1] = posN >>> 0;\n    }\n    else {\n        out.sign = 1;\n        out.data[0] = ~~(n / 0x100000000);\n        out.data[1] = n >>> 0;\n    }\n    return out;\n}\nexports.fromNumberToArrayInt64 = fromNumberToArrayInt64;\nfunction substractArrayInt64(out, arrayIntA, arrayIntB) {\n    var lowA = arrayIntA.data[1];\n    var highA = arrayIntA.data[0];\n    var signA = arrayIntA.sign;\n    var lowB = arrayIntB.data[1];\n    var highB = arrayIntB.data[0];\n    var signB = arrayIntB.sign;\n    out.sign = 1;\n    if (signA === 1 && signB === -1) {\n        var low_1 = lowA + lowB;\n        var high = highA + highB + (low_1 > 0xffffffff ? 1 : 0);\n        out.data[0] = high >>> 0;\n        out.data[1] = low_1 >>> 0;\n        return out;\n    }\n    var lowFirst = lowA;\n    var highFirst = highA;\n    var lowSecond = lowB;\n    var highSecond = highB;\n    if (signA === -1) {\n        lowFirst = lowB;\n        highFirst = highB;\n        lowSecond = lowA;\n        highSecond = highA;\n    }\n    var reminderLow = 0;\n    var low = lowFirst - lowSecond;\n    if (low < 0) {\n        reminderLow = 1;\n        low = low >>> 0;\n    }\n    out.data[0] = highFirst - highSecond - reminderLow;\n    out.data[1] = low;\n    return out;\n}\nexports.substractArrayInt64 = substractArrayInt64;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
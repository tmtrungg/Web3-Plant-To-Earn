{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assert = exports.check = void 0;\n\nconst Stream_1 = require(\"../../stream/Stream\");\n\nconst GlobalParameters_1 = require(\"./configuration/GlobalParameters\");\n\nconst QualifiedParameters_1 = require(\"./configuration/QualifiedParameters\");\n\nconst DecorateProperty_1 = require(\"./DecorateProperty\");\n\nconst RunnerIterator_1 = require(\"./RunnerIterator\");\n\nconst SourceValuesIterator_1 = require(\"./SourceValuesIterator\");\n\nconst Tosser_1 = require(\"./Tosser\");\n\nconst PathWalker_1 = require(\"./utils/PathWalker\");\n\nconst RunDetailsFormatter_1 = require(\"./utils/RunDetailsFormatter\");\n\nfunction runIt(property, shrink, sourceValues, verbose, interruptedAsFailure) {\n  const runner = new RunnerIterator_1.RunnerIterator(sourceValues, shrink, verbose, interruptedAsFailure);\n\n  for (const v of runner) {\n    const out = property.run(v);\n    runner.handleResult(out);\n  }\n\n  return runner.runExecution;\n}\n\nasync function asyncRunIt(property, shrink, sourceValues, verbose, interruptedAsFailure) {\n  const runner = new RunnerIterator_1.RunnerIterator(sourceValues, shrink, verbose, interruptedAsFailure);\n\n  for (const v of runner) {\n    const out = await property.run(v);\n    runner.handleResult(out);\n  }\n\n  return runner.runExecution;\n}\n\nfunction runnerPathWalker(valueProducers, shrink, path) {\n  const pathPoints = path.split(':');\n  const pathStream = (0, Stream_1.stream)(valueProducers).drop(pathPoints.length > 0 ? +pathPoints[0] : 0).map(producer => producer());\n  const adaptedPath = ['0', ...pathPoints.slice(1)].join(':');\n  return (0, Stream_1.stream)((0, PathWalker_1.pathWalk)(adaptedPath, pathStream, shrink)).map(v => () => v);\n}\n\nfunction buildInitialValues(valueProducers, shrink, qParams) {\n  if (qParams.path.length === 0) {\n    return (0, Stream_1.stream)(valueProducers);\n  }\n\n  return runnerPathWalker(valueProducers, shrink, qParams.path);\n}\n\nfunction check(rawProperty, params) {\n  if (rawProperty == null || rawProperty.generate == null) throw new Error('Invalid property encountered, please use a valid property');\n  if (rawProperty.run == null) throw new Error('Invalid property encountered, please use a valid property not an arbitrary');\n  const qParams = QualifiedParameters_1.QualifiedParameters.read(Object.assign(Object.assign({}, (0, GlobalParameters_1.readConfigureGlobal)()), params));\n  if (qParams.reporter !== null && qParams.asyncReporter !== null) throw new Error('Invalid parameters encountered, reporter and asyncReporter cannot be specified together');\n  if (qParams.asyncReporter !== null && !rawProperty.isAsync()) throw new Error('Invalid parameters encountered, only asyncProperty can be used when asyncReporter specified');\n  const property = (0, DecorateProperty_1.decorateProperty)(rawProperty, qParams);\n  const generator = (0, Tosser_1.toss)(property, qParams.seed, qParams.randomType, qParams.examples);\n  const maxInitialIterations = qParams.path.indexOf(':') === -1 ? qParams.numRuns : -1;\n  const maxSkips = qParams.numRuns * qParams.maxSkipsPerRun;\n  const shrink = property.shrink.bind(property);\n  const initialValues = buildInitialValues(generator, shrink, qParams);\n  const sourceValues = new SourceValuesIterator_1.SourceValuesIterator(initialValues, maxInitialIterations, maxSkips);\n  const finalShrink = !qParams.endOnFailure ? shrink : Stream_1.Stream.nil;\n  return property.isAsync() ? asyncRunIt(property, finalShrink, sourceValues, qParams.verbose, qParams.markInterruptAsFailure).then(e => e.toRunDetails(qParams.seed, qParams.path, maxSkips, qParams)) : runIt(property, finalShrink, sourceValues, qParams.verbose, qParams.markInterruptAsFailure).toRunDetails(qParams.seed, qParams.path, maxSkips, qParams);\n}\n\nexports.check = check;\n\nfunction assert(property, params) {\n  const out = check(property, params);\n  if (property.isAsync()) return out.then(RunDetailsFormatter_1.asyncReportRunDetails);else (0, RunDetailsFormatter_1.reportRunDetails)(out);\n}\n\nexports.assert = assert;","map":{"version":3,"names":["Object","defineProperty","exports","value","assert","check","Stream_1","require","GlobalParameters_1","QualifiedParameters_1","DecorateProperty_1","RunnerIterator_1","SourceValuesIterator_1","Tosser_1","PathWalker_1","RunDetailsFormatter_1","runIt","property","shrink","sourceValues","verbose","interruptedAsFailure","runner","RunnerIterator","v","out","run","handleResult","runExecution","asyncRunIt","runnerPathWalker","valueProducers","path","pathPoints","split","pathStream","stream","drop","length","map","producer","adaptedPath","slice","join","pathWalk","buildInitialValues","qParams","rawProperty","params","generate","Error","QualifiedParameters","read","assign","readConfigureGlobal","reporter","asyncReporter","isAsync","decorateProperty","generator","toss","seed","randomType","examples","maxInitialIterations","indexOf","numRuns","maxSkips","maxSkipsPerRun","bind","initialValues","SourceValuesIterator","finalShrink","endOnFailure","Stream","nil","markInterruptAsFailure","then","e","toRunDetails","asyncReportRunDetails","reportRunDetails"],"sources":["/Users/tranminhtrung/Desktop/learn_web3/gamble/node_modules/fast-check/lib/check/runner/Runner.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assert = exports.check = void 0;\nconst Stream_1 = require(\"../../stream/Stream\");\nconst GlobalParameters_1 = require(\"./configuration/GlobalParameters\");\nconst QualifiedParameters_1 = require(\"./configuration/QualifiedParameters\");\nconst DecorateProperty_1 = require(\"./DecorateProperty\");\nconst RunnerIterator_1 = require(\"./RunnerIterator\");\nconst SourceValuesIterator_1 = require(\"./SourceValuesIterator\");\nconst Tosser_1 = require(\"./Tosser\");\nconst PathWalker_1 = require(\"./utils/PathWalker\");\nconst RunDetailsFormatter_1 = require(\"./utils/RunDetailsFormatter\");\nfunction runIt(property, shrink, sourceValues, verbose, interruptedAsFailure) {\n    const runner = new RunnerIterator_1.RunnerIterator(sourceValues, shrink, verbose, interruptedAsFailure);\n    for (const v of runner) {\n        const out = property.run(v);\n        runner.handleResult(out);\n    }\n    return runner.runExecution;\n}\nasync function asyncRunIt(property, shrink, sourceValues, verbose, interruptedAsFailure) {\n    const runner = new RunnerIterator_1.RunnerIterator(sourceValues, shrink, verbose, interruptedAsFailure);\n    for (const v of runner) {\n        const out = await property.run(v);\n        runner.handleResult(out);\n    }\n    return runner.runExecution;\n}\nfunction runnerPathWalker(valueProducers, shrink, path) {\n    const pathPoints = path.split(':');\n    const pathStream = (0, Stream_1.stream)(valueProducers)\n        .drop(pathPoints.length > 0 ? +pathPoints[0] : 0)\n        .map((producer) => producer());\n    const adaptedPath = ['0', ...pathPoints.slice(1)].join(':');\n    return (0, Stream_1.stream)((0, PathWalker_1.pathWalk)(adaptedPath, pathStream, shrink)).map((v) => () => v);\n}\nfunction buildInitialValues(valueProducers, shrink, qParams) {\n    if (qParams.path.length === 0) {\n        return (0, Stream_1.stream)(valueProducers);\n    }\n    return runnerPathWalker(valueProducers, shrink, qParams.path);\n}\nfunction check(rawProperty, params) {\n    if (rawProperty == null || rawProperty.generate == null)\n        throw new Error('Invalid property encountered, please use a valid property');\n    if (rawProperty.run == null)\n        throw new Error('Invalid property encountered, please use a valid property not an arbitrary');\n    const qParams = QualifiedParameters_1.QualifiedParameters.read(Object.assign(Object.assign({}, (0, GlobalParameters_1.readConfigureGlobal)()), params));\n    if (qParams.reporter !== null && qParams.asyncReporter !== null)\n        throw new Error('Invalid parameters encountered, reporter and asyncReporter cannot be specified together');\n    if (qParams.asyncReporter !== null && !rawProperty.isAsync())\n        throw new Error('Invalid parameters encountered, only asyncProperty can be used when asyncReporter specified');\n    const property = (0, DecorateProperty_1.decorateProperty)(rawProperty, qParams);\n    const generator = (0, Tosser_1.toss)(property, qParams.seed, qParams.randomType, qParams.examples);\n    const maxInitialIterations = qParams.path.indexOf(':') === -1 ? qParams.numRuns : -1;\n    const maxSkips = qParams.numRuns * qParams.maxSkipsPerRun;\n    const shrink = property.shrink.bind(property);\n    const initialValues = buildInitialValues(generator, shrink, qParams);\n    const sourceValues = new SourceValuesIterator_1.SourceValuesIterator(initialValues, maxInitialIterations, maxSkips);\n    const finalShrink = !qParams.endOnFailure ? shrink : Stream_1.Stream.nil;\n    return property.isAsync()\n        ? asyncRunIt(property, finalShrink, sourceValues, qParams.verbose, qParams.markInterruptAsFailure).then((e) => e.toRunDetails(qParams.seed, qParams.path, maxSkips, qParams))\n        : runIt(property, finalShrink, sourceValues, qParams.verbose, qParams.markInterruptAsFailure).toRunDetails(qParams.seed, qParams.path, maxSkips, qParams);\n}\nexports.check = check;\nfunction assert(property, params) {\n    const out = check(property, params);\n    if (property.isAsync())\n        return out.then(RunDetailsFormatter_1.asyncReportRunDetails);\n    else\n        (0, RunDetailsFormatter_1.reportRunDetails)(out);\n}\nexports.assert = assert;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
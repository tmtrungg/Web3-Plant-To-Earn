{"ast":null,"code":"var _jsxFileName = \"/Users/tranminhtrung/Desktop/learn_web3/gamble/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport web3 from './web3';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Gamble from './ultis/Gamble';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [owner, setOwner] = useState('');\n  const [winner, setWinner] = useState('');\n  const [account, setAccount] = useState('');\n  const [message, setMessage] = useState('');\n  const [ended, setEnded] = useState('');\n  useEffect(() => {\n    async function asyncCalls() {\n      await Gamble.methods.owner().call().then(result => setOwner(result));\n      await web3.eth.getAccounts().then(result => setAccount(result));\n      await Gamble.methods.ended().call().then(result => setEnded(result));\n    }\n\n    asyncCalls();\n  }, []);\n  console.log(ended);\n\n  const onEnded = async (_ref, id) => {\n    let {\n      value\n    } = _ref;\n    const accounts = await web3.eth.getAccounts();\n    setMessage('Waiting for the transaction to be mined...');\n    await Gamble.methods.Attend[id]().send({\n      from: accounts[0],\n      value: web3.utils.toWei({\n        value\n      }, 'ether')\n    });\n    setMessage('You have been entered into planning at $');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Current balance:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"b\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n      },\n      children: \"Connect Metamask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), account ? account : \"log in please\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" end: \", String(ended)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: String(account) === String(owner) ? String(ended) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"T9wfmsr+81Gyq4HQ5VsgMprL3VE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","web3","useState","useEffect","detectEthereumProvider","Gamble","App","owner","setOwner","winner","setWinner","account","setAccount","message","setMessage","ended","setEnded","asyncCalls","methods","call","then","result","eth","getAccounts","console","log","onEnded","id","value","accounts","Attend","send","from","utils","toWei","window","ethereum","request","method","String"],"sources":["/Users/tranminhtrung/Desktop/learn_web3/gamble/src/App.jsx"],"sourcesContent":["import logo from './logo.svg';\nimport web3 from './web3';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Gamble from './ultis/Gamble';\n\nconst App = () => {\n  \n  const [owner,setOwner] = useState('');\n  const [winner,setWinner] = useState('');\n  const [account,setAccount] = useState('');\n  const [message, setMessage] = useState('');\n  const [ended,setEnded] = useState('');\n\n  useEffect(() => {\n    async function asyncCalls() {\n      await Gamble.methods.owner().call().then(result => setOwner(result));\n      await web3.eth.getAccounts().then(result => setAccount(result)); \n      await Gamble.methods.ended().call().then(result => setEnded(result));\n    }\n    asyncCalls();\n  }, [])\n  console.log(ended)\n  const onEnded = async ({value},id) => {\n    const accounts = await web3.eth.getAccounts(); \n    setMessage('Waiting for the transaction to be mined...');\n    await Gamble.methods.Attend[id]().send({\n      from: accounts[0],\n      value: web3.utils.toWei({value}, 'ether'),\n    });\n    setMessage('You have been entered into planning at $');\n  }\n  return (\n    <div>\n      <div>Current balance:</div>\n      \n      <button>b</button>\n      <button onClick = {() => {\n        window.ethereum.request({method: 'eth_requestAccounts'});\n      }}\n      >Connect Metamask</button>\n      <span>\n        <p>Address</p>\n        {account ? account : \"log in please\"}\n        <p> end: {String(ended)}</p>\n        <h2>{message}</h2>\n        <p>{String(account) === String(owner) ? String(ended) : \"\"}</p>\n        \n      </span>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
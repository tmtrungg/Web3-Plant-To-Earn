{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultTreeAdapter = void 0;\n\nconst html_js_1 = require(\"../common/html.js\");\n\nfunction createTextNode(value) {\n  return {\n    nodeName: '#text',\n    value,\n    parentNode: null\n  };\n}\n\nexports.defaultTreeAdapter = {\n  //Node construction\n  createDocument() {\n    return {\n      nodeName: '#document',\n      mode: html_js_1.DOCUMENT_MODE.NO_QUIRKS,\n      childNodes: []\n    };\n  },\n\n  createDocumentFragment() {\n    return {\n      nodeName: '#document-fragment',\n      childNodes: []\n    };\n  },\n\n  createElement(tagName, namespaceURI, attrs) {\n    return {\n      nodeName: tagName,\n      tagName,\n      attrs,\n      namespaceURI,\n      childNodes: [],\n      parentNode: null\n    };\n  },\n\n  createCommentNode(data) {\n    return {\n      nodeName: '#comment',\n      data,\n      parentNode: null\n    };\n  },\n\n  //Tree mutation\n  appendChild(parentNode, newNode) {\n    parentNode.childNodes.push(newNode);\n    newNode.parentNode = parentNode;\n  },\n\n  insertBefore(parentNode, newNode, referenceNode) {\n    const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n    parentNode.childNodes.splice(insertionIdx, 0, newNode);\n    newNode.parentNode = parentNode;\n  },\n\n  setTemplateContent(templateElement, contentElement) {\n    templateElement.content = contentElement;\n  },\n\n  getTemplateContent(templateElement) {\n    return templateElement.content;\n  },\n\n  setDocumentType(document, name, publicId, systemId) {\n    const doctypeNode = document.childNodes.find(node => node.nodeName === '#documentType');\n\n    if (doctypeNode) {\n      doctypeNode.name = name;\n      doctypeNode.publicId = publicId;\n      doctypeNode.systemId = systemId;\n    } else {\n      const node = {\n        nodeName: '#documentType',\n        name,\n        publicId,\n        systemId,\n        parentNode: null\n      };\n      exports.defaultTreeAdapter.appendChild(document, node);\n    }\n  },\n\n  setDocumentMode(document, mode) {\n    document.mode = mode;\n  },\n\n  getDocumentMode(document) {\n    return document.mode;\n  },\n\n  detachNode(node) {\n    if (node.parentNode) {\n      const idx = node.parentNode.childNodes.indexOf(node);\n      node.parentNode.childNodes.splice(idx, 1);\n      node.parentNode = null;\n    }\n  },\n\n  insertText(parentNode, text) {\n    if (parentNode.childNodes.length > 0) {\n      const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n\n      if (exports.defaultTreeAdapter.isTextNode(prevNode)) {\n        prevNode.value += text;\n        return;\n      }\n    }\n\n    exports.defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n  },\n\n  insertTextBefore(parentNode, text, referenceNode) {\n    const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n\n    if (prevNode && exports.defaultTreeAdapter.isTextNode(prevNode)) {\n      prevNode.value += text;\n    } else {\n      exports.defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n    }\n  },\n\n  adoptAttributes(recipient, attrs) {\n    const recipientAttrsMap = new Set(recipient.attrs.map(attr => attr.name));\n\n    for (let j = 0; j < attrs.length; j++) {\n      if (!recipientAttrsMap.has(attrs[j].name)) {\n        recipient.attrs.push(attrs[j]);\n      }\n    }\n  },\n\n  //Tree traversing\n  getFirstChild(node) {\n    return node.childNodes[0];\n  },\n\n  getChildNodes(node) {\n    return node.childNodes;\n  },\n\n  getParentNode(node) {\n    return node.parentNode;\n  },\n\n  getAttrList(element) {\n    return element.attrs;\n  },\n\n  //Node data\n  getTagName(element) {\n    return element.tagName;\n  },\n\n  getNamespaceURI(element) {\n    return element.namespaceURI;\n  },\n\n  getTextNodeContent(textNode) {\n    return textNode.value;\n  },\n\n  getCommentNodeContent(commentNode) {\n    return commentNode.data;\n  },\n\n  getDocumentTypeNodeName(doctypeNode) {\n    return doctypeNode.name;\n  },\n\n  getDocumentTypeNodePublicId(doctypeNode) {\n    return doctypeNode.publicId;\n  },\n\n  getDocumentTypeNodeSystemId(doctypeNode) {\n    return doctypeNode.systemId;\n  },\n\n  //Node types\n  isTextNode(node) {\n    return node.nodeName === '#text';\n  },\n\n  isCommentNode(node) {\n    return node.nodeName === '#comment';\n  },\n\n  isDocumentTypeNode(node) {\n    return node.nodeName === '#documentType';\n  },\n\n  isElementNode(node) {\n    return Object.prototype.hasOwnProperty.call(node, 'tagName');\n  },\n\n  // Source code location\n  setNodeSourceCodeLocation(node, location) {\n    node.sourceCodeLocation = location;\n  },\n\n  getNodeSourceCodeLocation(node) {\n    return node.sourceCodeLocation;\n  },\n\n  updateNodeSourceCodeLocation(node, endLocation) {\n    node.sourceCodeLocation = Object.assign(Object.assign({}, node.sourceCodeLocation), endLocation);\n  }\n\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","defaultTreeAdapter","html_js_1","require","createTextNode","nodeName","parentNode","createDocument","mode","DOCUMENT_MODE","NO_QUIRKS","childNodes","createDocumentFragment","createElement","tagName","namespaceURI","attrs","createCommentNode","data","appendChild","newNode","push","insertBefore","referenceNode","insertionIdx","indexOf","splice","setTemplateContent","templateElement","contentElement","content","getTemplateContent","setDocumentType","document","name","publicId","systemId","doctypeNode","find","node","setDocumentMode","getDocumentMode","detachNode","idx","insertText","text","length","prevNode","isTextNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","Set","map","attr","j","has","getFirstChild","getChildNodes","getParentNode","getAttrList","element","getTagName","getNamespaceURI","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isCommentNode","isDocumentTypeNode","isElementNode","prototype","hasOwnProperty","call","setNodeSourceCodeLocation","location","sourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","assign"],"sources":["/Users/tranminhtrung/Desktop/learn_web3/gamble/node_modules/parse5-htmlparser2-tree-adapter/node_modules/parse5/dist/cjs/tree-adapters/default.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultTreeAdapter = void 0;\nconst html_js_1 = require(\"../common/html.js\");\nfunction createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null,\n    };\n}\nexports.defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: html_js_1.DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            exports.defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (exports.defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        exports.defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && exports.defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            exports.defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = Object.assign(Object.assign({}, node.sourceCodeLocation), endLocation);\n    },\n};\n//# sourceMappingURL=default.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script"}
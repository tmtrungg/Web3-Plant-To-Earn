{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.partsToUrlUnmapper = exports.partsToUrlMapper = void 0;\n\nfunction partsToUrlMapper(data) {\n  const [scheme, authority, path] = data;\n  const query = data[3] === null ? '' : `?${data[3]}`;\n  const fragments = data[4] === null ? '' : `#${data[4]}`;\n  return `${scheme}://${authority}${path}${query}${fragments}`;\n}\n\nexports.partsToUrlMapper = partsToUrlMapper;\nconst UrlSplitRegex = /^([[A-Za-z][A-Za-z0-9+.-]*):\\/\\/([^/?#]*)([^?#]*)(\\?[A-Za-z0-9\\-._~!$&'()*+,;=:@/?%]*)?(#[A-Za-z0-9\\-._~!$&'()*+,;=:@/?%]*)?$/;\n\nfunction partsToUrlUnmapper(value) {\n  if (typeof value !== 'string') {\n    throw new Error('Incompatible value received: type');\n  }\n\n  const m = UrlSplitRegex.exec(value);\n\n  if (m === null) {\n    throw new Error('Incompatible value received');\n  }\n\n  const scheme = m[1];\n  const authority = m[2];\n  const path = m[3];\n  const query = m[4];\n  const fragments = m[5];\n  return [scheme, authority, path, query !== undefined ? query.substring(1) : null, fragments !== undefined ? fragments.substring(1) : null];\n}\n\nexports.partsToUrlUnmapper = partsToUrlUnmapper;","map":{"version":3,"names":["Object","defineProperty","exports","value","partsToUrlUnmapper","partsToUrlMapper","data","scheme","authority","path","query","fragments","UrlSplitRegex","Error","m","exec","undefined","substring"],"sources":["/Users/tranminhtrung/Desktop/learn_web3/gamble/node_modules/fast-check/lib/arbitrary/_internals/mappers/PartsToUrl.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.partsToUrlUnmapper = exports.partsToUrlMapper = void 0;\nfunction partsToUrlMapper(data) {\n    const [scheme, authority, path] = data;\n    const query = data[3] === null ? '' : `?${data[3]}`;\n    const fragments = data[4] === null ? '' : `#${data[4]}`;\n    return `${scheme}://${authority}${path}${query}${fragments}`;\n}\nexports.partsToUrlMapper = partsToUrlMapper;\nconst UrlSplitRegex = /^([[A-Za-z][A-Za-z0-9+.-]*):\\/\\/([^/?#]*)([^?#]*)(\\?[A-Za-z0-9\\-._~!$&'()*+,;=:@/?%]*)?(#[A-Za-z0-9\\-._~!$&'()*+,;=:@/?%]*)?$/;\nfunction partsToUrlUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Incompatible value received: type');\n    }\n    const m = UrlSplitRegex.exec(value);\n    if (m === null) {\n        throw new Error('Incompatible value received');\n    }\n    const scheme = m[1];\n    const authority = m[2];\n    const path = m[3];\n    const query = m[4];\n    const fragments = m[5];\n    return [\n        scheme,\n        authority,\n        path,\n        query !== undefined ? query.substring(1) : null,\n        fragments !== undefined ? fragments.substring(1) : null,\n    ];\n}\nexports.partsToUrlUnmapper = partsToUrlUnmapper;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,kBAAR,GAA6BF,OAAO,CAACG,gBAAR,GAA2B,KAAK,CAA7D;;AACA,SAASA,gBAAT,CAA0BC,IAA1B,EAAgC;EAC5B,MAAM,CAACC,MAAD,EAASC,SAAT,EAAoBC,IAApB,IAA4BH,IAAlC;EACA,MAAMI,KAAK,GAAGJ,IAAI,CAAC,CAAD,CAAJ,KAAY,IAAZ,GAAmB,EAAnB,GAAyB,IAAGA,IAAI,CAAC,CAAD,CAAI,EAAlD;EACA,MAAMK,SAAS,GAAGL,IAAI,CAAC,CAAD,CAAJ,KAAY,IAAZ,GAAmB,EAAnB,GAAyB,IAAGA,IAAI,CAAC,CAAD,CAAI,EAAtD;EACA,OAAQ,GAAEC,MAAO,MAAKC,SAAU,GAAEC,IAAK,GAAEC,KAAM,GAAEC,SAAU,EAA3D;AACH;;AACDT,OAAO,CAACG,gBAAR,GAA2BA,gBAA3B;AACA,MAAMO,aAAa,GAAG,+HAAtB;;AACA,SAASR,kBAAT,CAA4BD,KAA5B,EAAmC;EAC/B,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;IAC3B,MAAM,IAAIU,KAAJ,CAAU,mCAAV,CAAN;EACH;;EACD,MAAMC,CAAC,GAAGF,aAAa,CAACG,IAAd,CAAmBZ,KAAnB,CAAV;;EACA,IAAIW,CAAC,KAAK,IAAV,EAAgB;IACZ,MAAM,IAAID,KAAJ,CAAU,6BAAV,CAAN;EACH;;EACD,MAAMN,MAAM,GAAGO,CAAC,CAAC,CAAD,CAAhB;EACA,MAAMN,SAAS,GAAGM,CAAC,CAAC,CAAD,CAAnB;EACA,MAAML,IAAI,GAAGK,CAAC,CAAC,CAAD,CAAd;EACA,MAAMJ,KAAK,GAAGI,CAAC,CAAC,CAAD,CAAf;EACA,MAAMH,SAAS,GAAGG,CAAC,CAAC,CAAD,CAAnB;EACA,OAAO,CACHP,MADG,EAEHC,SAFG,EAGHC,IAHG,EAIHC,KAAK,KAAKM,SAAV,GAAsBN,KAAK,CAACO,SAAN,CAAgB,CAAhB,CAAtB,GAA2C,IAJxC,EAKHN,SAAS,KAAKK,SAAd,GAA0BL,SAAS,CAACM,SAAV,CAAoB,CAApB,CAA1B,GAAmD,IALhD,CAAP;AAOH;;AACDf,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B"},"metadata":{},"sourceType":"script"}
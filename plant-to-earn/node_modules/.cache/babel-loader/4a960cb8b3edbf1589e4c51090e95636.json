{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.prevElementSibling = exports.nextElementSibling = exports.getName = exports.hasAttrib = exports.getAttributeValue = exports.getSiblings = exports.getParent = exports.getChildren = void 0;\n\nvar domhandler_1 = require(\"domhandler\");\n/**\n * Get a node's children.\n *\n * @category Traversal\n * @param elem Node to get the children of.\n * @returns `elem`'s children, or an empty array.\n */\n\n\nfunction getChildren(elem) {\n  return (0, domhandler_1.hasChildren)(elem) ? elem.children : [];\n}\n\nexports.getChildren = getChildren;\n/**\n * Get a node's parent.\n *\n * @category Traversal\n * @param elem Node to get the parent of.\n * @returns `elem`'s parent node.\n */\n\nfunction getParent(elem) {\n  return elem.parent || null;\n}\n\nexports.getParent = getParent;\n/**\n * Gets an elements siblings, including the element itself.\n *\n * Attempts to get the children through the element's parent first. If we don't\n * have a parent (the element is a root node), we walk the element's `prev` &\n * `next` to get all remaining nodes.\n *\n * @category Traversal\n * @param elem Element to get the siblings of.\n * @returns `elem`'s siblings.\n */\n\nfunction getSiblings(elem) {\n  var _a, _b;\n\n  var parent = getParent(elem);\n  if (parent != null) return getChildren(parent);\n  var siblings = [elem];\n  var prev = elem.prev,\n      next = elem.next;\n\n  while (prev != null) {\n    siblings.unshift(prev);\n    _a = prev, prev = _a.prev;\n  }\n\n  while (next != null) {\n    siblings.push(next);\n    _b = next, next = _b.next;\n  }\n\n  return siblings;\n}\n\nexports.getSiblings = getSiblings;\n/**\n * Gets an attribute from an element.\n *\n * @category Traversal\n * @param elem Element to check.\n * @param name Attribute name to retrieve.\n * @returns The element's attribute value, or `undefined`.\n */\n\nfunction getAttributeValue(elem, name) {\n  var _a;\n\n  return (_a = elem.attribs) === null || _a === void 0 ? void 0 : _a[name];\n}\n\nexports.getAttributeValue = getAttributeValue;\n/**\n * Checks whether an element has an attribute.\n *\n * @category Traversal\n * @param elem Element to check.\n * @param name Attribute name to look for.\n * @returns Returns whether `elem` has the attribute `name`.\n */\n\nfunction hasAttrib(elem, name) {\n  return elem.attribs != null && Object.prototype.hasOwnProperty.call(elem.attribs, name) && elem.attribs[name] != null;\n}\n\nexports.hasAttrib = hasAttrib;\n/**\n * Get the tag name of an element.\n *\n * @category Traversal\n * @param elem The element to get the name for.\n * @returns The tag name of `elem`.\n */\n\nfunction getName(elem) {\n  return elem.name;\n}\n\nexports.getName = getName;\n/**\n * Returns the next element sibling of a node.\n *\n * @category Traversal\n * @param elem The element to get the next sibling of.\n * @returns `elem`'s next sibling that is a tag.\n */\n\nfunction nextElementSibling(elem) {\n  var _a;\n\n  var next = elem.next;\n\n  while (next !== null && !(0, domhandler_1.isTag)(next)) _a = next, next = _a.next;\n\n  return next;\n}\n\nexports.nextElementSibling = nextElementSibling;\n/**\n * Returns the previous element sibling of a node.\n *\n * @category Traversal\n * @param elem The element to get the previous sibling of.\n * @returns `elem`'s previous sibling that is a tag.\n */\n\nfunction prevElementSibling(elem) {\n  var _a;\n\n  var prev = elem.prev;\n\n  while (prev !== null && !(0, domhandler_1.isTag)(prev)) _a = prev, prev = _a.prev;\n\n  return prev;\n}\n\nexports.prevElementSibling = prevElementSibling;","map":{"version":3,"mappings":";;;;;;;AAAA;AASA;;;;;;;;;AAOA,SAAgBA,WAAhB,CAA4BC,IAA5B,EAAyC;EACrC,OAAO,8BAAYA,IAAZ,IAAoBA,IAAI,CAACC,QAAzB,GAAoC,EAA3C;AACH;;AAFDC;AAKA;;;;;;;;AAOA,SAAgBC,SAAhB,CAA0BH,IAA1B,EAAuC;EACnC,OAAOA,IAAI,CAACI,MAAL,IAAe,IAAtB;AACH;;AAFDF;AAIA;;;;;;;;;;;;AAWA,SAAgBG,WAAhB,CAA4BL,IAA5B,EAAyC;;;EACrC,IAAMI,MAAM,GAAGD,SAAS,CAACH,IAAD,CAAxB;EACA,IAAII,MAAM,IAAI,IAAd,EAAoB,OAAOL,WAAW,CAACK,MAAD,CAAlB;EAEpB,IAAME,QAAQ,GAAG,CAACN,IAAD,CAAjB;EACM,QAAI,GAAWA,IAAI,KAAnB;EAAA,IAAMO,IAAI,GAAKP,IAAI,KAAnB;;EACN,OAAOQ,IAAI,IAAI,IAAf,EAAqB;IACjBF,QAAQ,CAACG,OAAT,CAAiBD,IAAjB;IACCE,KAAWF,IAAX,EAAEA,IAAI,UAAP;EACH;;EACD,OAAOD,IAAI,IAAI,IAAf,EAAqB;IACjBD,QAAQ,CAACK,IAAT,CAAcJ,IAAd;IACCK,KAAWL,IAAX,EAAEA,IAAI,UAAP;EACH;;EACD,OAAOD,QAAP;AACH;;AAfDJ;AAiBA;;;;;;;;;AAQA,SAAgBW,iBAAhB,CACIb,IADJ,EAEIc,IAFJ,EAEgB;;;EAEZ,OAAO,UAAI,CAACC,OAAL,MAAY,IAAZ,IAAYL,aAAZ,GAAY,MAAZ,GAAYA,GAAGI,IAAH,CAAnB;AACH;;AALDZ;AAOA;;;;;;;;;AAQA,SAAgBc,SAAhB,CAA0BhB,IAA1B,EAAyCc,IAAzC,EAAqD;EACjD,OACId,IAAI,CAACe,OAAL,IAAgB,IAAhB,IACAE,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCpB,IAAI,CAACe,OAA1C,EAAmDD,IAAnD,CADA,IAEAd,IAAI,CAACe,OAAL,CAAaD,IAAb,KAAsB,IAH1B;AAKH;;AANDZ;AAQA;;;;;;;;AAOA,SAAgBmB,OAAhB,CAAwBrB,IAAxB,EAAqC;EACjC,OAAOA,IAAI,CAACc,IAAZ;AACH;;AAFDZ;AAIA;;;;;;;;AAOA,SAAgBoB,kBAAhB,CAAmCtB,IAAnC,EAAgD;;;EACtC,QAAI,GAAKA,IAAI,KAAb;;EACN,OAAOO,IAAI,KAAK,IAAT,IAAiB,CAAC,wBAAMA,IAAN,CAAzB,EAAuCG,KAAWH,IAAX,EAAEA,IAAI,UAAP;;EACtC,OAAOA,IAAP;AACH;;AAJDL;AAMA;;;;;;;;AAOA,SAAgBqB,kBAAhB,CAAmCvB,IAAnC,EAAgD;;;EACtC,QAAI,GAAKA,IAAI,KAAb;;EACN,OAAOQ,IAAI,KAAK,IAAT,IAAiB,CAAC,wBAAMA,IAAN,CAAzB,EAAuCE,KAAWF,IAAX,EAAEA,IAAI,UAAP;;EACtC,OAAOA,IAAP;AACH;;AAJDN","names":["getChildren","elem","children","exports","getParent","parent","getSiblings","siblings","next","prev","unshift","_a","push","_b","getAttributeValue","name","attribs","hasAttrib","Object","prototype","hasOwnProperty","call","getName","nextElementSibling","prevElementSibling"],"sources":["traversal.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.adapter = exports.serializeDoctypeContent = void 0;\n\nconst parse5_1 = require(\"parse5\");\n\nconst domhandler_1 = require(\"domhandler\");\n\nfunction createTextNode(value) {\n  return new domhandler_1.Text(value);\n}\n\nfunction enquoteDoctypeId(id) {\n  const quote = id.includes('\"') ? \"'\" : '\"';\n  return quote + id + quote;\n}\n/** @internal */\n\n\nfunction serializeDoctypeContent(name, publicId, systemId) {\n  let str = '!DOCTYPE ';\n\n  if (name) {\n    str += name;\n  }\n\n  if (publicId) {\n    str += ` PUBLIC ${enquoteDoctypeId(publicId)}`;\n  } else if (systemId) {\n    str += ' SYSTEM';\n  }\n\n  if (systemId) {\n    str += ` ${enquoteDoctypeId(systemId)}`;\n  }\n\n  return str;\n}\n\nexports.serializeDoctypeContent = serializeDoctypeContent;\nexports.adapter = {\n  // Re-exports from domhandler\n  isCommentNode: domhandler_1.isComment,\n  isElementNode: domhandler_1.isTag,\n  isTextNode: domhandler_1.isText,\n\n  //Node construction\n  createDocument() {\n    const node = new domhandler_1.Document([]);\n    node['x-mode'] = parse5_1.html.DOCUMENT_MODE.NO_QUIRKS;\n    return node;\n  },\n\n  createDocumentFragment() {\n    return new domhandler_1.Document([]);\n  },\n\n  createElement(tagName, namespaceURI, attrs) {\n    const attribs = Object.create(null);\n    const attribsNamespace = Object.create(null);\n    const attribsPrefix = Object.create(null);\n\n    for (let i = 0; i < attrs.length; i++) {\n      const attrName = attrs[i].name;\n      attribs[attrName] = attrs[i].value;\n      attribsNamespace[attrName] = attrs[i].namespace;\n      attribsPrefix[attrName] = attrs[i].prefix;\n    }\n\n    const node = new domhandler_1.Element(tagName, attribs, []);\n    node.namespace = namespaceURI;\n    node['x-attribsNamespace'] = attribsNamespace;\n    node['x-attribsPrefix'] = attribsPrefix;\n    return node;\n  },\n\n  createCommentNode(data) {\n    return new domhandler_1.Comment(data);\n  },\n\n  //Tree mutation\n  appendChild(parentNode, newNode) {\n    const prev = parentNode.children[parentNode.children.length - 1];\n\n    if (prev) {\n      prev.next = newNode;\n      newNode.prev = prev;\n    }\n\n    parentNode.children.push(newNode);\n    newNode.parent = parentNode;\n  },\n\n  insertBefore(parentNode, newNode, referenceNode) {\n    const insertionIdx = parentNode.children.indexOf(referenceNode);\n    const {\n      prev\n    } = referenceNode;\n\n    if (prev) {\n      prev.next = newNode;\n      newNode.prev = prev;\n    }\n\n    referenceNode.prev = newNode;\n    newNode.next = referenceNode;\n    parentNode.children.splice(insertionIdx, 0, newNode);\n    newNode.parent = parentNode;\n  },\n\n  setTemplateContent(templateElement, contentElement) {\n    exports.adapter.appendChild(templateElement, contentElement);\n  },\n\n  getTemplateContent(templateElement) {\n    return templateElement.children[0];\n  },\n\n  setDocumentType(document, name, publicId, systemId) {\n    const data = serializeDoctypeContent(name, publicId, systemId);\n    let doctypeNode = document.children.find(node => (0, domhandler_1.isDirective)(node) && node.name === '!doctype');\n\n    if (doctypeNode) {\n      doctypeNode.data = data !== null && data !== void 0 ? data : null;\n    } else {\n      doctypeNode = new domhandler_1.ProcessingInstruction('!doctype', data);\n      exports.adapter.appendChild(document, doctypeNode);\n    }\n\n    doctypeNode['x-name'] = name !== null && name !== void 0 ? name : undefined;\n    doctypeNode['x-publicId'] = publicId !== null && publicId !== void 0 ? publicId : undefined;\n    doctypeNode['x-systemId'] = systemId !== null && systemId !== void 0 ? systemId : undefined;\n  },\n\n  setDocumentMode(document, mode) {\n    document['x-mode'] = mode;\n  },\n\n  getDocumentMode(document) {\n    return document['x-mode'];\n  },\n\n  detachNode(node) {\n    if (node.parent) {\n      const idx = node.parent.children.indexOf(node);\n      const {\n        prev,\n        next\n      } = node;\n      node.prev = null;\n      node.next = null;\n\n      if (prev) {\n        prev.next = next;\n      }\n\n      if (next) {\n        next.prev = prev;\n      }\n\n      node.parent.children.splice(idx, 1);\n      node.parent = null;\n    }\n  },\n\n  insertText(parentNode, text) {\n    const lastChild = parentNode.children[parentNode.children.length - 1];\n\n    if (lastChild && (0, domhandler_1.isText)(lastChild)) {\n      lastChild.data += text;\n    } else {\n      exports.adapter.appendChild(parentNode, createTextNode(text));\n    }\n  },\n\n  insertTextBefore(parentNode, text, referenceNode) {\n    const prevNode = parentNode.children[parentNode.children.indexOf(referenceNode) - 1];\n\n    if (prevNode && (0, domhandler_1.isText)(prevNode)) {\n      prevNode.data += text;\n    } else {\n      exports.adapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n    }\n  },\n\n  adoptAttributes(recipient, attrs) {\n    for (let i = 0; i < attrs.length; i++) {\n      const attrName = attrs[i].name;\n\n      if (typeof recipient.attribs[attrName] === 'undefined') {\n        recipient.attribs[attrName] = attrs[i].value;\n        recipient['x-attribsNamespace'][attrName] = attrs[i].namespace;\n        recipient['x-attribsPrefix'][attrName] = attrs[i].prefix;\n      }\n    }\n  },\n\n  //Tree traversing\n  getFirstChild(node) {\n    return node.children[0];\n  },\n\n  getChildNodes(node) {\n    return node.children;\n  },\n\n  getParentNode(node) {\n    return node.parent;\n  },\n\n  getAttrList(element) {\n    return element.attributes;\n  },\n\n  //Node data\n  getTagName(element) {\n    return element.name;\n  },\n\n  getNamespaceURI(element) {\n    return element.namespace;\n  },\n\n  getTextNodeContent(textNode) {\n    return textNode.data;\n  },\n\n  getCommentNodeContent(commentNode) {\n    return commentNode.data;\n  },\n\n  getDocumentTypeNodeName(doctypeNode) {\n    var _a;\n\n    return (_a = doctypeNode['x-name']) !== null && _a !== void 0 ? _a : '';\n  },\n\n  getDocumentTypeNodePublicId(doctypeNode) {\n    var _a;\n\n    return (_a = doctypeNode['x-publicId']) !== null && _a !== void 0 ? _a : '';\n  },\n\n  getDocumentTypeNodeSystemId(doctypeNode) {\n    var _a;\n\n    return (_a = doctypeNode['x-systemId']) !== null && _a !== void 0 ? _a : '';\n  },\n\n  //Node types\n  isDocumentTypeNode(node) {\n    return (0, domhandler_1.isDirective)(node) && node.name === '!doctype';\n  },\n\n  // Source code location\n  setNodeSourceCodeLocation(node, location) {\n    if (location) {\n      node.startIndex = location.startOffset;\n      node.endIndex = location.endOffset;\n    }\n\n    node.sourceCodeLocation = location;\n  },\n\n  getNodeSourceCodeLocation(node) {\n    return node.sourceCodeLocation;\n  },\n\n  updateNodeSourceCodeLocation(node, endLocation) {\n    if (endLocation.endOffset != null) node.endIndex = endLocation.endOffset;\n    node.sourceCodeLocation = Object.assign(Object.assign({}, node.sourceCodeLocation), endLocation);\n  }\n\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","adapter","serializeDoctypeContent","parse5_1","require","domhandler_1","createTextNode","Text","enquoteDoctypeId","id","quote","includes","name","publicId","systemId","str","isCommentNode","isComment","isElementNode","isTag","isTextNode","isText","createDocument","node","Document","html","DOCUMENT_MODE","NO_QUIRKS","createDocumentFragment","createElement","tagName","namespaceURI","attrs","attribs","create","attribsNamespace","attribsPrefix","i","length","attrName","namespace","prefix","Element","createCommentNode","data","Comment","appendChild","parentNode","newNode","prev","children","next","push","parent","insertBefore","referenceNode","insertionIdx","indexOf","splice","setTemplateContent","templateElement","contentElement","getTemplateContent","setDocumentType","document","doctypeNode","find","isDirective","ProcessingInstruction","undefined","setDocumentMode","mode","getDocumentMode","detachNode","idx","insertText","text","lastChild","insertTextBefore","prevNode","adoptAttributes","recipient","getFirstChild","getChildNodes","getParentNode","getAttrList","element","attributes","getTagName","getNamespaceURI","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","_a","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isDocumentTypeNode","setNodeSourceCodeLocation","location","startIndex","startOffset","endIndex","endOffset","sourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","assign"],"sources":["/Users/tranminhtrung/Desktop/learn_web3/gamble/node_modules/parse5-htmlparser2-tree-adapter/dist/cjs/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.adapter = exports.serializeDoctypeContent = void 0;\nconst parse5_1 = require(\"parse5\");\nconst domhandler_1 = require(\"domhandler\");\nfunction createTextNode(value) {\n    return new domhandler_1.Text(value);\n}\nfunction enquoteDoctypeId(id) {\n    const quote = id.includes('\"') ? \"'\" : '\"';\n    return quote + id + quote;\n}\n/** @internal */\nfunction serializeDoctypeContent(name, publicId, systemId) {\n    let str = '!DOCTYPE ';\n    if (name) {\n        str += name;\n    }\n    if (publicId) {\n        str += ` PUBLIC ${enquoteDoctypeId(publicId)}`;\n    }\n    else if (systemId) {\n        str += ' SYSTEM';\n    }\n    if (systemId) {\n        str += ` ${enquoteDoctypeId(systemId)}`;\n    }\n    return str;\n}\nexports.serializeDoctypeContent = serializeDoctypeContent;\nexports.adapter = {\n    // Re-exports from domhandler\n    isCommentNode: domhandler_1.isComment,\n    isElementNode: domhandler_1.isTag,\n    isTextNode: domhandler_1.isText,\n    //Node construction\n    createDocument() {\n        const node = new domhandler_1.Document([]);\n        node['x-mode'] = parse5_1.html.DOCUMENT_MODE.NO_QUIRKS;\n        return node;\n    },\n    createDocumentFragment() {\n        return new domhandler_1.Document([]);\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        const attribs = Object.create(null);\n        const attribsNamespace = Object.create(null);\n        const attribsPrefix = Object.create(null);\n        for (let i = 0; i < attrs.length; i++) {\n            const attrName = attrs[i].name;\n            attribs[attrName] = attrs[i].value;\n            attribsNamespace[attrName] = attrs[i].namespace;\n            attribsPrefix[attrName] = attrs[i].prefix;\n        }\n        const node = new domhandler_1.Element(tagName, attribs, []);\n        node.namespace = namespaceURI;\n        node['x-attribsNamespace'] = attribsNamespace;\n        node['x-attribsPrefix'] = attribsPrefix;\n        return node;\n    },\n    createCommentNode(data) {\n        return new domhandler_1.Comment(data);\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        const prev = parentNode.children[parentNode.children.length - 1];\n        if (prev) {\n            prev.next = newNode;\n            newNode.prev = prev;\n        }\n        parentNode.children.push(newNode);\n        newNode.parent = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.children.indexOf(referenceNode);\n        const { prev } = referenceNode;\n        if (prev) {\n            prev.next = newNode;\n            newNode.prev = prev;\n        }\n        referenceNode.prev = newNode;\n        newNode.next = referenceNode;\n        parentNode.children.splice(insertionIdx, 0, newNode);\n        newNode.parent = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        exports.adapter.appendChild(templateElement, contentElement);\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.children[0];\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const data = serializeDoctypeContent(name, publicId, systemId);\n        let doctypeNode = document.children.find((node) => (0, domhandler_1.isDirective)(node) && node.name === '!doctype');\n        if (doctypeNode) {\n            doctypeNode.data = data !== null && data !== void 0 ? data : null;\n        }\n        else {\n            doctypeNode = new domhandler_1.ProcessingInstruction('!doctype', data);\n            exports.adapter.appendChild(document, doctypeNode);\n        }\n        doctypeNode['x-name'] = name !== null && name !== void 0 ? name : undefined;\n        doctypeNode['x-publicId'] = publicId !== null && publicId !== void 0 ? publicId : undefined;\n        doctypeNode['x-systemId'] = systemId !== null && systemId !== void 0 ? systemId : undefined;\n    },\n    setDocumentMode(document, mode) {\n        document['x-mode'] = mode;\n    },\n    getDocumentMode(document) {\n        return document['x-mode'];\n    },\n    detachNode(node) {\n        if (node.parent) {\n            const idx = node.parent.children.indexOf(node);\n            const { prev, next } = node;\n            node.prev = null;\n            node.next = null;\n            if (prev) {\n                prev.next = next;\n            }\n            if (next) {\n                next.prev = prev;\n            }\n            node.parent.children.splice(idx, 1);\n            node.parent = null;\n        }\n    },\n    insertText(parentNode, text) {\n        const lastChild = parentNode.children[parentNode.children.length - 1];\n        if (lastChild && (0, domhandler_1.isText)(lastChild)) {\n            lastChild.data += text;\n        }\n        else {\n            exports.adapter.appendChild(parentNode, createTextNode(text));\n        }\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.children[parentNode.children.indexOf(referenceNode) - 1];\n        if (prevNode && (0, domhandler_1.isText)(prevNode)) {\n            prevNode.data += text;\n        }\n        else {\n            exports.adapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        for (let i = 0; i < attrs.length; i++) {\n            const attrName = attrs[i].name;\n            if (typeof recipient.attribs[attrName] === 'undefined') {\n                recipient.attribs[attrName] = attrs[i].value;\n                recipient['x-attribsNamespace'][attrName] = attrs[i].namespace;\n                recipient['x-attribsPrefix'][attrName] = attrs[i].prefix;\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.children[0];\n    },\n    getChildNodes(node) {\n        return node.children;\n    },\n    getParentNode(node) {\n        return node.parent;\n    },\n    getAttrList(element) {\n        return element.attributes;\n    },\n    //Node data\n    getTagName(element) {\n        return element.name;\n    },\n    getNamespaceURI(element) {\n        return element.namespace;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.data;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-name']) !== null && _a !== void 0 ? _a : '';\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-publicId']) !== null && _a !== void 0 ? _a : '';\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-systemId']) !== null && _a !== void 0 ? _a : '';\n    },\n    //Node types\n    isDocumentTypeNode(node) {\n        return (0, domhandler_1.isDirective)(node) && node.name === '!doctype';\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        if (location) {\n            node.startIndex = location.startOffset;\n            node.endIndex = location.endOffset;\n        }\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        if (endLocation.endOffset != null)\n            node.endIndex = endLocation.endOffset;\n        node.sourceCodeLocation = Object.assign(Object.assign({}, node.sourceCodeLocation), endLocation);\n    },\n};\n//# sourceMappingURL=index.js.map"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,OAAR,GAAkBF,OAAO,CAACG,uBAAR,GAAkC,KAAK,CAAzD;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAD,CAAxB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,YAAD,CAA5B;;AACA,SAASE,cAAT,CAAwBN,KAAxB,EAA+B;EAC3B,OAAO,IAAIK,YAAY,CAACE,IAAjB,CAAsBP,KAAtB,CAAP;AACH;;AACD,SAASQ,gBAAT,CAA0BC,EAA1B,EAA8B;EAC1B,MAAMC,KAAK,GAAGD,EAAE,CAACE,QAAH,CAAY,GAAZ,IAAmB,GAAnB,GAAyB,GAAvC;EACA,OAAOD,KAAK,GAAGD,EAAR,GAAaC,KAApB;AACH;AACD;;;AACA,SAASR,uBAAT,CAAiCU,IAAjC,EAAuCC,QAAvC,EAAiDC,QAAjD,EAA2D;EACvD,IAAIC,GAAG,GAAG,WAAV;;EACA,IAAIH,IAAJ,EAAU;IACNG,GAAG,IAAIH,IAAP;EACH;;EACD,IAAIC,QAAJ,EAAc;IACVE,GAAG,IAAK,WAAUP,gBAAgB,CAACK,QAAD,CAAW,EAA7C;EACH,CAFD,MAGK,IAAIC,QAAJ,EAAc;IACfC,GAAG,IAAI,SAAP;EACH;;EACD,IAAID,QAAJ,EAAc;IACVC,GAAG,IAAK,IAAGP,gBAAgB,CAACM,QAAD,CAAW,EAAtC;EACH;;EACD,OAAOC,GAAP;AACH;;AACDhB,OAAO,CAACG,uBAAR,GAAkCA,uBAAlC;AACAH,OAAO,CAACE,OAAR,GAAkB;EACd;EACAe,aAAa,EAAEX,YAAY,CAACY,SAFd;EAGdC,aAAa,EAAEb,YAAY,CAACc,KAHd;EAIdC,UAAU,EAAEf,YAAY,CAACgB,MAJX;;EAKd;EACAC,cAAc,GAAG;IACb,MAAMC,IAAI,GAAG,IAAIlB,YAAY,CAACmB,QAAjB,CAA0B,EAA1B,CAAb;IACAD,IAAI,CAAC,QAAD,CAAJ,GAAiBpB,QAAQ,CAACsB,IAAT,CAAcC,aAAd,CAA4BC,SAA7C;IACA,OAAOJ,IAAP;EACH,CAVa;;EAWdK,sBAAsB,GAAG;IACrB,OAAO,IAAIvB,YAAY,CAACmB,QAAjB,CAA0B,EAA1B,CAAP;EACH,CAba;;EAcdK,aAAa,CAACC,OAAD,EAAUC,YAAV,EAAwBC,KAAxB,EAA+B;IACxC,MAAMC,OAAO,GAAGpC,MAAM,CAACqC,MAAP,CAAc,IAAd,CAAhB;IACA,MAAMC,gBAAgB,GAAGtC,MAAM,CAACqC,MAAP,CAAc,IAAd,CAAzB;IACA,MAAME,aAAa,GAAGvC,MAAM,CAACqC,MAAP,CAAc,IAAd,CAAtB;;IACA,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;MACnC,MAAME,QAAQ,GAAGP,KAAK,CAACK,CAAD,CAAL,CAASzB,IAA1B;MACAqB,OAAO,CAACM,QAAD,CAAP,GAAoBP,KAAK,CAACK,CAAD,CAAL,CAASrC,KAA7B;MACAmC,gBAAgB,CAACI,QAAD,CAAhB,GAA6BP,KAAK,CAACK,CAAD,CAAL,CAASG,SAAtC;MACAJ,aAAa,CAACG,QAAD,CAAb,GAA0BP,KAAK,CAACK,CAAD,CAAL,CAASI,MAAnC;IACH;;IACD,MAAMlB,IAAI,GAAG,IAAIlB,YAAY,CAACqC,OAAjB,CAAyBZ,OAAzB,EAAkCG,OAAlC,EAA2C,EAA3C,CAAb;IACAV,IAAI,CAACiB,SAAL,GAAiBT,YAAjB;IACAR,IAAI,CAAC,oBAAD,CAAJ,GAA6BY,gBAA7B;IACAZ,IAAI,CAAC,iBAAD,CAAJ,GAA0Ba,aAA1B;IACA,OAAOb,IAAP;EACH,CA7Ba;;EA8BdoB,iBAAiB,CAACC,IAAD,EAAO;IACpB,OAAO,IAAIvC,YAAY,CAACwC,OAAjB,CAAyBD,IAAzB,CAAP;EACH,CAhCa;;EAiCd;EACAE,WAAW,CAACC,UAAD,EAAaC,OAAb,EAAsB;IAC7B,MAAMC,IAAI,GAAGF,UAAU,CAACG,QAAX,CAAoBH,UAAU,CAACG,QAAX,CAAoBZ,MAApB,GAA6B,CAAjD,CAAb;;IACA,IAAIW,IAAJ,EAAU;MACNA,IAAI,CAACE,IAAL,GAAYH,OAAZ;MACAA,OAAO,CAACC,IAAR,GAAeA,IAAf;IACH;;IACDF,UAAU,CAACG,QAAX,CAAoBE,IAApB,CAAyBJ,OAAzB;IACAA,OAAO,CAACK,MAAR,GAAiBN,UAAjB;EACH,CA1Ca;;EA2CdO,YAAY,CAACP,UAAD,EAAaC,OAAb,EAAsBO,aAAtB,EAAqC;IAC7C,MAAMC,YAAY,GAAGT,UAAU,CAACG,QAAX,CAAoBO,OAApB,CAA4BF,aAA5B,CAArB;IACA,MAAM;MAAEN;IAAF,IAAWM,aAAjB;;IACA,IAAIN,IAAJ,EAAU;MACNA,IAAI,CAACE,IAAL,GAAYH,OAAZ;MACAA,OAAO,CAACC,IAAR,GAAeA,IAAf;IACH;;IACDM,aAAa,CAACN,IAAd,GAAqBD,OAArB;IACAA,OAAO,CAACG,IAAR,GAAeI,aAAf;IACAR,UAAU,CAACG,QAAX,CAAoBQ,MAApB,CAA2BF,YAA3B,EAAyC,CAAzC,EAA4CR,OAA5C;IACAA,OAAO,CAACK,MAAR,GAAiBN,UAAjB;EACH,CAtDa;;EAuDdY,kBAAkB,CAACC,eAAD,EAAkBC,cAAlB,EAAkC;IAChD9D,OAAO,CAACE,OAAR,CAAgB6C,WAAhB,CAA4Bc,eAA5B,EAA6CC,cAA7C;EACH,CAzDa;;EA0DdC,kBAAkB,CAACF,eAAD,EAAkB;IAChC,OAAOA,eAAe,CAACV,QAAhB,CAAyB,CAAzB,CAAP;EACH,CA5Da;;EA6Dda,eAAe,CAACC,QAAD,EAAWpD,IAAX,EAAiBC,QAAjB,EAA2BC,QAA3B,EAAqC;IAChD,MAAM8B,IAAI,GAAG1C,uBAAuB,CAACU,IAAD,EAAOC,QAAP,EAAiBC,QAAjB,CAApC;IACA,IAAImD,WAAW,GAAGD,QAAQ,CAACd,QAAT,CAAkBgB,IAAlB,CAAwB3C,IAAD,IAAU,CAAC,GAAGlB,YAAY,CAAC8D,WAAjB,EAA8B5C,IAA9B,KAAuCA,IAAI,CAACX,IAAL,KAAc,UAAtF,CAAlB;;IACA,IAAIqD,WAAJ,EAAiB;MACbA,WAAW,CAACrB,IAAZ,GAAmBA,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmCA,IAAnC,GAA0C,IAA7D;IACH,CAFD,MAGK;MACDqB,WAAW,GAAG,IAAI5D,YAAY,CAAC+D,qBAAjB,CAAuC,UAAvC,EAAmDxB,IAAnD,CAAd;MACA7C,OAAO,CAACE,OAAR,CAAgB6C,WAAhB,CAA4BkB,QAA5B,EAAsCC,WAAtC;IACH;;IACDA,WAAW,CAAC,QAAD,CAAX,GAAwBrD,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmCA,IAAnC,GAA0CyD,SAAlE;IACAJ,WAAW,CAAC,YAAD,CAAX,GAA4BpD,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2CA,QAA3C,GAAsDwD,SAAlF;IACAJ,WAAW,CAAC,YAAD,CAAX,GAA4BnD,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2CA,QAA3C,GAAsDuD,SAAlF;EACH,CA1Ea;;EA2EdC,eAAe,CAACN,QAAD,EAAWO,IAAX,EAAiB;IAC5BP,QAAQ,CAAC,QAAD,CAAR,GAAqBO,IAArB;EACH,CA7Ea;;EA8EdC,eAAe,CAACR,QAAD,EAAW;IACtB,OAAOA,QAAQ,CAAC,QAAD,CAAf;EACH,CAhFa;;EAiFdS,UAAU,CAAClD,IAAD,EAAO;IACb,IAAIA,IAAI,CAAC8B,MAAT,EAAiB;MACb,MAAMqB,GAAG,GAAGnD,IAAI,CAAC8B,MAAL,CAAYH,QAAZ,CAAqBO,OAArB,CAA6BlC,IAA7B,CAAZ;MACA,MAAM;QAAE0B,IAAF;QAAQE;MAAR,IAAiB5B,IAAvB;MACAA,IAAI,CAAC0B,IAAL,GAAY,IAAZ;MACA1B,IAAI,CAAC4B,IAAL,GAAY,IAAZ;;MACA,IAAIF,IAAJ,EAAU;QACNA,IAAI,CAACE,IAAL,GAAYA,IAAZ;MACH;;MACD,IAAIA,IAAJ,EAAU;QACNA,IAAI,CAACF,IAAL,GAAYA,IAAZ;MACH;;MACD1B,IAAI,CAAC8B,MAAL,CAAYH,QAAZ,CAAqBQ,MAArB,CAA4BgB,GAA5B,EAAiC,CAAjC;MACAnD,IAAI,CAAC8B,MAAL,GAAc,IAAd;IACH;EACJ,CAhGa;;EAiGdsB,UAAU,CAAC5B,UAAD,EAAa6B,IAAb,EAAmB;IACzB,MAAMC,SAAS,GAAG9B,UAAU,CAACG,QAAX,CAAoBH,UAAU,CAACG,QAAX,CAAoBZ,MAApB,GAA6B,CAAjD,CAAlB;;IACA,IAAIuC,SAAS,IAAI,CAAC,GAAGxE,YAAY,CAACgB,MAAjB,EAAyBwD,SAAzB,CAAjB,EAAsD;MAClDA,SAAS,CAACjC,IAAV,IAAkBgC,IAAlB;IACH,CAFD,MAGK;MACD7E,OAAO,CAACE,OAAR,CAAgB6C,WAAhB,CAA4BC,UAA5B,EAAwCzC,cAAc,CAACsE,IAAD,CAAtD;IACH;EACJ,CAzGa;;EA0GdE,gBAAgB,CAAC/B,UAAD,EAAa6B,IAAb,EAAmBrB,aAAnB,EAAkC;IAC9C,MAAMwB,QAAQ,GAAGhC,UAAU,CAACG,QAAX,CAAoBH,UAAU,CAACG,QAAX,CAAoBO,OAApB,CAA4BF,aAA5B,IAA6C,CAAjE,CAAjB;;IACA,IAAIwB,QAAQ,IAAI,CAAC,GAAG1E,YAAY,CAACgB,MAAjB,EAAyB0D,QAAzB,CAAhB,EAAoD;MAChDA,QAAQ,CAACnC,IAAT,IAAiBgC,IAAjB;IACH,CAFD,MAGK;MACD7E,OAAO,CAACE,OAAR,CAAgBqD,YAAhB,CAA6BP,UAA7B,EAAyCzC,cAAc,CAACsE,IAAD,CAAvD,EAA+DrB,aAA/D;IACH;EACJ,CAlHa;;EAmHdyB,eAAe,CAACC,SAAD,EAAYjD,KAAZ,EAAmB;IAC9B,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;MACnC,MAAME,QAAQ,GAAGP,KAAK,CAACK,CAAD,CAAL,CAASzB,IAA1B;;MACA,IAAI,OAAOqE,SAAS,CAAChD,OAAV,CAAkBM,QAAlB,CAAP,KAAuC,WAA3C,EAAwD;QACpD0C,SAAS,CAAChD,OAAV,CAAkBM,QAAlB,IAA8BP,KAAK,CAACK,CAAD,CAAL,CAASrC,KAAvC;QACAiF,SAAS,CAAC,oBAAD,CAAT,CAAgC1C,QAAhC,IAA4CP,KAAK,CAACK,CAAD,CAAL,CAASG,SAArD;QACAyC,SAAS,CAAC,iBAAD,CAAT,CAA6B1C,QAA7B,IAAyCP,KAAK,CAACK,CAAD,CAAL,CAASI,MAAlD;MACH;IACJ;EACJ,CA5Ha;;EA6Hd;EACAyC,aAAa,CAAC3D,IAAD,EAAO;IAChB,OAAOA,IAAI,CAAC2B,QAAL,CAAc,CAAd,CAAP;EACH,CAhIa;;EAiIdiC,aAAa,CAAC5D,IAAD,EAAO;IAChB,OAAOA,IAAI,CAAC2B,QAAZ;EACH,CAnIa;;EAoIdkC,aAAa,CAAC7D,IAAD,EAAO;IAChB,OAAOA,IAAI,CAAC8B,MAAZ;EACH,CAtIa;;EAuIdgC,WAAW,CAACC,OAAD,EAAU;IACjB,OAAOA,OAAO,CAACC,UAAf;EACH,CAzIa;;EA0Id;EACAC,UAAU,CAACF,OAAD,EAAU;IAChB,OAAOA,OAAO,CAAC1E,IAAf;EACH,CA7Ia;;EA8Id6E,eAAe,CAACH,OAAD,EAAU;IACrB,OAAOA,OAAO,CAAC9C,SAAf;EACH,CAhJa;;EAiJdkD,kBAAkB,CAACC,QAAD,EAAW;IACzB,OAAOA,QAAQ,CAAC/C,IAAhB;EACH,CAnJa;;EAoJdgD,qBAAqB,CAACC,WAAD,EAAc;IAC/B,OAAOA,WAAW,CAACjD,IAAnB;EACH,CAtJa;;EAuJdkD,uBAAuB,CAAC7B,WAAD,EAAc;IACjC,IAAI8B,EAAJ;;IACA,OAAO,CAACA,EAAE,GAAG9B,WAAW,CAAC,QAAD,CAAjB,MAAiC,IAAjC,IAAyC8B,EAAE,KAAK,KAAK,CAArD,GAAyDA,EAAzD,GAA8D,EAArE;EACH,CA1Ja;;EA2JdC,2BAA2B,CAAC/B,WAAD,EAAc;IACrC,IAAI8B,EAAJ;;IACA,OAAO,CAACA,EAAE,GAAG9B,WAAW,CAAC,YAAD,CAAjB,MAAqC,IAArC,IAA6C8B,EAAE,KAAK,KAAK,CAAzD,GAA6DA,EAA7D,GAAkE,EAAzE;EACH,CA9Ja;;EA+JdE,2BAA2B,CAAChC,WAAD,EAAc;IACrC,IAAI8B,EAAJ;;IACA,OAAO,CAACA,EAAE,GAAG9B,WAAW,CAAC,YAAD,CAAjB,MAAqC,IAArC,IAA6C8B,EAAE,KAAK,KAAK,CAAzD,GAA6DA,EAA7D,GAAkE,EAAzE;EACH,CAlKa;;EAmKd;EACAG,kBAAkB,CAAC3E,IAAD,EAAO;IACrB,OAAO,CAAC,GAAGlB,YAAY,CAAC8D,WAAjB,EAA8B5C,IAA9B,KAAuCA,IAAI,CAACX,IAAL,KAAc,UAA5D;EACH,CAtKa;;EAuKd;EACAuF,yBAAyB,CAAC5E,IAAD,EAAO6E,QAAP,EAAiB;IACtC,IAAIA,QAAJ,EAAc;MACV7E,IAAI,CAAC8E,UAAL,GAAkBD,QAAQ,CAACE,WAA3B;MACA/E,IAAI,CAACgF,QAAL,GAAgBH,QAAQ,CAACI,SAAzB;IACH;;IACDjF,IAAI,CAACkF,kBAAL,GAA0BL,QAA1B;EACH,CA9Ka;;EA+KdM,yBAAyB,CAACnF,IAAD,EAAO;IAC5B,OAAOA,IAAI,CAACkF,kBAAZ;EACH,CAjLa;;EAkLdE,4BAA4B,CAACpF,IAAD,EAAOqF,WAAP,EAAoB;IAC5C,IAAIA,WAAW,CAACJ,SAAZ,IAAyB,IAA7B,EACIjF,IAAI,CAACgF,QAAL,GAAgBK,WAAW,CAACJ,SAA5B;IACJjF,IAAI,CAACkF,kBAAL,GAA0B5G,MAAM,CAACgH,MAAP,CAAchH,MAAM,CAACgH,MAAP,CAAc,EAAd,EAAkBtF,IAAI,CAACkF,kBAAvB,CAAd,EAA0DG,WAA1D,CAA1B;EACH;;AAtLa,CAAlB"},"metadata":{},"sourceType":"script"}
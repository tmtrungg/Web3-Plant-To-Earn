{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.array = void 0;\n\nconst ArrayArbitrary_1 = require(\"./_internals/ArrayArbitrary\");\n\nconst MaxLengthFromMinLength_1 = require(\"./_internals/helpers/MaxLengthFromMinLength\");\n\nfunction array(arb) {\n  let constraints = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const size = constraints.size;\n  const minLength = constraints.minLength || 0;\n  const maxLengthOrUnset = constraints.maxLength;\n  const depthIdentifier = constraints.depthIdentifier;\n  const maxLength = maxLengthOrUnset !== undefined ? maxLengthOrUnset : MaxLengthFromMinLength_1.MaxLengthUpperBound;\n  const specifiedMaxLength = maxLengthOrUnset !== undefined;\n  const maxGeneratedLength = (0, MaxLengthFromMinLength_1.maxGeneratedLengthFromSizeForArbitrary)(size, minLength, maxLength, specifiedMaxLength);\n  const customSlices = constraints.experimentalCustomSlices || [];\n  return new ArrayArbitrary_1.ArrayArbitrary(arb, minLength, maxGeneratedLength, maxLength, depthIdentifier, undefined, customSlices);\n}\n\nexports.array = array;","map":{"version":3,"names":["Object","defineProperty","exports","value","array","ArrayArbitrary_1","require","MaxLengthFromMinLength_1","arb","constraints","size","minLength","maxLengthOrUnset","maxLength","depthIdentifier","undefined","MaxLengthUpperBound","specifiedMaxLength","maxGeneratedLength","maxGeneratedLengthFromSizeForArbitrary","customSlices","experimentalCustomSlices","ArrayArbitrary"],"sources":["/Users/tranminhtrung/Desktop/learn_web3/gamble/node_modules/fast-check/lib/arbitrary/array.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.array = void 0;\nconst ArrayArbitrary_1 = require(\"./_internals/ArrayArbitrary\");\nconst MaxLengthFromMinLength_1 = require(\"./_internals/helpers/MaxLengthFromMinLength\");\nfunction array(arb, constraints = {}) {\n    const size = constraints.size;\n    const minLength = constraints.minLength || 0;\n    const maxLengthOrUnset = constraints.maxLength;\n    const depthIdentifier = constraints.depthIdentifier;\n    const maxLength = maxLengthOrUnset !== undefined ? maxLengthOrUnset : MaxLengthFromMinLength_1.MaxLengthUpperBound;\n    const specifiedMaxLength = maxLengthOrUnset !== undefined;\n    const maxGeneratedLength = (0, MaxLengthFromMinLength_1.maxGeneratedLengthFromSizeForArbitrary)(size, minLength, maxLength, specifiedMaxLength);\n    const customSlices = constraints.experimentalCustomSlices || [];\n    return new ArrayArbitrary_1.ArrayArbitrary(arb, minLength, maxGeneratedLength, maxLength, depthIdentifier, undefined, customSlices);\n}\nexports.array = array;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,KAAR,GAAgB,KAAK,CAArB;;AACA,MAAMC,gBAAgB,GAAGC,OAAO,CAAC,6BAAD,CAAhC;;AACA,MAAMC,wBAAwB,GAAGD,OAAO,CAAC,6CAAD,CAAxC;;AACA,SAASF,KAAT,CAAeI,GAAf,EAAsC;EAAA,IAAlBC,WAAkB,uEAAJ,EAAI;EAClC,MAAMC,IAAI,GAAGD,WAAW,CAACC,IAAzB;EACA,MAAMC,SAAS,GAAGF,WAAW,CAACE,SAAZ,IAAyB,CAA3C;EACA,MAAMC,gBAAgB,GAAGH,WAAW,CAACI,SAArC;EACA,MAAMC,eAAe,GAAGL,WAAW,CAACK,eAApC;EACA,MAAMD,SAAS,GAAGD,gBAAgB,KAAKG,SAArB,GAAiCH,gBAAjC,GAAoDL,wBAAwB,CAACS,mBAA/F;EACA,MAAMC,kBAAkB,GAAGL,gBAAgB,KAAKG,SAAhD;EACA,MAAMG,kBAAkB,GAAG,CAAC,GAAGX,wBAAwB,CAACY,sCAA7B,EAAqET,IAArE,EAA2EC,SAA3E,EAAsFE,SAAtF,EAAiGI,kBAAjG,CAA3B;EACA,MAAMG,YAAY,GAAGX,WAAW,CAACY,wBAAZ,IAAwC,EAA7D;EACA,OAAO,IAAIhB,gBAAgB,CAACiB,cAArB,CAAoCd,GAApC,EAAyCG,SAAzC,EAAoDO,kBAApD,EAAwEL,SAAxE,EAAmFC,eAAnF,EAAoGC,SAApG,EAA+GK,YAA/G,CAAP;AACH;;AACDlB,OAAO,CAACE,KAAR,GAAgBA,KAAhB"},"metadata":{},"sourceType":"script"}
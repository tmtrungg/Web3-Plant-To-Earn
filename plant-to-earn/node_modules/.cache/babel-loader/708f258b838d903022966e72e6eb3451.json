{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveSize = exports.depthBiasFromSizeForArbitrary = exports.maxGeneratedLengthFromSizeForArbitrary = exports.relativeSizeToSize = exports.maxLengthFromMinLength = exports.DefaultSize = exports.MaxLengthUpperBound = void 0;\n\nconst GlobalParameters_1 = require(\"../../../check/runner/configuration/GlobalParameters\");\n\nexports.MaxLengthUpperBound = 0x7fffffff;\nconst orderedSize = ['xsmall', 'small', 'medium', 'large', 'xlarge'];\nconst orderedRelativeSize = ['-4', '-3', '-2', '-1', '=', '+1', '+2', '+3', '+4'];\nexports.DefaultSize = 'small';\n\nfunction maxLengthFromMinLength(minLength, size) {\n  switch (size) {\n    case 'xsmall':\n      return Math.floor(1.1 * minLength) + 1;\n\n    case 'small':\n      return 2 * minLength + 10;\n\n    case 'medium':\n      return 11 * minLength + 100;\n\n    case 'large':\n      return 101 * minLength + 1000;\n\n    case 'xlarge':\n      return 1001 * minLength + 10000;\n\n    default:\n      throw new Error(`Unable to compute lengths based on received size: ${size}`);\n  }\n}\n\nexports.maxLengthFromMinLength = maxLengthFromMinLength;\n\nfunction relativeSizeToSize(size, defaultSize) {\n  const sizeInRelative = orderedRelativeSize.indexOf(size);\n\n  if (sizeInRelative === -1) {\n    return size;\n  }\n\n  const defaultSizeInSize = orderedSize.indexOf(defaultSize);\n\n  if (defaultSizeInSize === -1) {\n    throw new Error(`Unable to offset size based on the unknown defaulted one: ${defaultSize}`);\n  }\n\n  const resultingSizeInSize = defaultSizeInSize + sizeInRelative - 4;\n  return resultingSizeInSize < 0 ? orderedSize[0] : resultingSizeInSize >= orderedSize.length ? orderedSize[orderedSize.length - 1] : orderedSize[resultingSizeInSize];\n}\n\nexports.relativeSizeToSize = relativeSizeToSize;\n\nfunction maxGeneratedLengthFromSizeForArbitrary(size, minLength, maxLength, specifiedMaxLength) {\n  const {\n    baseSize: defaultSize = exports.DefaultSize,\n    defaultSizeToMaxWhenMaxSpecified\n  } = (0, GlobalParameters_1.readConfigureGlobal)() || {};\n  const definedSize = size !== undefined ? size : specifiedMaxLength && defaultSizeToMaxWhenMaxSpecified ? 'max' : defaultSize;\n\n  if (definedSize === 'max') {\n    return maxLength;\n  }\n\n  const finalSize = relativeSizeToSize(definedSize, defaultSize);\n  return Math.min(maxLengthFromMinLength(minLength, finalSize), maxLength);\n}\n\nexports.maxGeneratedLengthFromSizeForArbitrary = maxGeneratedLengthFromSizeForArbitrary;\n\nfunction depthBiasFromSizeForArbitrary(depthSizeOrSize, specifiedMaxDepth) {\n  if (typeof depthSizeOrSize === 'number') {\n    return 1 / depthSizeOrSize;\n  }\n\n  const {\n    baseSize: defaultSize = exports.DefaultSize,\n    defaultSizeToMaxWhenMaxSpecified\n  } = (0, GlobalParameters_1.readConfigureGlobal)() || {};\n  const definedSize = depthSizeOrSize !== undefined ? depthSizeOrSize : specifiedMaxDepth && defaultSizeToMaxWhenMaxSpecified ? 'max' : defaultSize;\n\n  if (definedSize === 'max') {\n    return 0;\n  }\n\n  const finalSize = relativeSizeToSize(definedSize, defaultSize);\n\n  switch (finalSize) {\n    case 'xsmall':\n      return 1;\n\n    case 'small':\n      return 0.5;\n\n    case 'medium':\n      return 0.25;\n\n    case 'large':\n      return 0.125;\n\n    case 'xlarge':\n      return 0.0625;\n  }\n}\n\nexports.depthBiasFromSizeForArbitrary = depthBiasFromSizeForArbitrary;\n\nfunction resolveSize(size) {\n  const {\n    baseSize: defaultSize = exports.DefaultSize\n  } = (0, GlobalParameters_1.readConfigureGlobal)() || {};\n\n  if (size === undefined) {\n    return defaultSize;\n  }\n\n  return relativeSizeToSize(size, defaultSize);\n}\n\nexports.resolveSize = resolveSize;","map":{"version":3,"names":["Object","defineProperty","exports","value","resolveSize","depthBiasFromSizeForArbitrary","maxGeneratedLengthFromSizeForArbitrary","relativeSizeToSize","maxLengthFromMinLength","DefaultSize","MaxLengthUpperBound","GlobalParameters_1","require","orderedSize","orderedRelativeSize","minLength","size","Math","floor","Error","defaultSize","sizeInRelative","indexOf","defaultSizeInSize","resultingSizeInSize","length","maxLength","specifiedMaxLength","baseSize","defaultSizeToMaxWhenMaxSpecified","readConfigureGlobal","definedSize","undefined","finalSize","min","depthSizeOrSize","specifiedMaxDepth"],"sources":["/Users/tranminhtrung/Desktop/learn_web3/gamble/node_modules/fast-check/lib/arbitrary/_internals/helpers/MaxLengthFromMinLength.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveSize = exports.depthBiasFromSizeForArbitrary = exports.maxGeneratedLengthFromSizeForArbitrary = exports.relativeSizeToSize = exports.maxLengthFromMinLength = exports.DefaultSize = exports.MaxLengthUpperBound = void 0;\nconst GlobalParameters_1 = require(\"../../../check/runner/configuration/GlobalParameters\");\nexports.MaxLengthUpperBound = 0x7fffffff;\nconst orderedSize = ['xsmall', 'small', 'medium', 'large', 'xlarge'];\nconst orderedRelativeSize = ['-4', '-3', '-2', '-1', '=', '+1', '+2', '+3', '+4'];\nexports.DefaultSize = 'small';\nfunction maxLengthFromMinLength(minLength, size) {\n    switch (size) {\n        case 'xsmall':\n            return Math.floor(1.1 * minLength) + 1;\n        case 'small':\n            return 2 * minLength + 10;\n        case 'medium':\n            return 11 * minLength + 100;\n        case 'large':\n            return 101 * minLength + 1000;\n        case 'xlarge':\n            return 1001 * minLength + 10000;\n        default:\n            throw new Error(`Unable to compute lengths based on received size: ${size}`);\n    }\n}\nexports.maxLengthFromMinLength = maxLengthFromMinLength;\nfunction relativeSizeToSize(size, defaultSize) {\n    const sizeInRelative = orderedRelativeSize.indexOf(size);\n    if (sizeInRelative === -1) {\n        return size;\n    }\n    const defaultSizeInSize = orderedSize.indexOf(defaultSize);\n    if (defaultSizeInSize === -1) {\n        throw new Error(`Unable to offset size based on the unknown defaulted one: ${defaultSize}`);\n    }\n    const resultingSizeInSize = defaultSizeInSize + sizeInRelative - 4;\n    return resultingSizeInSize < 0\n        ? orderedSize[0]\n        : resultingSizeInSize >= orderedSize.length\n            ? orderedSize[orderedSize.length - 1]\n            : orderedSize[resultingSizeInSize];\n}\nexports.relativeSizeToSize = relativeSizeToSize;\nfunction maxGeneratedLengthFromSizeForArbitrary(size, minLength, maxLength, specifiedMaxLength) {\n    const { baseSize: defaultSize = exports.DefaultSize, defaultSizeToMaxWhenMaxSpecified } = (0, GlobalParameters_1.readConfigureGlobal)() || {};\n    const definedSize = size !== undefined ? size : specifiedMaxLength && defaultSizeToMaxWhenMaxSpecified ? 'max' : defaultSize;\n    if (definedSize === 'max') {\n        return maxLength;\n    }\n    const finalSize = relativeSizeToSize(definedSize, defaultSize);\n    return Math.min(maxLengthFromMinLength(minLength, finalSize), maxLength);\n}\nexports.maxGeneratedLengthFromSizeForArbitrary = maxGeneratedLengthFromSizeForArbitrary;\nfunction depthBiasFromSizeForArbitrary(depthSizeOrSize, specifiedMaxDepth) {\n    if (typeof depthSizeOrSize === 'number') {\n        return 1 / depthSizeOrSize;\n    }\n    const { baseSize: defaultSize = exports.DefaultSize, defaultSizeToMaxWhenMaxSpecified } = (0, GlobalParameters_1.readConfigureGlobal)() || {};\n    const definedSize = depthSizeOrSize !== undefined\n        ? depthSizeOrSize\n        : specifiedMaxDepth && defaultSizeToMaxWhenMaxSpecified\n            ? 'max'\n            : defaultSize;\n    if (definedSize === 'max') {\n        return 0;\n    }\n    const finalSize = relativeSizeToSize(definedSize, defaultSize);\n    switch (finalSize) {\n        case 'xsmall':\n            return 1;\n        case 'small':\n            return 0.5;\n        case 'medium':\n            return 0.25;\n        case 'large':\n            return 0.125;\n        case 'xlarge':\n            return 0.0625;\n    }\n}\nexports.depthBiasFromSizeForArbitrary = depthBiasFromSizeForArbitrary;\nfunction resolveSize(size) {\n    const { baseSize: defaultSize = exports.DefaultSize } = (0, GlobalParameters_1.readConfigureGlobal)() || {};\n    if (size === undefined) {\n        return defaultSize;\n    }\n    return relativeSizeToSize(size, defaultSize);\n}\nexports.resolveSize = resolveSize;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IntegerArbitrary = void 0;\n\nconst Arbitrary_1 = require(\"../../check/arbitrary/definition/Arbitrary\");\n\nconst Value_1 = require(\"../../check/arbitrary/definition/Value\");\n\nconst Stream_1 = require(\"../../stream/Stream\");\n\nconst BiasNumericRange_1 = require(\"./helpers/BiasNumericRange\");\n\nconst ShrinkInteger_1 = require(\"./helpers/ShrinkInteger\");\n\nclass IntegerArbitrary extends Arbitrary_1.Arbitrary {\n  constructor(min, max) {\n    super();\n    this.min = min;\n    this.max = max;\n  }\n\n  generate(mrng, biasFactor) {\n    const range = this.computeGenerateRange(mrng, biasFactor);\n    return new Value_1.Value(mrng.nextInt(range.min, range.max), undefined);\n  }\n\n  canShrinkWithoutContext(value) {\n    return typeof value === 'number' && Number.isInteger(value) && !Object.is(value, -0) && this.min <= value && value <= this.max;\n  }\n\n  shrink(current, context) {\n    if (!IntegerArbitrary.isValidContext(current, context)) {\n      const target = this.defaultTarget();\n      return (0, ShrinkInteger_1.shrinkInteger)(current, target, true);\n    }\n\n    if (this.isLastChanceTry(current, context)) {\n      return Stream_1.Stream.of(new Value_1.Value(context, undefined));\n    }\n\n    return (0, ShrinkInteger_1.shrinkInteger)(current, context, false);\n  }\n\n  defaultTarget() {\n    if (this.min <= 0 && this.max >= 0) {\n      return 0;\n    }\n\n    return this.min < 0 ? this.max : this.min;\n  }\n\n  computeGenerateRange(mrng, biasFactor) {\n    if (biasFactor === undefined || mrng.nextInt(1, biasFactor) !== 1) {\n      return {\n        min: this.min,\n        max: this.max\n      };\n    }\n\n    const ranges = (0, BiasNumericRange_1.biasNumericRange)(this.min, this.max, BiasNumericRange_1.integerLogLike);\n\n    if (ranges.length === 1) {\n      return ranges[0];\n    }\n\n    const id = mrng.nextInt(-2 * (ranges.length - 1), ranges.length - 2);\n    return id < 0 ? ranges[0] : ranges[id + 1];\n  }\n\n  isLastChanceTry(current, context) {\n    if (current > 0) return current === context + 1 && current > this.min;\n    if (current < 0) return current === context - 1 && current < this.max;\n    return false;\n  }\n\n  static isValidContext(current, context) {\n    if (context === undefined) {\n      return false;\n    }\n\n    if (typeof context !== 'number') {\n      throw new Error(`Invalid context type passed to IntegerArbitrary (#1)`);\n    }\n\n    if (context !== 0 && Math.sign(current) !== Math.sign(context)) {\n      throw new Error(`Invalid context value passed to IntegerArbitrary (#2)`);\n    }\n\n    return true;\n  }\n\n}\n\nexports.IntegerArbitrary = IntegerArbitrary;","map":{"version":3,"names":["Object","defineProperty","exports","value","IntegerArbitrary","Arbitrary_1","require","Value_1","Stream_1","BiasNumericRange_1","ShrinkInteger_1","Arbitrary","constructor","min","max","generate","mrng","biasFactor","range","computeGenerateRange","Value","nextInt","undefined","canShrinkWithoutContext","Number","isInteger","is","shrink","current","context","isValidContext","target","defaultTarget","shrinkInteger","isLastChanceTry","Stream","of","ranges","biasNumericRange","integerLogLike","length","id","Error","Math","sign"],"sources":["/Users/tranminhtrung/Desktop/learn_web3/gamble/node_modules/fast-check/lib/arbitrary/_internals/IntegerArbitrary.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IntegerArbitrary = void 0;\nconst Arbitrary_1 = require(\"../../check/arbitrary/definition/Arbitrary\");\nconst Value_1 = require(\"../../check/arbitrary/definition/Value\");\nconst Stream_1 = require(\"../../stream/Stream\");\nconst BiasNumericRange_1 = require(\"./helpers/BiasNumericRange\");\nconst ShrinkInteger_1 = require(\"./helpers/ShrinkInteger\");\nclass IntegerArbitrary extends Arbitrary_1.Arbitrary {\n    constructor(min, max) {\n        super();\n        this.min = min;\n        this.max = max;\n    }\n    generate(mrng, biasFactor) {\n        const range = this.computeGenerateRange(mrng, biasFactor);\n        return new Value_1.Value(mrng.nextInt(range.min, range.max), undefined);\n    }\n    canShrinkWithoutContext(value) {\n        return (typeof value === 'number' &&\n            Number.isInteger(value) &&\n            !Object.is(value, -0) &&\n            this.min <= value &&\n            value <= this.max);\n    }\n    shrink(current, context) {\n        if (!IntegerArbitrary.isValidContext(current, context)) {\n            const target = this.defaultTarget();\n            return (0, ShrinkInteger_1.shrinkInteger)(current, target, true);\n        }\n        if (this.isLastChanceTry(current, context)) {\n            return Stream_1.Stream.of(new Value_1.Value(context, undefined));\n        }\n        return (0, ShrinkInteger_1.shrinkInteger)(current, context, false);\n    }\n    defaultTarget() {\n        if (this.min <= 0 && this.max >= 0) {\n            return 0;\n        }\n        return this.min < 0 ? this.max : this.min;\n    }\n    computeGenerateRange(mrng, biasFactor) {\n        if (biasFactor === undefined || mrng.nextInt(1, biasFactor) !== 1) {\n            return { min: this.min, max: this.max };\n        }\n        const ranges = (0, BiasNumericRange_1.biasNumericRange)(this.min, this.max, BiasNumericRange_1.integerLogLike);\n        if (ranges.length === 1) {\n            return ranges[0];\n        }\n        const id = mrng.nextInt(-2 * (ranges.length - 1), ranges.length - 2);\n        return id < 0 ? ranges[0] : ranges[id + 1];\n    }\n    isLastChanceTry(current, context) {\n        if (current > 0)\n            return current === context + 1 && current > this.min;\n        if (current < 0)\n            return current === context - 1 && current < this.max;\n        return false;\n    }\n    static isValidContext(current, context) {\n        if (context === undefined) {\n            return false;\n        }\n        if (typeof context !== 'number') {\n            throw new Error(`Invalid context type passed to IntegerArbitrary (#1)`);\n        }\n        if (context !== 0 && Math.sign(current) !== Math.sign(context)) {\n            throw new Error(`Invalid context value passed to IntegerArbitrary (#2)`);\n        }\n        return true;\n    }\n}\nexports.IntegerArbitrary = IntegerArbitrary;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
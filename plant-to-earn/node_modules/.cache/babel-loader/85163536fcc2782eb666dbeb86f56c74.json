{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bigUintN = void 0;\n\nconst BigIntArbitrary_1 = require(\"./_internals/BigIntArbitrary\");\n\nfunction bigUintN(n) {\n  if (n < 0) {\n    throw new Error('fc.bigUintN expects requested number of bits to be superior or equal to 0');\n  }\n\n  const min = BigInt(0);\n  const max = (BigInt(1) << BigInt(n)) - BigInt(1);\n  return new BigIntArbitrary_1.BigIntArbitrary(min, max);\n}\n\nexports.bigUintN = bigUintN;","map":{"version":3,"names":["Object","defineProperty","exports","value","bigUintN","BigIntArbitrary_1","require","n","Error","min","BigInt","max","BigIntArbitrary"],"sources":["/Users/tranminhtrung/Desktop/learn_web3/gamble/node_modules/fast-check/lib/arbitrary/bigUintN.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bigUintN = void 0;\nconst BigIntArbitrary_1 = require(\"./_internals/BigIntArbitrary\");\nfunction bigUintN(n) {\n    if (n < 0) {\n        throw new Error('fc.bigUintN expects requested number of bits to be superior or equal to 0');\n    }\n    const min = BigInt(0);\n    const max = (BigInt(1) << BigInt(n)) - BigInt(1);\n    return new BigIntArbitrary_1.BigIntArbitrary(min, max);\n}\nexports.bigUintN = bigUintN;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,QAAR,GAAmB,KAAK,CAAxB;;AACA,MAAMC,iBAAiB,GAAGC,OAAO,CAAC,8BAAD,CAAjC;;AACA,SAASF,QAAT,CAAkBG,CAAlB,EAAqB;EACjB,IAAIA,CAAC,GAAG,CAAR,EAAW;IACP,MAAM,IAAIC,KAAJ,CAAU,2EAAV,CAAN;EACH;;EACD,MAAMC,GAAG,GAAGC,MAAM,CAAC,CAAD,CAAlB;EACA,MAAMC,GAAG,GAAG,CAACD,MAAM,CAAC,CAAD,CAAN,IAAaA,MAAM,CAACH,CAAD,CAApB,IAA2BG,MAAM,CAAC,CAAD,CAA7C;EACA,OAAO,IAAIL,iBAAiB,CAACO,eAAtB,CAAsCH,GAAtC,EAA2CE,GAA3C,CAAP;AACH;;AACDT,OAAO,CAACE,QAAR,GAAmBA,QAAnB"},"metadata":{},"sourceType":"script"}
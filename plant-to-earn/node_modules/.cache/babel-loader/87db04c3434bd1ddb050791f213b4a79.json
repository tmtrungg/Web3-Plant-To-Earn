{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.update = exports.getParse = void 0;\n\nvar domutils_1 = require(\"domutils\");\n\nvar domhandler_1 = require(\"domhandler\");\n/**\n * Get the parse function with options.\n *\n * @param parser - The parser function.\n * @returns The parse function with options.\n */\n\n\nfunction getParse(parser) {\n  /**\n   * Parse a HTML string or a node.\n   *\n   * @param content - The HTML string or node.\n   * @param options - The parser options.\n   * @param isDocument - If `content` is a document.\n   * @param context - The context node in the DOM tree.\n   * @returns The parsed document node.\n   */\n  return function parse(content, options, isDocument, context) {\n    if (typeof Buffer !== 'undefined' && Buffer.isBuffer(content)) {\n      content = content.toString();\n    }\n\n    if (typeof content === 'string') {\n      return parser(content, options, isDocument, context);\n    }\n\n    var doc = content;\n\n    if (!Array.isArray(doc) && (0, domhandler_1.isDocument)(doc)) {\n      // If `doc` is already a root, just return it\n      return doc;\n    } // Add conent to new root element\n\n\n    var root = new domhandler_1.Document([]); // Update the DOM using the root\n\n    update(doc, root);\n    return root;\n  };\n}\n\nexports.getParse = getParse;\n/**\n * Update the dom structure, for one changed layer.\n *\n * @param newChilds - The new children.\n * @param parent - The new parent.\n * @returns The parent node.\n */\n\nfunction update(newChilds, parent) {\n  // Normalize\n  var arr = Array.isArray(newChilds) ? newChilds : [newChilds]; // Update parent\n\n  if (parent) {\n    parent.children = arr;\n  } else {\n    parent = null;\n  } // Update neighbors\n\n\n  for (var i = 0; i < arr.length; i++) {\n    var node = arr[i]; // Cleanly remove existing nodes from their previous structures.\n\n    if (node.parent && node.parent.children !== arr) {\n      (0, domutils_1.removeElement)(node);\n    }\n\n    if (parent) {\n      node.prev = arr[i - 1] || null;\n      node.next = arr[i + 1] || null;\n    } else {\n      node.prev = node.next = null;\n    }\n\n    node.parent = parent;\n  }\n\n  return parent;\n}\n\nexports.update = update;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;AAQA;;;;;;;;AAMA,SAAgBA,QAAhB,CACEC,MADF,EAMe;EAEb;;;;;;;;;EASA,OAAO,SAASC,KAAT,CACLC,OADK,EAELC,OAFK,EAGLC,UAHK,EAILC,OAJK,EAIqB;IAE1B,IAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,QAAP,CAAgBL,OAAhB,CAArC,EAA+D;MAC7DA,OAAO,GAAGA,OAAO,CAACM,QAAR,EAAV;IACD;;IAED,IAAI,OAAON,OAAP,KAAmB,QAAvB,EAAiC;MAC/B,OAAOF,MAAM,CAACE,OAAD,EAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,OAA/B,CAAb;IACD;;IAED,IAAMI,GAAG,GAAGP,OAAZ;;IAEA,IAAI,CAACQ,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAD,IAAuB,6BAAgBA,GAAhB,CAA3B,EAAiD;MAC/C;MACA,OAAOA,GAAP;IACD,CAfyB,CAiB1B;;;IACA,IAAMG,IAAI,GAAG,IAAIC,qBAAJ,CAAa,EAAb,CAAb,CAlB0B,CAoB1B;;IACAC,MAAM,CAACL,GAAD,EAAMG,IAAN,CAAN;IAEA,OAAOA,IAAP;EACD,CA5BD;AA6BD;;AA9CDG;AAgDA;;;;;;;;AAOA,SAAgBD,MAAhB,CACEE,SADF,EAEEC,MAFF,EAE2B;EAEzB;EACA,IAAMC,GAAG,GAAGR,KAAK,CAACC,OAAN,CAAcK,SAAd,IAA2BA,SAA3B,GAAuC,CAACA,SAAD,CAAnD,CAHyB,CAKzB;;EACA,IAAIC,MAAJ,EAAY;IACVA,MAAM,CAACE,QAAP,GAAkBD,GAAlB;EACD,CAFD,MAEO;IACLD,MAAM,GAAG,IAAT;EACD,CAVwB,CAYzB;;;EACA,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACG,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;IACnC,IAAME,IAAI,GAAGJ,GAAG,CAACE,CAAD,CAAhB,CADmC,CAGnC;;IACA,IAAIE,IAAI,CAACL,MAAL,IAAeK,IAAI,CAACL,MAAL,CAAYE,QAAZ,KAAyBD,GAA5C,EAAiD;MAC/C,8BAAcI,IAAd;IACD;;IAED,IAAIL,MAAJ,EAAY;MACVK,IAAI,CAACC,IAAL,GAAYL,GAAG,CAACE,CAAC,GAAG,CAAL,CAAH,IAAc,IAA1B;MACAE,IAAI,CAACE,IAAL,GAAYN,GAAG,CAACE,CAAC,GAAG,CAAL,CAAH,IAAc,IAA1B;IACD,CAHD,MAGO;MACLE,IAAI,CAACC,IAAL,GAAYD,IAAI,CAACE,IAAL,GAAY,IAAxB;IACD;;IAEDF,IAAI,CAACL,MAAL,GAAcA,MAAd;EACD;;EAED,OAAOA,MAAP;AACD;;AAlCDF","names":["getParse","parser","parse","content","options","isDocument","context","Buffer","isBuffer","toString","doc","Array","isArray","root","domhandler_1","update","exports","newChilds","parent","arr","children","i","length","node","prev","next"],"sources":["parse.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}
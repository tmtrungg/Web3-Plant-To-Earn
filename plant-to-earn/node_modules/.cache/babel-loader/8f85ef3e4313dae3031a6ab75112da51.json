{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.base64String = void 0;\n\nconst array_1 = require(\"./array\");\n\nconst base64_1 = require(\"./base64\");\n\nconst MaxLengthFromMinLength_1 = require(\"./_internals/helpers/MaxLengthFromMinLength\");\n\nconst CodePointsToString_1 = require(\"./_internals/mappers/CodePointsToString\");\n\nconst StringToBase64_1 = require(\"./_internals/mappers/StringToBase64\");\n\nconst SlicesForStringBuilder_1 = require(\"./_internals/helpers/SlicesForStringBuilder\");\n\nfunction base64String() {\n  let constraints = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    minLength: unscaledMinLength = 0,\n    maxLength: unscaledMaxLength = MaxLengthFromMinLength_1.MaxLengthUpperBound,\n    size\n  } = constraints;\n  const minLength = unscaledMinLength + 3 - (unscaledMinLength + 3) % 4;\n  const maxLength = unscaledMaxLength - unscaledMaxLength % 4;\n  const requestedSize = constraints.maxLength === undefined && size === undefined ? '=' : size;\n  if (minLength > maxLength) throw new Error('Minimal length should be inferior or equal to maximal length');\n  if (minLength % 4 !== 0) throw new Error('Minimal length of base64 strings must be a multiple of 4');\n  if (maxLength % 4 !== 0) throw new Error('Maximal length of base64 strings must be a multiple of 4');\n  const charArbitrary = (0, base64_1.base64)();\n  const experimentalCustomSlices = (0, SlicesForStringBuilder_1.createSlicesForString)(charArbitrary, CodePointsToString_1.codePointsToStringUnmapper);\n  const enrichedConstraints = {\n    minLength,\n    maxLength,\n    size: requestedSize,\n    experimentalCustomSlices\n  };\n  return (0, array_1.array)(charArbitrary, enrichedConstraints).map(CodePointsToString_1.codePointsToStringMapper, CodePointsToString_1.codePointsToStringUnmapper).map(StringToBase64_1.stringToBase64Mapper, StringToBase64_1.stringToBase64Unmapper);\n}\n\nexports.base64String = base64String;","map":{"version":3,"names":["Object","defineProperty","exports","value","base64String","array_1","require","base64_1","MaxLengthFromMinLength_1","CodePointsToString_1","StringToBase64_1","SlicesForStringBuilder_1","constraints","minLength","unscaledMinLength","maxLength","unscaledMaxLength","MaxLengthUpperBound","size","requestedSize","undefined","Error","charArbitrary","base64","experimentalCustomSlices","createSlicesForString","codePointsToStringUnmapper","enrichedConstraints","array","map","codePointsToStringMapper","stringToBase64Mapper","stringToBase64Unmapper"],"sources":["/Users/tranminhtrung/Desktop/learn_web3/gamble/node_modules/fast-check/lib/arbitrary/base64String.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.base64String = void 0;\nconst array_1 = require(\"./array\");\nconst base64_1 = require(\"./base64\");\nconst MaxLengthFromMinLength_1 = require(\"./_internals/helpers/MaxLengthFromMinLength\");\nconst CodePointsToString_1 = require(\"./_internals/mappers/CodePointsToString\");\nconst StringToBase64_1 = require(\"./_internals/mappers/StringToBase64\");\nconst SlicesForStringBuilder_1 = require(\"./_internals/helpers/SlicesForStringBuilder\");\nfunction base64String(constraints = {}) {\n    const { minLength: unscaledMinLength = 0, maxLength: unscaledMaxLength = MaxLengthFromMinLength_1.MaxLengthUpperBound, size } = constraints;\n    const minLength = unscaledMinLength + 3 - ((unscaledMinLength + 3) % 4);\n    const maxLength = unscaledMaxLength - (unscaledMaxLength % 4);\n    const requestedSize = constraints.maxLength === undefined && size === undefined ? '=' : size;\n    if (minLength > maxLength)\n        throw new Error('Minimal length should be inferior or equal to maximal length');\n    if (minLength % 4 !== 0)\n        throw new Error('Minimal length of base64 strings must be a multiple of 4');\n    if (maxLength % 4 !== 0)\n        throw new Error('Maximal length of base64 strings must be a multiple of 4');\n    const charArbitrary = (0, base64_1.base64)();\n    const experimentalCustomSlices = (0, SlicesForStringBuilder_1.createSlicesForString)(charArbitrary, CodePointsToString_1.codePointsToStringUnmapper);\n    const enrichedConstraints = {\n        minLength,\n        maxLength,\n        size: requestedSize,\n        experimentalCustomSlices,\n    };\n    return (0, array_1.array)(charArbitrary, enrichedConstraints)\n        .map(CodePointsToString_1.codePointsToStringMapper, CodePointsToString_1.codePointsToStringUnmapper)\n        .map(StringToBase64_1.stringToBase64Mapper, StringToBase64_1.stringToBase64Unmapper);\n}\nexports.base64String = base64String;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuB,KAAK,CAA5B;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAME,wBAAwB,GAAGF,OAAO,CAAC,6CAAD,CAAxC;;AACA,MAAMG,oBAAoB,GAAGH,OAAO,CAAC,yCAAD,CAApC;;AACA,MAAMI,gBAAgB,GAAGJ,OAAO,CAAC,qCAAD,CAAhC;;AACA,MAAMK,wBAAwB,GAAGL,OAAO,CAAC,6CAAD,CAAxC;;AACA,SAASF,YAAT,GAAwC;EAAA,IAAlBQ,WAAkB,uEAAJ,EAAI;EACpC,MAAM;IAAEC,SAAS,EAAEC,iBAAiB,GAAG,CAAjC;IAAoCC,SAAS,EAAEC,iBAAiB,GAAGR,wBAAwB,CAACS,mBAA5F;IAAiHC;EAAjH,IAA0HN,WAAhI;EACA,MAAMC,SAAS,GAAGC,iBAAiB,GAAG,CAApB,GAAyB,CAACA,iBAAiB,GAAG,CAArB,IAA0B,CAArE;EACA,MAAMC,SAAS,GAAGC,iBAAiB,GAAIA,iBAAiB,GAAG,CAA3D;EACA,MAAMG,aAAa,GAAGP,WAAW,CAACG,SAAZ,KAA0BK,SAA1B,IAAuCF,IAAI,KAAKE,SAAhD,GAA4D,GAA5D,GAAkEF,IAAxF;EACA,IAAIL,SAAS,GAAGE,SAAhB,EACI,MAAM,IAAIM,KAAJ,CAAU,8DAAV,CAAN;EACJ,IAAIR,SAAS,GAAG,CAAZ,KAAkB,CAAtB,EACI,MAAM,IAAIQ,KAAJ,CAAU,0DAAV,CAAN;EACJ,IAAIN,SAAS,GAAG,CAAZ,KAAkB,CAAtB,EACI,MAAM,IAAIM,KAAJ,CAAU,0DAAV,CAAN;EACJ,MAAMC,aAAa,GAAG,CAAC,GAAGf,QAAQ,CAACgB,MAAb,GAAtB;EACA,MAAMC,wBAAwB,GAAG,CAAC,GAAGb,wBAAwB,CAACc,qBAA7B,EAAoDH,aAApD,EAAmEb,oBAAoB,CAACiB,0BAAxF,CAAjC;EACA,MAAMC,mBAAmB,GAAG;IACxBd,SADwB;IAExBE,SAFwB;IAGxBG,IAAI,EAAEC,aAHkB;IAIxBK;EAJwB,CAA5B;EAMA,OAAO,CAAC,GAAGnB,OAAO,CAACuB,KAAZ,EAAmBN,aAAnB,EAAkCK,mBAAlC,EACFE,GADE,CACEpB,oBAAoB,CAACqB,wBADvB,EACiDrB,oBAAoB,CAACiB,0BADtE,EAEFG,GAFE,CAEEnB,gBAAgB,CAACqB,oBAFnB,EAEyCrB,gBAAgB,CAACsB,sBAF1D,CAAP;AAGH;;AACD9B,OAAO,CAACE,YAAR,GAAuBA,YAAvB"},"metadata":{},"sourceType":"script"}
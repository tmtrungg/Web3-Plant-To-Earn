{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AsyncProperty = void 0;\n\nconst PreconditionFailure_1 = require(\"../precondition/PreconditionFailure\");\n\nconst IRawProperty_1 = require(\"./IRawProperty\");\n\nconst GlobalParameters_1 = require(\"../runner/configuration/GlobalParameters\");\n\nconst Stream_1 = require(\"../../stream/Stream\");\n\nconst NoUndefinedAsContext_1 = require(\"../../arbitrary/_internals/helpers/NoUndefinedAsContext\");\n\nclass AsyncProperty {\n  constructor(arb, predicate) {\n    this.arb = arb;\n    this.predicate = predicate;\n    const {\n      asyncBeforeEach,\n      asyncAfterEach,\n      beforeEach,\n      afterEach\n    } = (0, GlobalParameters_1.readConfigureGlobal)() || {};\n\n    if (asyncBeforeEach !== undefined && beforeEach !== undefined) {\n      throw Error('Global \"asyncBeforeEach\" and \"beforeEach\" parameters can\\'t be set at the same time when running async properties');\n    }\n\n    if (asyncAfterEach !== undefined && afterEach !== undefined) {\n      throw Error('Global \"asyncAfterEach\" and \"afterEach\" parameters can\\'t be set at the same time when running async properties');\n    }\n\n    this.beforeEachHook = asyncBeforeEach || beforeEach || AsyncProperty.dummyHook;\n    this.afterEachHook = asyncAfterEach || afterEach || AsyncProperty.dummyHook;\n  }\n\n  isAsync() {\n    return true;\n  }\n\n  generate(mrng, runId) {\n    const value = this.arb.generate(mrng, runId != null ? (0, IRawProperty_1.runIdToFrequency)(runId) : undefined);\n    return (0, NoUndefinedAsContext_1.noUndefinedAsContext)(value);\n  }\n\n  shrink(value) {\n    if (value.context === undefined && !this.arb.canShrinkWithoutContext(value.value_)) {\n      return Stream_1.Stream.nil();\n    }\n\n    const safeContext = value.context !== NoUndefinedAsContext_1.UndefinedContextPlaceholder ? value.context : undefined;\n    return this.arb.shrink(value.value_, safeContext).map(NoUndefinedAsContext_1.noUndefinedAsContext);\n  }\n\n  async run(v) {\n    await this.beforeEachHook();\n\n    try {\n      const output = await this.predicate(v);\n      return output == null || output === true ? null : {\n        error: undefined,\n        errorMessage: 'Property failed by returning false'\n      };\n    } catch (err) {\n      if (PreconditionFailure_1.PreconditionFailure.isFailure(err)) return err;\n\n      if (err instanceof Error && err.stack) {\n        return {\n          error: err,\n          errorMessage: `${err}\\n\\nStack trace: ${err.stack}`\n        };\n      }\n\n      return {\n        error: err,\n        errorMessage: String(err)\n      };\n    } finally {\n      await this.afterEachHook();\n    }\n  }\n\n  beforeEach(hookFunction) {\n    const previousBeforeEachHook = this.beforeEachHook;\n\n    this.beforeEachHook = () => hookFunction(previousBeforeEachHook);\n\n    return this;\n  }\n\n  afterEach(hookFunction) {\n    const previousAfterEachHook = this.afterEachHook;\n\n    this.afterEachHook = () => hookFunction(previousAfterEachHook);\n\n    return this;\n  }\n\n}\n\nexports.AsyncProperty = AsyncProperty;\n\nAsyncProperty.dummyHook = () => {};","map":{"version":3,"names":["Object","defineProperty","exports","value","AsyncProperty","PreconditionFailure_1","require","IRawProperty_1","GlobalParameters_1","Stream_1","NoUndefinedAsContext_1","constructor","arb","predicate","asyncBeforeEach","asyncAfterEach","beforeEach","afterEach","readConfigureGlobal","undefined","Error","beforeEachHook","dummyHook","afterEachHook","isAsync","generate","mrng","runId","runIdToFrequency","noUndefinedAsContext","shrink","context","canShrinkWithoutContext","value_","Stream","nil","safeContext","UndefinedContextPlaceholder","map","run","v","output","error","errorMessage","err","PreconditionFailure","isFailure","stack","String","hookFunction","previousBeforeEachHook","previousAfterEachHook"],"sources":["/Users/tranminhtrung/Desktop/learn_web3/gamble/node_modules/fast-check/lib/check/property/AsyncProperty.generic.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AsyncProperty = void 0;\nconst PreconditionFailure_1 = require(\"../precondition/PreconditionFailure\");\nconst IRawProperty_1 = require(\"./IRawProperty\");\nconst GlobalParameters_1 = require(\"../runner/configuration/GlobalParameters\");\nconst Stream_1 = require(\"../../stream/Stream\");\nconst NoUndefinedAsContext_1 = require(\"../../arbitrary/_internals/helpers/NoUndefinedAsContext\");\nclass AsyncProperty {\n    constructor(arb, predicate) {\n        this.arb = arb;\n        this.predicate = predicate;\n        const { asyncBeforeEach, asyncAfterEach, beforeEach, afterEach } = (0, GlobalParameters_1.readConfigureGlobal)() || {};\n        if (asyncBeforeEach !== undefined && beforeEach !== undefined) {\n            throw Error('Global \"asyncBeforeEach\" and \"beforeEach\" parameters can\\'t be set at the same time when running async properties');\n        }\n        if (asyncAfterEach !== undefined && afterEach !== undefined) {\n            throw Error('Global \"asyncAfterEach\" and \"afterEach\" parameters can\\'t be set at the same time when running async properties');\n        }\n        this.beforeEachHook = asyncBeforeEach || beforeEach || AsyncProperty.dummyHook;\n        this.afterEachHook = asyncAfterEach || afterEach || AsyncProperty.dummyHook;\n    }\n    isAsync() {\n        return true;\n    }\n    generate(mrng, runId) {\n        const value = this.arb.generate(mrng, runId != null ? (0, IRawProperty_1.runIdToFrequency)(runId) : undefined);\n        return (0, NoUndefinedAsContext_1.noUndefinedAsContext)(value);\n    }\n    shrink(value) {\n        if (value.context === undefined && !this.arb.canShrinkWithoutContext(value.value_)) {\n            return Stream_1.Stream.nil();\n        }\n        const safeContext = value.context !== NoUndefinedAsContext_1.UndefinedContextPlaceholder ? value.context : undefined;\n        return this.arb.shrink(value.value_, safeContext).map(NoUndefinedAsContext_1.noUndefinedAsContext);\n    }\n    async run(v) {\n        await this.beforeEachHook();\n        try {\n            const output = await this.predicate(v);\n            return output == null || output === true\n                ? null\n                : { error: undefined, errorMessage: 'Property failed by returning false' };\n        }\n        catch (err) {\n            if (PreconditionFailure_1.PreconditionFailure.isFailure(err))\n                return err;\n            if (err instanceof Error && err.stack) {\n                return { error: err, errorMessage: `${err}\\n\\nStack trace: ${err.stack}` };\n            }\n            return { error: err, errorMessage: String(err) };\n        }\n        finally {\n            await this.afterEachHook();\n        }\n    }\n    beforeEach(hookFunction) {\n        const previousBeforeEachHook = this.beforeEachHook;\n        this.beforeEachHook = () => hookFunction(previousBeforeEachHook);\n        return this;\n    }\n    afterEach(hookFunction) {\n        const previousAfterEachHook = this.afterEachHook;\n        this.afterEachHook = () => hookFunction(previousAfterEachHook);\n        return this;\n    }\n}\nexports.AsyncProperty = AsyncProperty;\nAsyncProperty.dummyHook = () => { };\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
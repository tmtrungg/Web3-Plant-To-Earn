{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.arrayInt64 = void 0;\n\nconst Stream_1 = require(\"../../stream/Stream\");\n\nconst Arbitrary_1 = require(\"../../check/arbitrary/definition/Arbitrary\");\n\nconst Value_1 = require(\"../../check/arbitrary/definition/Value\");\n\nconst ArrayInt64_1 = require(\"./helpers/ArrayInt64\");\n\nclass ArrayInt64Arbitrary extends Arbitrary_1.Arbitrary {\n  constructor(min, max) {\n    super();\n    this.min = min;\n    this.max = max;\n    this.biasedRanges = null;\n  }\n\n  generate(mrng, biasFactor) {\n    const range = this.computeGenerateRange(mrng, biasFactor);\n    const uncheckedValue = mrng.nextArrayInt(range.min, range.max);\n\n    if (uncheckedValue.data.length === 1) {\n      uncheckedValue.data.unshift(0);\n    }\n\n    return new Value_1.Value(uncheckedValue, undefined);\n  }\n\n  computeGenerateRange(mrng, biasFactor) {\n    if (biasFactor === undefined || mrng.nextInt(1, biasFactor) !== 1) {\n      return {\n        min: this.min,\n        max: this.max\n      };\n    }\n\n    const ranges = this.retrieveBiasedRanges();\n\n    if (ranges.length === 1) {\n      return ranges[0];\n    }\n\n    const id = mrng.nextInt(-2 * (ranges.length - 1), ranges.length - 2);\n    return id < 0 ? ranges[0] : ranges[id + 1];\n  }\n\n  canShrinkWithoutContext(value) {\n    const unsafeValue = value;\n    return typeof value === 'object' && value !== null && (unsafeValue.sign === -1 || unsafeValue.sign === 1) && Array.isArray(unsafeValue.data) && unsafeValue.data.length === 2 && ((0, ArrayInt64_1.isStrictlySmaller64)(this.min, unsafeValue) && (0, ArrayInt64_1.isStrictlySmaller64)(unsafeValue, this.max) || (0, ArrayInt64_1.isEqual64)(this.min, unsafeValue) || (0, ArrayInt64_1.isEqual64)(this.max, unsafeValue));\n  }\n\n  shrinkArrayInt64(value, target, tryTargetAsap) {\n    const realGap = (0, ArrayInt64_1.substract64)(value, target);\n\n    function* shrinkGen() {\n      let previous = tryTargetAsap ? undefined : target;\n      const gap = tryTargetAsap ? realGap : (0, ArrayInt64_1.halve64)(realGap);\n\n      for (let toremove = gap; !(0, ArrayInt64_1.isZero64)(toremove); toremove = (0, ArrayInt64_1.halve64)(toremove)) {\n        const next = (0, ArrayInt64_1.substract64)(value, toremove);\n        yield new Value_1.Value(next, previous);\n        previous = next;\n      }\n    }\n\n    return (0, Stream_1.stream)(shrinkGen());\n  }\n\n  shrink(current, context) {\n    if (!ArrayInt64Arbitrary.isValidContext(current, context)) {\n      const target = this.defaultTarget();\n      return this.shrinkArrayInt64(current, target, true);\n    }\n\n    if (this.isLastChanceTry(current, context)) {\n      return Stream_1.Stream.of(new Value_1.Value(context, undefined));\n    }\n\n    return this.shrinkArrayInt64(current, context, false);\n  }\n\n  defaultTarget() {\n    if (!(0, ArrayInt64_1.isStrictlyPositive64)(this.min) && !(0, ArrayInt64_1.isStrictlyNegative64)(this.max)) {\n      return ArrayInt64_1.Zero64;\n    }\n\n    return (0, ArrayInt64_1.isStrictlyNegative64)(this.min) ? this.max : this.min;\n  }\n\n  isLastChanceTry(current, context) {\n    if ((0, ArrayInt64_1.isZero64)(current)) {\n      return false;\n    }\n\n    if (current.sign === 1) {\n      return (0, ArrayInt64_1.isEqual64)(current, (0, ArrayInt64_1.add64)(context, ArrayInt64_1.Unit64)) && (0, ArrayInt64_1.isStrictlyPositive64)((0, ArrayInt64_1.substract64)(current, this.min));\n    } else {\n      return (0, ArrayInt64_1.isEqual64)(current, (0, ArrayInt64_1.substract64)(context, ArrayInt64_1.Unit64)) && (0, ArrayInt64_1.isStrictlyNegative64)((0, ArrayInt64_1.substract64)(current, this.max));\n    }\n  }\n\n  static isValidContext(_current, context) {\n    if (context === undefined) {\n      return false;\n    }\n\n    if (typeof context !== 'object' || context === null || !('sign' in context) || !('data' in context)) {\n      throw new Error(`Invalid context type passed to ArrayInt64Arbitrary (#1)`);\n    }\n\n    return true;\n  }\n\n  retrieveBiasedRanges() {\n    if (this.biasedRanges != null) {\n      return this.biasedRanges;\n    }\n\n    if ((0, ArrayInt64_1.isEqual64)(this.min, this.max)) {\n      this.biasedRanges = [{\n        min: this.min,\n        max: this.max\n      }];\n      return this.biasedRanges;\n    }\n\n    const minStrictlySmallerZero = (0, ArrayInt64_1.isStrictlyNegative64)(this.min);\n    const maxStrictlyGreaterZero = (0, ArrayInt64_1.isStrictlyPositive64)(this.max);\n\n    if (minStrictlySmallerZero && maxStrictlyGreaterZero) {\n      const logMin = (0, ArrayInt64_1.logLike64)(this.min);\n      const logMax = (0, ArrayInt64_1.logLike64)(this.max);\n      this.biasedRanges = [{\n        min: logMin,\n        max: logMax\n      }, {\n        min: (0, ArrayInt64_1.substract64)(this.max, logMax),\n        max: this.max\n      }, {\n        min: this.min,\n        max: (0, ArrayInt64_1.substract64)(this.min, logMin)\n      }];\n    } else {\n      const logGap = (0, ArrayInt64_1.logLike64)((0, ArrayInt64_1.substract64)(this.max, this.min));\n      const arbCloseToMin = {\n        min: this.min,\n        max: (0, ArrayInt64_1.add64)(this.min, logGap)\n      };\n      const arbCloseToMax = {\n        min: (0, ArrayInt64_1.substract64)(this.max, logGap),\n        max: this.max\n      };\n      this.biasedRanges = minStrictlySmallerZero ? [arbCloseToMax, arbCloseToMin] : [arbCloseToMin, arbCloseToMax];\n    }\n\n    return this.biasedRanges;\n  }\n\n}\n\nfunction arrayInt64(min, max) {\n  const arb = new ArrayInt64Arbitrary(min, max);\n  return arb;\n}\n\nexports.arrayInt64 = arrayInt64;","map":{"version":3,"names":["Object","defineProperty","exports","value","arrayInt64","Stream_1","require","Arbitrary_1","Value_1","ArrayInt64_1","ArrayInt64Arbitrary","Arbitrary","constructor","min","max","biasedRanges","generate","mrng","biasFactor","range","computeGenerateRange","uncheckedValue","nextArrayInt","data","length","unshift","Value","undefined","nextInt","ranges","retrieveBiasedRanges","id","canShrinkWithoutContext","unsafeValue","sign","Array","isArray","isStrictlySmaller64","isEqual64","shrinkArrayInt64","target","tryTargetAsap","realGap","substract64","shrinkGen","previous","gap","halve64","toremove","isZero64","next","stream","shrink","current","context","isValidContext","defaultTarget","isLastChanceTry","Stream","of","isStrictlyPositive64","isStrictlyNegative64","Zero64","add64","Unit64","_current","Error","minStrictlySmallerZero","maxStrictlyGreaterZero","logMin","logLike64","logMax","logGap","arbCloseToMin","arbCloseToMax","arb"],"sources":["/Users/tranminhtrung/Desktop/learn_web3/gamble/node_modules/fast-check/lib/arbitrary/_internals/ArrayInt64Arbitrary.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.arrayInt64 = void 0;\nconst Stream_1 = require(\"../../stream/Stream\");\nconst Arbitrary_1 = require(\"../../check/arbitrary/definition/Arbitrary\");\nconst Value_1 = require(\"../../check/arbitrary/definition/Value\");\nconst ArrayInt64_1 = require(\"./helpers/ArrayInt64\");\nclass ArrayInt64Arbitrary extends Arbitrary_1.Arbitrary {\n    constructor(min, max) {\n        super();\n        this.min = min;\n        this.max = max;\n        this.biasedRanges = null;\n    }\n    generate(mrng, biasFactor) {\n        const range = this.computeGenerateRange(mrng, biasFactor);\n        const uncheckedValue = mrng.nextArrayInt(range.min, range.max);\n        if (uncheckedValue.data.length === 1) {\n            uncheckedValue.data.unshift(0);\n        }\n        return new Value_1.Value(uncheckedValue, undefined);\n    }\n    computeGenerateRange(mrng, biasFactor) {\n        if (biasFactor === undefined || mrng.nextInt(1, biasFactor) !== 1) {\n            return { min: this.min, max: this.max };\n        }\n        const ranges = this.retrieveBiasedRanges();\n        if (ranges.length === 1) {\n            return ranges[0];\n        }\n        const id = mrng.nextInt(-2 * (ranges.length - 1), ranges.length - 2);\n        return id < 0 ? ranges[0] : ranges[id + 1];\n    }\n    canShrinkWithoutContext(value) {\n        const unsafeValue = value;\n        return (typeof value === 'object' &&\n            value !== null &&\n            (unsafeValue.sign === -1 || unsafeValue.sign === 1) &&\n            Array.isArray(unsafeValue.data) &&\n            unsafeValue.data.length === 2 &&\n            (((0, ArrayInt64_1.isStrictlySmaller64)(this.min, unsafeValue) && (0, ArrayInt64_1.isStrictlySmaller64)(unsafeValue, this.max)) ||\n                (0, ArrayInt64_1.isEqual64)(this.min, unsafeValue) ||\n                (0, ArrayInt64_1.isEqual64)(this.max, unsafeValue)));\n    }\n    shrinkArrayInt64(value, target, tryTargetAsap) {\n        const realGap = (0, ArrayInt64_1.substract64)(value, target);\n        function* shrinkGen() {\n            let previous = tryTargetAsap ? undefined : target;\n            const gap = tryTargetAsap ? realGap : (0, ArrayInt64_1.halve64)(realGap);\n            for (let toremove = gap; !(0, ArrayInt64_1.isZero64)(toremove); toremove = (0, ArrayInt64_1.halve64)(toremove)) {\n                const next = (0, ArrayInt64_1.substract64)(value, toremove);\n                yield new Value_1.Value(next, previous);\n                previous = next;\n            }\n        }\n        return (0, Stream_1.stream)(shrinkGen());\n    }\n    shrink(current, context) {\n        if (!ArrayInt64Arbitrary.isValidContext(current, context)) {\n            const target = this.defaultTarget();\n            return this.shrinkArrayInt64(current, target, true);\n        }\n        if (this.isLastChanceTry(current, context)) {\n            return Stream_1.Stream.of(new Value_1.Value(context, undefined));\n        }\n        return this.shrinkArrayInt64(current, context, false);\n    }\n    defaultTarget() {\n        if (!(0, ArrayInt64_1.isStrictlyPositive64)(this.min) && !(0, ArrayInt64_1.isStrictlyNegative64)(this.max)) {\n            return ArrayInt64_1.Zero64;\n        }\n        return (0, ArrayInt64_1.isStrictlyNegative64)(this.min) ? this.max : this.min;\n    }\n    isLastChanceTry(current, context) {\n        if ((0, ArrayInt64_1.isZero64)(current)) {\n            return false;\n        }\n        if (current.sign === 1) {\n            return (0, ArrayInt64_1.isEqual64)(current, (0, ArrayInt64_1.add64)(context, ArrayInt64_1.Unit64)) && (0, ArrayInt64_1.isStrictlyPositive64)((0, ArrayInt64_1.substract64)(current, this.min));\n        }\n        else {\n            return (0, ArrayInt64_1.isEqual64)(current, (0, ArrayInt64_1.substract64)(context, ArrayInt64_1.Unit64)) && (0, ArrayInt64_1.isStrictlyNegative64)((0, ArrayInt64_1.substract64)(current, this.max));\n        }\n    }\n    static isValidContext(_current, context) {\n        if (context === undefined) {\n            return false;\n        }\n        if (typeof context !== 'object' || context === null || !('sign' in context) || !('data' in context)) {\n            throw new Error(`Invalid context type passed to ArrayInt64Arbitrary (#1)`);\n        }\n        return true;\n    }\n    retrieveBiasedRanges() {\n        if (this.biasedRanges != null) {\n            return this.biasedRanges;\n        }\n        if ((0, ArrayInt64_1.isEqual64)(this.min, this.max)) {\n            this.biasedRanges = [{ min: this.min, max: this.max }];\n            return this.biasedRanges;\n        }\n        const minStrictlySmallerZero = (0, ArrayInt64_1.isStrictlyNegative64)(this.min);\n        const maxStrictlyGreaterZero = (0, ArrayInt64_1.isStrictlyPositive64)(this.max);\n        if (minStrictlySmallerZero && maxStrictlyGreaterZero) {\n            const logMin = (0, ArrayInt64_1.logLike64)(this.min);\n            const logMax = (0, ArrayInt64_1.logLike64)(this.max);\n            this.biasedRanges = [\n                { min: logMin, max: logMax },\n                { min: (0, ArrayInt64_1.substract64)(this.max, logMax), max: this.max },\n                { min: this.min, max: (0, ArrayInt64_1.substract64)(this.min, logMin) },\n            ];\n        }\n        else {\n            const logGap = (0, ArrayInt64_1.logLike64)((0, ArrayInt64_1.substract64)(this.max, this.min));\n            const arbCloseToMin = { min: this.min, max: (0, ArrayInt64_1.add64)(this.min, logGap) };\n            const arbCloseToMax = { min: (0, ArrayInt64_1.substract64)(this.max, logGap), max: this.max };\n            this.biasedRanges = minStrictlySmallerZero\n                ? [arbCloseToMax, arbCloseToMin]\n                : [arbCloseToMin, arbCloseToMax];\n        }\n        return this.biasedRanges;\n    }\n}\nfunction arrayInt64(min, max) {\n    const arb = new ArrayInt64Arbitrary(min, max);\n    return arb;\n}\nexports.arrayInt64 = arrayInt64;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.unsafeUniformBigIntDistribution = void 0;\nvar SBigInt = typeof BigInt !== 'undefined' ? BigInt : undefined;\n\nfunction unsafeUniformBigIntDistribution(from, to, rng) {\n  var diff = to - from + SBigInt(1);\n  var MinRng = SBigInt(rng.min());\n  var NumValues = SBigInt(rng.max() - rng.min() + 1);\n  var FinalNumValues = NumValues;\n  var NumIterations = SBigInt(1);\n\n  while (FinalNumValues < diff) {\n    FinalNumValues *= NumValues;\n    ++NumIterations;\n  }\n\n  var MaxAcceptedRandom = FinalNumValues - FinalNumValues % diff;\n\n  while (true) {\n    var value = SBigInt(0);\n\n    for (var num = SBigInt(0); num !== NumIterations; ++num) {\n      var out = rng.unsafeNext();\n      value = NumValues * value + (SBigInt(out) - MinRng);\n    }\n\n    if (value < MaxAcceptedRandom) {\n      var inDiff = value % diff;\n      return inDiff + from;\n    }\n  }\n}\n\nexports.unsafeUniformBigIntDistribution = unsafeUniformBigIntDistribution;","map":{"version":3,"names":["exports","__esModule","unsafeUniformBigIntDistribution","SBigInt","BigInt","undefined","from","to","rng","diff","MinRng","min","NumValues","max","FinalNumValues","NumIterations","MaxAcceptedRandom","value","num","out","unsafeNext","inDiff"],"sources":["/Users/tranminhtrung/Desktop/learn_web3/gamble/node_modules/pure-rand/lib/distribution/UnsafeUniformBigIntDistribution.js"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.unsafeUniformBigIntDistribution = void 0;\nvar SBigInt = typeof BigInt !== 'undefined' ? BigInt : undefined;\nfunction unsafeUniformBigIntDistribution(from, to, rng) {\n    var diff = to - from + SBigInt(1);\n    var MinRng = SBigInt(rng.min());\n    var NumValues = SBigInt(rng.max() - rng.min() + 1);\n    var FinalNumValues = NumValues;\n    var NumIterations = SBigInt(1);\n    while (FinalNumValues < diff) {\n        FinalNumValues *= NumValues;\n        ++NumIterations;\n    }\n    var MaxAcceptedRandom = FinalNumValues - (FinalNumValues % diff);\n    while (true) {\n        var value = SBigInt(0);\n        for (var num = SBigInt(0); num !== NumIterations; ++num) {\n            var out = rng.unsafeNext();\n            value = NumValues * value + (SBigInt(out) - MinRng);\n        }\n        if (value < MaxAcceptedRandom) {\n            var inDiff = value % diff;\n            return inDiff + from;\n        }\n    }\n}\nexports.unsafeUniformBigIntDistribution = unsafeUniformBigIntDistribution;\n"],"mappings":"AAAA;;AACAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,+BAAR,GAA0C,KAAK,CAA/C;AACA,IAAIC,OAAO,GAAG,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyCC,SAAvD;;AACA,SAASH,+BAAT,CAAyCI,IAAzC,EAA+CC,EAA/C,EAAmDC,GAAnD,EAAwD;EACpD,IAAIC,IAAI,GAAGF,EAAE,GAAGD,IAAL,GAAYH,OAAO,CAAC,CAAD,CAA9B;EACA,IAAIO,MAAM,GAAGP,OAAO,CAACK,GAAG,CAACG,GAAJ,EAAD,CAApB;EACA,IAAIC,SAAS,GAAGT,OAAO,CAACK,GAAG,CAACK,GAAJ,KAAYL,GAAG,CAACG,GAAJ,EAAZ,GAAwB,CAAzB,CAAvB;EACA,IAAIG,cAAc,GAAGF,SAArB;EACA,IAAIG,aAAa,GAAGZ,OAAO,CAAC,CAAD,CAA3B;;EACA,OAAOW,cAAc,GAAGL,IAAxB,EAA8B;IAC1BK,cAAc,IAAIF,SAAlB;IACA,EAAEG,aAAF;EACH;;EACD,IAAIC,iBAAiB,GAAGF,cAAc,GAAIA,cAAc,GAAGL,IAA3D;;EACA,OAAO,IAAP,EAAa;IACT,IAAIQ,KAAK,GAAGd,OAAO,CAAC,CAAD,CAAnB;;IACA,KAAK,IAAIe,GAAG,GAAGf,OAAO,CAAC,CAAD,CAAtB,EAA2Be,GAAG,KAAKH,aAAnC,EAAkD,EAAEG,GAApD,EAAyD;MACrD,IAAIC,GAAG,GAAGX,GAAG,CAACY,UAAJ,EAAV;MACAH,KAAK,GAAGL,SAAS,GAAGK,KAAZ,IAAqBd,OAAO,CAACgB,GAAD,CAAP,GAAeT,MAApC,CAAR;IACH;;IACD,IAAIO,KAAK,GAAGD,iBAAZ,EAA+B;MAC3B,IAAIK,MAAM,GAAGJ,KAAK,GAAGR,IAArB;MACA,OAAOY,MAAM,GAAGf,IAAhB;IACH;EACJ;AACJ;;AACDN,OAAO,CAACE,+BAAR,GAA0CA,+BAA1C"},"metadata":{},"sourceType":"script"}
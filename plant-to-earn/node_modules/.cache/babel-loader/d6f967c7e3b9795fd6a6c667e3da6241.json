{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.asyncProperty = void 0;\n\nconst Arbitrary_1 = require(\"../arbitrary/definition/Arbitrary\");\n\nconst tuple_1 = require(\"../../arbitrary/tuple\");\n\nconst AsyncProperty_generic_1 = require(\"./AsyncProperty.generic\");\n\nconst AlwaysShrinkableArbitrary_1 = require(\"../../arbitrary/_internals/AlwaysShrinkableArbitrary\");\n\nfunction asyncProperty() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (args.length < 2) {\n    throw new Error('asyncProperty expects at least two parameters');\n  }\n\n  const arbs = args.slice(0, args.length - 1);\n  const p = args[args.length - 1];\n  arbs.forEach(Arbitrary_1.assertIsArbitrary);\n  const mappedArbs = arbs.map(arb => new AlwaysShrinkableArbitrary_1.AlwaysShrinkableArbitrary(arb));\n  return new AsyncProperty_generic_1.AsyncProperty((0, tuple_1.tuple)(...mappedArbs), t => p(...t));\n}\n\nexports.asyncProperty = asyncProperty;","map":{"version":3,"names":["Object","defineProperty","exports","value","asyncProperty","Arbitrary_1","require","tuple_1","AsyncProperty_generic_1","AlwaysShrinkableArbitrary_1","args","length","Error","arbs","slice","p","forEach","assertIsArbitrary","mappedArbs","map","arb","AlwaysShrinkableArbitrary","AsyncProperty","tuple","t"],"sources":["/Users/tranminhtrung/Desktop/learn_web3/gamble/node_modules/fast-check/lib/check/property/AsyncProperty.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.asyncProperty = void 0;\nconst Arbitrary_1 = require(\"../arbitrary/definition/Arbitrary\");\nconst tuple_1 = require(\"../../arbitrary/tuple\");\nconst AsyncProperty_generic_1 = require(\"./AsyncProperty.generic\");\nconst AlwaysShrinkableArbitrary_1 = require(\"../../arbitrary/_internals/AlwaysShrinkableArbitrary\");\nfunction asyncProperty(...args) {\n    if (args.length < 2) {\n        throw new Error('asyncProperty expects at least two parameters');\n    }\n    const arbs = args.slice(0, args.length - 1);\n    const p = args[args.length - 1];\n    arbs.forEach(Arbitrary_1.assertIsArbitrary);\n    const mappedArbs = arbs.map((arb) => new AlwaysShrinkableArbitrary_1.AlwaysShrinkableArbitrary(arb));\n    return new AsyncProperty_generic_1.AsyncProperty((0, tuple_1.tuple)(...mappedArbs), (t) => p(...t));\n}\nexports.asyncProperty = asyncProperty;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,aAAR,GAAwB,KAAK,CAA7B;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,mCAAD,CAA3B;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,uBAAD,CAAvB;;AACA,MAAME,uBAAuB,GAAGF,OAAO,CAAC,yBAAD,CAAvC;;AACA,MAAMG,2BAA2B,GAAGH,OAAO,CAAC,sDAAD,CAA3C;;AACA,SAASF,aAAT,GAAgC;EAAA,kCAANM,IAAM;IAANA,IAAM;EAAA;;EAC5B,IAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;IACjB,MAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;EACH;;EACD,MAAMC,IAAI,GAAGH,IAAI,CAACI,KAAL,CAAW,CAAX,EAAcJ,IAAI,CAACC,MAAL,GAAc,CAA5B,CAAb;EACA,MAAMI,CAAC,GAAGL,IAAI,CAACA,IAAI,CAACC,MAAL,GAAc,CAAf,CAAd;EACAE,IAAI,CAACG,OAAL,CAAaX,WAAW,CAACY,iBAAzB;EACA,MAAMC,UAAU,GAAGL,IAAI,CAACM,GAAL,CAAUC,GAAD,IAAS,IAAIX,2BAA2B,CAACY,yBAAhC,CAA0DD,GAA1D,CAAlB,CAAnB;EACA,OAAO,IAAIZ,uBAAuB,CAACc,aAA5B,CAA0C,CAAC,GAAGf,OAAO,CAACgB,KAAZ,EAAmB,GAAGL,UAAtB,CAA1C,EAA8EM,CAAD,IAAOT,CAAC,CAAC,GAAGS,CAAJ,CAArF,CAAP;AACH;;AACDtB,OAAO,CAACE,aAAR,GAAwBA,aAAxB"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.indexToMappedConstantUnmapperFor = exports.indexToMappedConstantMapperFor = void 0;\n\nfunction indexToMappedConstantMapperFor(entries) {\n  return function indexToMappedConstantMapper(choiceIndex) {\n    let idx = -1;\n    let numSkips = 0;\n\n    while (choiceIndex >= numSkips) {\n      numSkips += entries[++idx].num;\n    }\n\n    return entries[idx].build(choiceIndex - numSkips + entries[idx].num);\n  };\n}\n\nexports.indexToMappedConstantMapperFor = indexToMappedConstantMapperFor;\n\nfunction buildReverseMapping(entries) {\n  const reverseMapping = {\n    mapping: new Map(),\n    negativeZeroIndex: undefined\n  };\n  let choiceIndex = 0;\n\n  for (let entryIdx = 0; entryIdx !== entries.length; ++entryIdx) {\n    const entry = entries[entryIdx];\n\n    for (let idxInEntry = 0; idxInEntry !== entry.num; ++idxInEntry) {\n      const value = entry.build(idxInEntry);\n\n      if (value === 0 && 1 / value === Number.NEGATIVE_INFINITY) {\n        reverseMapping.negativeZeroIndex = choiceIndex;\n      } else {\n        reverseMapping.mapping.set(value, choiceIndex);\n      }\n\n      ++choiceIndex;\n    }\n  }\n\n  return reverseMapping;\n}\n\nfunction indexToMappedConstantUnmapperFor(entries) {\n  let reverseMapping = null;\n  return function indexToMappedConstantUnmapper(value) {\n    if (reverseMapping === null) {\n      reverseMapping = buildReverseMapping(entries);\n    }\n\n    const choiceIndex = Object.is(value, -0) ? reverseMapping.negativeZeroIndex : reverseMapping.mapping.get(value);\n\n    if (choiceIndex === undefined) {\n      throw new Error('Unknown value encountered cannot be built using this mapToConstant');\n    }\n\n    return choiceIndex;\n  };\n}\n\nexports.indexToMappedConstantUnmapperFor = indexToMappedConstantUnmapperFor;","map":{"version":3,"names":["Object","defineProperty","exports","value","indexToMappedConstantUnmapperFor","indexToMappedConstantMapperFor","entries","indexToMappedConstantMapper","choiceIndex","idx","numSkips","num","build","buildReverseMapping","reverseMapping","mapping","Map","negativeZeroIndex","undefined","entryIdx","length","entry","idxInEntry","Number","NEGATIVE_INFINITY","set","indexToMappedConstantUnmapper","is","get","Error"],"sources":["/Users/tranminhtrung/Desktop/learn_web3/gamble/node_modules/fast-check/lib/arbitrary/_internals/mappers/IndexToMappedConstant.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.indexToMappedConstantUnmapperFor = exports.indexToMappedConstantMapperFor = void 0;\nfunction indexToMappedConstantMapperFor(entries) {\n    return function indexToMappedConstantMapper(choiceIndex) {\n        let idx = -1;\n        let numSkips = 0;\n        while (choiceIndex >= numSkips) {\n            numSkips += entries[++idx].num;\n        }\n        return entries[idx].build(choiceIndex - numSkips + entries[idx].num);\n    };\n}\nexports.indexToMappedConstantMapperFor = indexToMappedConstantMapperFor;\nfunction buildReverseMapping(entries) {\n    const reverseMapping = { mapping: new Map(), negativeZeroIndex: undefined };\n    let choiceIndex = 0;\n    for (let entryIdx = 0; entryIdx !== entries.length; ++entryIdx) {\n        const entry = entries[entryIdx];\n        for (let idxInEntry = 0; idxInEntry !== entry.num; ++idxInEntry) {\n            const value = entry.build(idxInEntry);\n            if (value === 0 && 1 / value === Number.NEGATIVE_INFINITY) {\n                reverseMapping.negativeZeroIndex = choiceIndex;\n            }\n            else {\n                reverseMapping.mapping.set(value, choiceIndex);\n            }\n            ++choiceIndex;\n        }\n    }\n    return reverseMapping;\n}\nfunction indexToMappedConstantUnmapperFor(entries) {\n    let reverseMapping = null;\n    return function indexToMappedConstantUnmapper(value) {\n        if (reverseMapping === null) {\n            reverseMapping = buildReverseMapping(entries);\n        }\n        const choiceIndex = Object.is(value, -0) ? reverseMapping.negativeZeroIndex : reverseMapping.mapping.get(value);\n        if (choiceIndex === undefined) {\n            throw new Error('Unknown value encountered cannot be built using this mapToConstant');\n        }\n        return choiceIndex;\n    };\n}\nexports.indexToMappedConstantUnmapperFor = indexToMappedConstantUnmapperFor;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,gCAAR,GAA2CF,OAAO,CAACG,8BAAR,GAAyC,KAAK,CAAzF;;AACA,SAASA,8BAAT,CAAwCC,OAAxC,EAAiD;EAC7C,OAAO,SAASC,2BAAT,CAAqCC,WAArC,EAAkD;IACrD,IAAIC,GAAG,GAAG,CAAC,CAAX;IACA,IAAIC,QAAQ,GAAG,CAAf;;IACA,OAAOF,WAAW,IAAIE,QAAtB,EAAgC;MAC5BA,QAAQ,IAAIJ,OAAO,CAAC,EAAEG,GAAH,CAAP,CAAeE,GAA3B;IACH;;IACD,OAAOL,OAAO,CAACG,GAAD,CAAP,CAAaG,KAAb,CAAmBJ,WAAW,GAAGE,QAAd,GAAyBJ,OAAO,CAACG,GAAD,CAAP,CAAaE,GAAzD,CAAP;EACH,CAPD;AAQH;;AACDT,OAAO,CAACG,8BAAR,GAAyCA,8BAAzC;;AACA,SAASQ,mBAAT,CAA6BP,OAA7B,EAAsC;EAClC,MAAMQ,cAAc,GAAG;IAAEC,OAAO,EAAE,IAAIC,GAAJ,EAAX;IAAsBC,iBAAiB,EAAEC;EAAzC,CAAvB;EACA,IAAIV,WAAW,GAAG,CAAlB;;EACA,KAAK,IAAIW,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,KAAKb,OAAO,CAACc,MAA5C,EAAoD,EAAED,QAAtD,EAAgE;IAC5D,MAAME,KAAK,GAAGf,OAAO,CAACa,QAAD,CAArB;;IACA,KAAK,IAAIG,UAAU,GAAG,CAAtB,EAAyBA,UAAU,KAAKD,KAAK,CAACV,GAA9C,EAAmD,EAAEW,UAArD,EAAiE;MAC7D,MAAMnB,KAAK,GAAGkB,KAAK,CAACT,KAAN,CAAYU,UAAZ,CAAd;;MACA,IAAInB,KAAK,KAAK,CAAV,IAAe,IAAIA,KAAJ,KAAcoB,MAAM,CAACC,iBAAxC,EAA2D;QACvDV,cAAc,CAACG,iBAAf,GAAmCT,WAAnC;MACH,CAFD,MAGK;QACDM,cAAc,CAACC,OAAf,CAAuBU,GAAvB,CAA2BtB,KAA3B,EAAkCK,WAAlC;MACH;;MACD,EAAEA,WAAF;IACH;EACJ;;EACD,OAAOM,cAAP;AACH;;AACD,SAASV,gCAAT,CAA0CE,OAA1C,EAAmD;EAC/C,IAAIQ,cAAc,GAAG,IAArB;EACA,OAAO,SAASY,6BAAT,CAAuCvB,KAAvC,EAA8C;IACjD,IAAIW,cAAc,KAAK,IAAvB,EAA6B;MACzBA,cAAc,GAAGD,mBAAmB,CAACP,OAAD,CAApC;IACH;;IACD,MAAME,WAAW,GAAGR,MAAM,CAAC2B,EAAP,CAAUxB,KAAV,EAAiB,CAAC,CAAlB,IAAuBW,cAAc,CAACG,iBAAtC,GAA0DH,cAAc,CAACC,OAAf,CAAuBa,GAAvB,CAA2BzB,KAA3B,CAA9E;;IACA,IAAIK,WAAW,KAAKU,SAApB,EAA+B;MAC3B,MAAM,IAAIW,KAAJ,CAAU,oEAAV,CAAN;IACH;;IACD,OAAOrB,WAAP;EACH,CATD;AAUH;;AACDN,OAAO,CAACE,gCAAR,GAA2CA,gCAA3C"},"metadata":{},"sourceType":"script"}
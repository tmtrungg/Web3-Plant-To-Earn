{"ast":null,"code":"\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.typedIntArrayArbitraryArbitraryBuilder = void 0;\n\nconst array_1 = require(\"../../array\");\n\nfunction typedIntArrayArbitraryArbitraryBuilder(constraints, defaultMin, defaultMax, TypedArrayClass, arbitraryBuilder) {\n  const generatorName = TypedArrayClass.name;\n\n  const {\n    min = defaultMin,\n    max = defaultMax\n  } = constraints,\n        arrayConstraints = __rest(constraints, [\"min\", \"max\"]);\n\n  if (min > max) {\n    throw new Error(`Invalid range passed to ${generatorName}: min must be lower than or equal to max`);\n  }\n\n  if (min < defaultMin) {\n    throw new Error(`Invalid min value passed to ${generatorName}: min must be greater than or equal to ${defaultMin}`);\n  }\n\n  if (max > defaultMax) {\n    throw new Error(`Invalid max value passed to ${generatorName}: max must be lower than or equal to ${defaultMax}`);\n  }\n\n  return (0, array_1.array)(arbitraryBuilder({\n    min,\n    max\n  }), arrayConstraints).map(data => TypedArrayClass.from(data), value => {\n    if (!(value instanceof TypedArrayClass)) throw new Error('Invalid type');\n    return [...value];\n  });\n}\n\nexports.typedIntArrayArbitraryArbitraryBuilder = typedIntArrayArbitraryArbitraryBuilder;","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","defineProperty","exports","value","typedIntArrayArbitraryArbitraryBuilder","array_1","require","constraints","defaultMin","defaultMax","TypedArrayClass","arbitraryBuilder","generatorName","name","min","max","arrayConstraints","Error","array","map","data","from"],"sources":["/Users/tranminhtrung/Desktop/learn_web3/gamble/node_modules/fast-check/lib/arbitrary/_internals/builders/TypedIntArrayArbitraryBuilder.js"],"sourcesContent":["\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.typedIntArrayArbitraryArbitraryBuilder = void 0;\nconst array_1 = require(\"../../array\");\nfunction typedIntArrayArbitraryArbitraryBuilder(constraints, defaultMin, defaultMax, TypedArrayClass, arbitraryBuilder) {\n    const generatorName = TypedArrayClass.name;\n    const { min = defaultMin, max = defaultMax } = constraints, arrayConstraints = __rest(constraints, [\"min\", \"max\"]);\n    if (min > max) {\n        throw new Error(`Invalid range passed to ${generatorName}: min must be lower than or equal to max`);\n    }\n    if (min < defaultMin) {\n        throw new Error(`Invalid min value passed to ${generatorName}: min must be greater than or equal to ${defaultMin}`);\n    }\n    if (max > defaultMax) {\n        throw new Error(`Invalid max value passed to ${generatorName}: max must be lower than or equal to ${defaultMax}`);\n    }\n    return (0, array_1.array)(arbitraryBuilder({ min, max }), arrayConstraints).map((data) => TypedArrayClass.from(data), (value) => {\n        if (!(value instanceof TypedArrayClass))\n            throw new Error('Invalid type');\n        return [...value];\n    });\n}\nexports.typedIntArrayArbitraryArbitraryBuilder = typedIntArrayArbitraryArbitraryBuilder;\n"],"mappings":"AAAA;;AACA,IAAIA,MAAM,GAAI,QAAQ,KAAKA,MAAd,IAAyB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;EAClD,IAAIC,CAAC,GAAG,EAAR;;EACA,KAAK,IAAIC,CAAT,IAAcH,CAAd,EAAiB,IAAII,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCP,CAArC,EAAwCG,CAAxC,KAA8CF,CAAC,CAACO,OAAF,CAAUL,CAAV,IAAe,CAAjE,EACbD,CAAC,CAACC,CAAD,CAAD,GAAOH,CAAC,CAACG,CAAD,CAAR;;EACJ,IAAIH,CAAC,IAAI,IAAL,IAAa,OAAOI,MAAM,CAACK,qBAAd,KAAwC,UAAzD,EACI,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWP,CAAC,GAAGC,MAAM,CAACK,qBAAP,CAA6BT,CAA7B,CAApB,EAAqDU,CAAC,GAAGP,CAAC,CAACQ,MAA3D,EAAmED,CAAC,EAApE,EAAwE;IACpE,IAAIT,CAAC,CAACO,OAAF,CAAUL,CAAC,CAACO,CAAD,CAAX,IAAkB,CAAlB,IAAuBN,MAAM,CAACC,SAAP,CAAiBO,oBAAjB,CAAsCL,IAAtC,CAA2CP,CAA3C,EAA8CG,CAAC,CAACO,CAAD,CAA/C,CAA3B,EACIR,CAAC,CAACC,CAAC,CAACO,CAAD,CAAF,CAAD,GAAUV,CAAC,CAACG,CAAC,CAACO,CAAD,CAAF,CAAX;EACP;EACL,OAAOR,CAAP;AACH,CAVD;;AAWAE,MAAM,CAACS,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,sCAAR,GAAiD,KAAK,CAAtD;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,aAAD,CAAvB;;AACA,SAASF,sCAAT,CAAgDG,WAAhD,EAA6DC,UAA7D,EAAyEC,UAAzE,EAAqFC,eAArF,EAAsGC,gBAAtG,EAAwH;EACpH,MAAMC,aAAa,GAAGF,eAAe,CAACG,IAAtC;;EACA,MAAM;IAAEC,GAAG,GAAGN,UAAR;IAAoBO,GAAG,GAAGN;EAA1B,IAAyCF,WAA/C;EAAA,MAA4DS,gBAAgB,GAAG7B,MAAM,CAACoB,WAAD,EAAc,CAAC,KAAD,EAAQ,KAAR,CAAd,CAArF;;EACA,IAAIO,GAAG,GAAGC,GAAV,EAAe;IACX,MAAM,IAAIE,KAAJ,CAAW,2BAA0BL,aAAc,0CAAnD,CAAN;EACH;;EACD,IAAIE,GAAG,GAAGN,UAAV,EAAsB;IAClB,MAAM,IAAIS,KAAJ,CAAW,+BAA8BL,aAAc,0CAAyCJ,UAAW,EAA3G,CAAN;EACH;;EACD,IAAIO,GAAG,GAAGN,UAAV,EAAsB;IAClB,MAAM,IAAIQ,KAAJ,CAAW,+BAA8BL,aAAc,wCAAuCH,UAAW,EAAzG,CAAN;EACH;;EACD,OAAO,CAAC,GAAGJ,OAAO,CAACa,KAAZ,EAAmBP,gBAAgB,CAAC;IAAEG,GAAF;IAAOC;EAAP,CAAD,CAAnC,EAAmDC,gBAAnD,EAAqEG,GAArE,CAA0EC,IAAD,IAAUV,eAAe,CAACW,IAAhB,CAAqBD,IAArB,CAAnF,EAAgHjB,KAAD,IAAW;IAC7H,IAAI,EAAEA,KAAK,YAAYO,eAAnB,CAAJ,EACI,MAAM,IAAIO,KAAJ,CAAU,cAAV,CAAN;IACJ,OAAO,CAAC,GAAGd,KAAJ,CAAP;EACH,CAJM,CAAP;AAKH;;AACDD,OAAO,CAACE,sCAAR,GAAiDA,sCAAjD"},"metadata":{},"sourceType":"script"}
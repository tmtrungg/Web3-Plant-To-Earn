{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.asyncStringify = exports.possiblyAsyncStringify = exports.stringify = exports.stringifyInternal = exports.hasAsyncToStringMethod = exports.asyncToStringMethod = exports.hasToStringMethod = exports.toStringMethod = void 0;\nexports.toStringMethod = Symbol('fast-check/toStringMethod');\n\nfunction hasToStringMethod(instance) {\n  return instance !== null && (typeof instance === 'object' || typeof instance === 'function') && exports.toStringMethod in instance && typeof instance[exports.toStringMethod] === 'function';\n}\n\nexports.hasToStringMethod = hasToStringMethod;\nexports.asyncToStringMethod = Symbol('fast-check/asyncToStringMethod');\n\nfunction hasAsyncToStringMethod(instance) {\n  return instance !== null && (typeof instance === 'object' || typeof instance === 'function') && exports.asyncToStringMethod in instance && typeof instance[exports.asyncToStringMethod] === 'function';\n}\n\nexports.hasAsyncToStringMethod = hasAsyncToStringMethod;\nconst findSymbolNameRegex = /^Symbol\\((.*)\\)$/;\n\nfunction getSymbolDescription(s) {\n  if (s.description !== undefined) return s.description;\n  const m = findSymbolNameRegex.exec(String(s));\n  return m && m[1].length ? m[1] : null;\n}\n\nfunction stringifyNumber(numValue) {\n  switch (numValue) {\n    case 0:\n      return 1 / numValue === Number.NEGATIVE_INFINITY ? '-0' : '0';\n\n    case Number.NEGATIVE_INFINITY:\n      return 'Number.NEGATIVE_INFINITY';\n\n    case Number.POSITIVE_INFINITY:\n      return 'Number.POSITIVE_INFINITY';\n\n    default:\n      return numValue === numValue ? String(numValue) : 'Number.NaN';\n  }\n}\n\nfunction isSparseArray(arr) {\n  let previousNumberedIndex = -1;\n\n  for (const index in arr) {\n    const numberedIndex = Number(index);\n    if (numberedIndex !== previousNumberedIndex + 1) return true;\n    previousNumberedIndex = numberedIndex;\n  }\n\n  return previousNumberedIndex + 1 !== arr.length;\n}\n\nfunction stringifyInternal(value, previousValues, getAsyncContent) {\n  const currentValues = previousValues.concat([value]);\n\n  if (typeof value === 'object') {\n    if (previousValues.indexOf(value) !== -1) {\n      return '[cyclic]';\n    }\n  }\n\n  if (hasAsyncToStringMethod(value)) {\n    const content = getAsyncContent(value);\n\n    if (content.state === 'fulfilled') {\n      return content.value;\n    }\n  }\n\n  if (hasToStringMethod(value)) {\n    try {\n      return value[exports.toStringMethod]();\n    } catch (err) {}\n  }\n\n  switch (Object.prototype.toString.call(value)) {\n    case '[object Array]':\n      {\n        const arr = value;\n\n        if (arr.length >= 50 && isSparseArray(arr)) {\n          const assignments = [];\n\n          for (const index in arr) {\n            if (!Number.isNaN(Number(index))) assignments.push(`${index}:${stringifyInternal(arr[index], currentValues, getAsyncContent)}`);\n          }\n\n          return assignments.length !== 0 ? `Object.assign(Array(${arr.length}),{${assignments.join(',')}})` : `Array(${arr.length})`;\n        }\n\n        const stringifiedArray = arr.map(v => stringifyInternal(v, currentValues, getAsyncContent)).join(',');\n        return arr.length === 0 || arr.length - 1 in arr ? `[${stringifiedArray}]` : `[${stringifiedArray},]`;\n      }\n\n    case '[object BigInt]':\n      return `${value}n`;\n\n    case '[object Boolean]':\n      return typeof value === 'boolean' ? JSON.stringify(value) : `new Boolean(${JSON.stringify(value)})`;\n\n    case '[object Date]':\n      {\n        const d = value;\n        return Number.isNaN(d.getTime()) ? `new Date(NaN)` : `new Date(${JSON.stringify(d.toISOString())})`;\n      }\n\n    case '[object Map]':\n      return `new Map(${stringifyInternal(Array.from(value), currentValues, getAsyncContent)})`;\n\n    case '[object Null]':\n      return `null`;\n\n    case '[object Number]':\n      return typeof value === 'number' ? stringifyNumber(value) : `new Number(${stringifyNumber(Number(value))})`;\n\n    case '[object Object]':\n      {\n        try {\n          const toStringAccessor = value.toString;\n\n          if (typeof toStringAccessor === 'function' && toStringAccessor !== Object.prototype.toString) {\n            return value.toString();\n          }\n        } catch (err) {\n          return '[object Object]';\n        }\n\n        const mapper = k => `${k === '__proto__' ? '[\"__proto__\"]' : typeof k === 'symbol' ? `[${stringifyInternal(k, currentValues, getAsyncContent)}]` : JSON.stringify(k)}:${stringifyInternal(value[k], currentValues, getAsyncContent)}`;\n\n        const stringifiedProperties = [...Object.keys(value).map(mapper), ...Object.getOwnPropertySymbols(value).filter(s => {\n          const descriptor = Object.getOwnPropertyDescriptor(value, s);\n          return descriptor && descriptor.enumerable;\n        }).map(mapper)];\n        const rawRepr = '{' + stringifiedProperties.join(',') + '}';\n\n        if (Object.getPrototypeOf(value) === null) {\n          return rawRepr === '{}' ? 'Object.create(null)' : `Object.assign(Object.create(null),${rawRepr})`;\n        }\n\n        return rawRepr;\n      }\n\n    case '[object Set]':\n      return `new Set(${stringifyInternal(Array.from(value), currentValues, getAsyncContent)})`;\n\n    case '[object String]':\n      return typeof value === 'string' ? JSON.stringify(value) : `new String(${JSON.stringify(value)})`;\n\n    case '[object Symbol]':\n      {\n        const s = value;\n\n        if (Symbol.keyFor(s) !== undefined) {\n          return `Symbol.for(${JSON.stringify(Symbol.keyFor(s))})`;\n        }\n\n        const desc = getSymbolDescription(s);\n\n        if (desc === null) {\n          return 'Symbol()';\n        }\n\n        const knownSymbol = desc.startsWith('Symbol.') && Symbol[desc.substring(7)];\n        return s === knownSymbol ? desc : `Symbol(${JSON.stringify(desc)})`;\n      }\n\n    case '[object Promise]':\n      {\n        const promiseContent = getAsyncContent(value);\n\n        switch (promiseContent.state) {\n          case 'fulfilled':\n            return `Promise.resolve(${stringifyInternal(promiseContent.value, currentValues, getAsyncContent)})`;\n\n          case 'rejected':\n            return `Promise.reject(${stringifyInternal(promiseContent.value, currentValues, getAsyncContent)})`;\n\n          case 'pending':\n            return `new Promise(() => {/*pending*/})`;\n\n          case 'unknown':\n          default:\n            return `new Promise(() => {/*unknown*/})`;\n        }\n      }\n\n    case '[object Error]':\n      if (value instanceof Error) {\n        return `new Error(${stringifyInternal(value.message, currentValues, getAsyncContent)})`;\n      }\n\n      break;\n\n    case '[object Undefined]':\n      return `undefined`;\n\n    case '[object Int8Array]':\n    case '[object Uint8Array]':\n    case '[object Uint8ClampedArray]':\n    case '[object Int16Array]':\n    case '[object Uint16Array]':\n    case '[object Int32Array]':\n    case '[object Uint32Array]':\n    case '[object Float32Array]':\n    case '[object Float64Array]':\n    case '[object BigInt64Array]':\n    case '[object BigUint64Array]':\n      {\n        if (typeof Buffer !== 'undefined' && typeof Buffer.isBuffer === 'function' && Buffer.isBuffer(value)) {\n          return `Buffer.from(${stringifyInternal(Array.from(value.values()), currentValues, getAsyncContent)})`;\n        }\n\n        const valuePrototype = Object.getPrototypeOf(value);\n        const className = valuePrototype && valuePrototype.constructor && valuePrototype.constructor.name;\n\n        if (typeof className === 'string') {\n          const typedArray = value;\n          const valuesFromTypedArr = typedArray.values();\n          return `${className}.from(${stringifyInternal(Array.from(valuesFromTypedArr), currentValues, getAsyncContent)})`;\n        }\n\n        break;\n      }\n  }\n\n  try {\n    return value.toString();\n  } catch (_a) {\n    return Object.prototype.toString.call(value);\n  }\n}\n\nexports.stringifyInternal = stringifyInternal;\n\nfunction stringify(value) {\n  return stringifyInternal(value, [], () => ({\n    state: 'unknown',\n    value: undefined\n  }));\n}\n\nexports.stringify = stringify;\n\nfunction possiblyAsyncStringify(value) {\n  const stillPendingMarker = Symbol();\n  const pendingPromisesForCache = [];\n  const cache = new Map();\n\n  function createDelay0() {\n    let handleId = null;\n\n    const cancel = () => {\n      if (handleId !== null) {\n        clearTimeout(handleId);\n      }\n    };\n\n    const delay = new Promise(resolve => {\n      handleId = setTimeout(() => {\n        handleId = null;\n        resolve(stillPendingMarker);\n      }, 0);\n    });\n    return {\n      delay,\n      cancel\n    };\n  }\n\n  const unknownState = {\n    state: 'unknown',\n    value: undefined\n  };\n\n  const getAsyncContent = function getAsyncContent(data) {\n    const cacheKey = data;\n\n    if (cache.has(cacheKey)) {\n      return cache.get(cacheKey);\n    }\n\n    const delay0 = createDelay0();\n    const p = exports.asyncToStringMethod in data ? Promise.resolve().then(() => data[exports.asyncToStringMethod]()) : data;\n    p.catch(() => {});\n    pendingPromisesForCache.push(Promise.race([p, delay0.delay]).then(successValue => {\n      if (successValue === stillPendingMarker) cache.set(cacheKey, {\n        state: 'pending',\n        value: undefined\n      });else cache.set(cacheKey, {\n        state: 'fulfilled',\n        value: successValue\n      });\n      delay0.cancel();\n    }, errorValue => {\n      cache.set(cacheKey, {\n        state: 'rejected',\n        value: errorValue\n      });\n      delay0.cancel();\n    }));\n    cache.set(cacheKey, unknownState);\n    return unknownState;\n  };\n\n  function loop() {\n    const stringifiedValue = stringifyInternal(value, [], getAsyncContent);\n\n    if (pendingPromisesForCache.length === 0) {\n      return stringifiedValue;\n    }\n\n    return Promise.all(pendingPromisesForCache.splice(0)).then(loop);\n  }\n\n  return loop();\n}\n\nexports.possiblyAsyncStringify = possiblyAsyncStringify;\n\nasync function asyncStringify(value) {\n  return Promise.resolve(possiblyAsyncStringify(value));\n}\n\nexports.asyncStringify = asyncStringify;","map":{"version":3,"names":["Object","defineProperty","exports","value","asyncStringify","possiblyAsyncStringify","stringify","stringifyInternal","hasAsyncToStringMethod","asyncToStringMethod","hasToStringMethod","toStringMethod","Symbol","instance","findSymbolNameRegex","getSymbolDescription","s","description","undefined","m","exec","String","length","stringifyNumber","numValue","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","isSparseArray","arr","previousNumberedIndex","index","numberedIndex","previousValues","getAsyncContent","currentValues","concat","indexOf","content","state","err","prototype","toString","call","assignments","isNaN","push","join","stringifiedArray","map","v","JSON","d","getTime","toISOString","Array","from","toStringAccessor","mapper","k","stringifiedProperties","keys","getOwnPropertySymbols","filter","descriptor","getOwnPropertyDescriptor","enumerable","rawRepr","getPrototypeOf","keyFor","desc","knownSymbol","startsWith","substring","promiseContent","Error","message","Buffer","isBuffer","values","valuePrototype","className","constructor","name","typedArray","valuesFromTypedArr","_a","stillPendingMarker","pendingPromisesForCache","cache","Map","createDelay0","handleId","cancel","clearTimeout","delay","Promise","resolve","setTimeout","unknownState","data","cacheKey","has","get","delay0","p","then","catch","race","successValue","set","errorValue","loop","stringifiedValue","all","splice"],"sources":["/Users/tranminhtrung/Desktop/learn_web3/gamble/node_modules/fast-check/lib/utils/stringify.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.asyncStringify = exports.possiblyAsyncStringify = exports.stringify = exports.stringifyInternal = exports.hasAsyncToStringMethod = exports.asyncToStringMethod = exports.hasToStringMethod = exports.toStringMethod = void 0;\nexports.toStringMethod = Symbol('fast-check/toStringMethod');\nfunction hasToStringMethod(instance) {\n    return (instance !== null &&\n        (typeof instance === 'object' || typeof instance === 'function') &&\n        exports.toStringMethod in instance &&\n        typeof instance[exports.toStringMethod] === 'function');\n}\nexports.hasToStringMethod = hasToStringMethod;\nexports.asyncToStringMethod = Symbol('fast-check/asyncToStringMethod');\nfunction hasAsyncToStringMethod(instance) {\n    return (instance !== null &&\n        (typeof instance === 'object' || typeof instance === 'function') &&\n        exports.asyncToStringMethod in instance &&\n        typeof instance[exports.asyncToStringMethod] === 'function');\n}\nexports.hasAsyncToStringMethod = hasAsyncToStringMethod;\nconst findSymbolNameRegex = /^Symbol\\((.*)\\)$/;\nfunction getSymbolDescription(s) {\n    if (s.description !== undefined)\n        return s.description;\n    const m = findSymbolNameRegex.exec(String(s));\n    return m && m[1].length ? m[1] : null;\n}\nfunction stringifyNumber(numValue) {\n    switch (numValue) {\n        case 0:\n            return 1 / numValue === Number.NEGATIVE_INFINITY ? '-0' : '0';\n        case Number.NEGATIVE_INFINITY:\n            return 'Number.NEGATIVE_INFINITY';\n        case Number.POSITIVE_INFINITY:\n            return 'Number.POSITIVE_INFINITY';\n        default:\n            return numValue === numValue ? String(numValue) : 'Number.NaN';\n    }\n}\nfunction isSparseArray(arr) {\n    let previousNumberedIndex = -1;\n    for (const index in arr) {\n        const numberedIndex = Number(index);\n        if (numberedIndex !== previousNumberedIndex + 1)\n            return true;\n        previousNumberedIndex = numberedIndex;\n    }\n    return previousNumberedIndex + 1 !== arr.length;\n}\nfunction stringifyInternal(value, previousValues, getAsyncContent) {\n    const currentValues = previousValues.concat([value]);\n    if (typeof value === 'object') {\n        if (previousValues.indexOf(value) !== -1) {\n            return '[cyclic]';\n        }\n    }\n    if (hasAsyncToStringMethod(value)) {\n        const content = getAsyncContent(value);\n        if (content.state === 'fulfilled') {\n            return content.value;\n        }\n    }\n    if (hasToStringMethod(value)) {\n        try {\n            return value[exports.toStringMethod]();\n        }\n        catch (err) {\n        }\n    }\n    switch (Object.prototype.toString.call(value)) {\n        case '[object Array]': {\n            const arr = value;\n            if (arr.length >= 50 && isSparseArray(arr)) {\n                const assignments = [];\n                for (const index in arr) {\n                    if (!Number.isNaN(Number(index)))\n                        assignments.push(`${index}:${stringifyInternal(arr[index], currentValues, getAsyncContent)}`);\n                }\n                return assignments.length !== 0\n                    ? `Object.assign(Array(${arr.length}),{${assignments.join(',')}})`\n                    : `Array(${arr.length})`;\n            }\n            const stringifiedArray = arr.map((v) => stringifyInternal(v, currentValues, getAsyncContent)).join(',');\n            return arr.length === 0 || arr.length - 1 in arr ? `[${stringifiedArray}]` : `[${stringifiedArray},]`;\n        }\n        case '[object BigInt]':\n            return `${value}n`;\n        case '[object Boolean]':\n            return typeof value === 'boolean' ? JSON.stringify(value) : `new Boolean(${JSON.stringify(value)})`;\n        case '[object Date]': {\n            const d = value;\n            return Number.isNaN(d.getTime()) ? `new Date(NaN)` : `new Date(${JSON.stringify(d.toISOString())})`;\n        }\n        case '[object Map]':\n            return `new Map(${stringifyInternal(Array.from(value), currentValues, getAsyncContent)})`;\n        case '[object Null]':\n            return `null`;\n        case '[object Number]':\n            return typeof value === 'number' ? stringifyNumber(value) : `new Number(${stringifyNumber(Number(value))})`;\n        case '[object Object]': {\n            try {\n                const toStringAccessor = value.toString;\n                if (typeof toStringAccessor === 'function' && toStringAccessor !== Object.prototype.toString) {\n                    return value.toString();\n                }\n            }\n            catch (err) {\n                return '[object Object]';\n            }\n            const mapper = (k) => `${k === '__proto__'\n                ? '[\"__proto__\"]'\n                : typeof k === 'symbol'\n                    ? `[${stringifyInternal(k, currentValues, getAsyncContent)}]`\n                    : JSON.stringify(k)}:${stringifyInternal(value[k], currentValues, getAsyncContent)}`;\n            const stringifiedProperties = [\n                ...Object.keys(value).map(mapper),\n                ...Object.getOwnPropertySymbols(value)\n                    .filter((s) => {\n                    const descriptor = Object.getOwnPropertyDescriptor(value, s);\n                    return descriptor && descriptor.enumerable;\n                })\n                    .map(mapper),\n            ];\n            const rawRepr = '{' + stringifiedProperties.join(',') + '}';\n            if (Object.getPrototypeOf(value) === null) {\n                return rawRepr === '{}' ? 'Object.create(null)' : `Object.assign(Object.create(null),${rawRepr})`;\n            }\n            return rawRepr;\n        }\n        case '[object Set]':\n            return `new Set(${stringifyInternal(Array.from(value), currentValues, getAsyncContent)})`;\n        case '[object String]':\n            return typeof value === 'string' ? JSON.stringify(value) : `new String(${JSON.stringify(value)})`;\n        case '[object Symbol]': {\n            const s = value;\n            if (Symbol.keyFor(s) !== undefined) {\n                return `Symbol.for(${JSON.stringify(Symbol.keyFor(s))})`;\n            }\n            const desc = getSymbolDescription(s);\n            if (desc === null) {\n                return 'Symbol()';\n            }\n            const knownSymbol = desc.startsWith('Symbol.') && Symbol[desc.substring(7)];\n            return s === knownSymbol ? desc : `Symbol(${JSON.stringify(desc)})`;\n        }\n        case '[object Promise]': {\n            const promiseContent = getAsyncContent(value);\n            switch (promiseContent.state) {\n                case 'fulfilled':\n                    return `Promise.resolve(${stringifyInternal(promiseContent.value, currentValues, getAsyncContent)})`;\n                case 'rejected':\n                    return `Promise.reject(${stringifyInternal(promiseContent.value, currentValues, getAsyncContent)})`;\n                case 'pending':\n                    return `new Promise(() => {/*pending*/})`;\n                case 'unknown':\n                default:\n                    return `new Promise(() => {/*unknown*/})`;\n            }\n        }\n        case '[object Error]':\n            if (value instanceof Error) {\n                return `new Error(${stringifyInternal(value.message, currentValues, getAsyncContent)})`;\n            }\n            break;\n        case '[object Undefined]':\n            return `undefined`;\n        case '[object Int8Array]':\n        case '[object Uint8Array]':\n        case '[object Uint8ClampedArray]':\n        case '[object Int16Array]':\n        case '[object Uint16Array]':\n        case '[object Int32Array]':\n        case '[object Uint32Array]':\n        case '[object Float32Array]':\n        case '[object Float64Array]':\n        case '[object BigInt64Array]':\n        case '[object BigUint64Array]': {\n            if (typeof Buffer !== 'undefined' && typeof Buffer.isBuffer === 'function' && Buffer.isBuffer(value)) {\n                return `Buffer.from(${stringifyInternal(Array.from(value.values()), currentValues, getAsyncContent)})`;\n            }\n            const valuePrototype = Object.getPrototypeOf(value);\n            const className = valuePrototype && valuePrototype.constructor && valuePrototype.constructor.name;\n            if (typeof className === 'string') {\n                const typedArray = value;\n                const valuesFromTypedArr = typedArray.values();\n                return `${className}.from(${stringifyInternal(Array.from(valuesFromTypedArr), currentValues, getAsyncContent)})`;\n            }\n            break;\n        }\n    }\n    try {\n        return value.toString();\n    }\n    catch (_a) {\n        return Object.prototype.toString.call(value);\n    }\n}\nexports.stringifyInternal = stringifyInternal;\nfunction stringify(value) {\n    return stringifyInternal(value, [], () => ({ state: 'unknown', value: undefined }));\n}\nexports.stringify = stringify;\nfunction possiblyAsyncStringify(value) {\n    const stillPendingMarker = Symbol();\n    const pendingPromisesForCache = [];\n    const cache = new Map();\n    function createDelay0() {\n        let handleId = null;\n        const cancel = () => {\n            if (handleId !== null) {\n                clearTimeout(handleId);\n            }\n        };\n        const delay = new Promise((resolve) => {\n            handleId = setTimeout(() => {\n                handleId = null;\n                resolve(stillPendingMarker);\n            }, 0);\n        });\n        return { delay, cancel };\n    }\n    const unknownState = { state: 'unknown', value: undefined };\n    const getAsyncContent = function getAsyncContent(data) {\n        const cacheKey = data;\n        if (cache.has(cacheKey)) {\n            return cache.get(cacheKey);\n        }\n        const delay0 = createDelay0();\n        const p = exports.asyncToStringMethod in data\n            ? Promise.resolve().then(() => data[exports.asyncToStringMethod]())\n            : data;\n        p.catch(() => { });\n        pendingPromisesForCache.push(Promise.race([p, delay0.delay]).then((successValue) => {\n            if (successValue === stillPendingMarker)\n                cache.set(cacheKey, { state: 'pending', value: undefined });\n            else\n                cache.set(cacheKey, { state: 'fulfilled', value: successValue });\n            delay0.cancel();\n        }, (errorValue) => {\n            cache.set(cacheKey, { state: 'rejected', value: errorValue });\n            delay0.cancel();\n        }));\n        cache.set(cacheKey, unknownState);\n        return unknownState;\n    };\n    function loop() {\n        const stringifiedValue = stringifyInternal(value, [], getAsyncContent);\n        if (pendingPromisesForCache.length === 0) {\n            return stringifiedValue;\n        }\n        return Promise.all(pendingPromisesForCache.splice(0)).then(loop);\n    }\n    return loop();\n}\nexports.possiblyAsyncStringify = possiblyAsyncStringify;\nasync function asyncStringify(value) {\n    return Promise.resolve(possiblyAsyncStringify(value));\n}\nexports.asyncStringify = asyncStringify;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
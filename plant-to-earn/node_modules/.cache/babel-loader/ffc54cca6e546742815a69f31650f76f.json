{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildAlphaNumericPercentArbitrary = exports.buildAlphaNumericArbitrary = exports.buildLowerAlphaNumericArbitrary = exports.buildLowerAlphaArbitrary = void 0;\n\nconst fullUnicode_1 = require(\"../../fullUnicode\");\n\nconst oneof_1 = require(\"../../oneof\");\n\nconst mapToConstant_1 = require(\"../../mapToConstant\");\n\nconst lowerCaseMapper = {\n  num: 26,\n  build: v => String.fromCharCode(v + 0x61)\n};\nconst upperCaseMapper = {\n  num: 26,\n  build: v => String.fromCharCode(v + 0x41)\n};\nconst numericMapper = {\n  num: 10,\n  build: v => String.fromCharCode(v + 0x30)\n};\n\nfunction percentCharArbMapper(c) {\n  const encoded = encodeURIComponent(c);\n  return c !== encoded ? encoded : `%${c.charCodeAt(0).toString(16)}`;\n}\n\nfunction percentCharArbUnmapper(value) {\n  if (typeof value !== 'string') {\n    throw new Error('Unsupported');\n  }\n\n  const decoded = decodeURIComponent(value);\n  return decoded;\n}\n\nconst percentCharArb = (0, fullUnicode_1.fullUnicode)().map(percentCharArbMapper, percentCharArbUnmapper);\n\nconst buildLowerAlphaArbitrary = others => (0, mapToConstant_1.mapToConstant)(lowerCaseMapper, {\n  num: others.length,\n  build: v => others[v]\n});\n\nexports.buildLowerAlphaArbitrary = buildLowerAlphaArbitrary;\n\nconst buildLowerAlphaNumericArbitrary = others => (0, mapToConstant_1.mapToConstant)(lowerCaseMapper, numericMapper, {\n  num: others.length,\n  build: v => others[v]\n});\n\nexports.buildLowerAlphaNumericArbitrary = buildLowerAlphaNumericArbitrary;\n\nconst buildAlphaNumericArbitrary = others => (0, mapToConstant_1.mapToConstant)(lowerCaseMapper, upperCaseMapper, numericMapper, {\n  num: others.length,\n  build: v => others[v]\n});\n\nexports.buildAlphaNumericArbitrary = buildAlphaNumericArbitrary;\n\nconst buildAlphaNumericPercentArbitrary = others => (0, oneof_1.oneof)({\n  weight: 10,\n  arbitrary: (0, exports.buildAlphaNumericArbitrary)(others)\n}, {\n  weight: 1,\n  arbitrary: percentCharArb\n});\n\nexports.buildAlphaNumericPercentArbitrary = buildAlphaNumericPercentArbitrary;","map":{"version":3,"names":["Object","defineProperty","exports","value","buildAlphaNumericPercentArbitrary","buildAlphaNumericArbitrary","buildLowerAlphaNumericArbitrary","buildLowerAlphaArbitrary","fullUnicode_1","require","oneof_1","mapToConstant_1","lowerCaseMapper","num","build","v","String","fromCharCode","upperCaseMapper","numericMapper","percentCharArbMapper","c","encoded","encodeURIComponent","charCodeAt","toString","percentCharArbUnmapper","Error","decoded","decodeURIComponent","percentCharArb","fullUnicode","map","others","mapToConstant","length","oneof","weight","arbitrary"],"sources":["/Users/tranminhtrung/Desktop/learn_web3/gamble/node_modules/fast-check/lib/arbitrary/_internals/builders/CharacterRangeArbitraryBuilder.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildAlphaNumericPercentArbitrary = exports.buildAlphaNumericArbitrary = exports.buildLowerAlphaNumericArbitrary = exports.buildLowerAlphaArbitrary = void 0;\nconst fullUnicode_1 = require(\"../../fullUnicode\");\nconst oneof_1 = require(\"../../oneof\");\nconst mapToConstant_1 = require(\"../../mapToConstant\");\nconst lowerCaseMapper = { num: 26, build: (v) => String.fromCharCode(v + 0x61) };\nconst upperCaseMapper = { num: 26, build: (v) => String.fromCharCode(v + 0x41) };\nconst numericMapper = { num: 10, build: (v) => String.fromCharCode(v + 0x30) };\nfunction percentCharArbMapper(c) {\n    const encoded = encodeURIComponent(c);\n    return c !== encoded ? encoded : `%${c.charCodeAt(0).toString(16)}`;\n}\nfunction percentCharArbUnmapper(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Unsupported');\n    }\n    const decoded = decodeURIComponent(value);\n    return decoded;\n}\nconst percentCharArb = (0, fullUnicode_1.fullUnicode)().map(percentCharArbMapper, percentCharArbUnmapper);\nconst buildLowerAlphaArbitrary = (others) => (0, mapToConstant_1.mapToConstant)(lowerCaseMapper, { num: others.length, build: (v) => others[v] });\nexports.buildLowerAlphaArbitrary = buildLowerAlphaArbitrary;\nconst buildLowerAlphaNumericArbitrary = (others) => (0, mapToConstant_1.mapToConstant)(lowerCaseMapper, numericMapper, { num: others.length, build: (v) => others[v] });\nexports.buildLowerAlphaNumericArbitrary = buildLowerAlphaNumericArbitrary;\nconst buildAlphaNumericArbitrary = (others) => (0, mapToConstant_1.mapToConstant)(lowerCaseMapper, upperCaseMapper, numericMapper, { num: others.length, build: (v) => others[v] });\nexports.buildAlphaNumericArbitrary = buildAlphaNumericArbitrary;\nconst buildAlphaNumericPercentArbitrary = (others) => (0, oneof_1.oneof)({ weight: 10, arbitrary: (0, exports.buildAlphaNumericArbitrary)(others) }, { weight: 1, arbitrary: percentCharArb });\nexports.buildAlphaNumericPercentArbitrary = buildAlphaNumericPercentArbitrary;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}